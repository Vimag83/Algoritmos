@inproceedings{10027412,
    abstract = {Computational thinking is the process sequence of solving problems and behaves a method of systematic solving problems. Computational thinking is essentially a view of systematic information processing process. In essence, developing the computational thinking of middle school students is to improve their problem-solving ability and the corresponding practical accomplishment. The instructional activity design based on six links of problem solving can well meet the need of cultivating students’ computational thinking. The instructional mode of systematic problem solving in middle school can improve students’ learning effects and satisfaction, and promote students’ computational thinking ability significantly. The method of systematic information processing process can be trained.},
    author = {Zhao, Miaomiao and Hu, Weixing},
    booktitle = {2022 3rd International Conference on Education, Knowledge and Information Management (ICEKIM)},
    doi = {10.1109/ICEKIM55072.2022.00225},
    issn = {},
    keywords = {Training;Analytical models;Systematics;Computational modeling;Information processing;Information management;Problem-solving;component;Computation;Computational thinking;Middle school information technology class},
    month = {Jan},
    number = {},
    pages = {1037-1040},
    title = {A practical research on the training of middle school students' computational thinking based on problem solving in systematic information process view},
    volume = {},
    year = {2022}
}

@inproceedings{10086259,
    abstract = {The outbreak of COVID-19 has impacted traditional teaching methods in schools, and blended teaching in the post-pandemic has gradually become a hot topic of research in higher education. Computational thinking, as one of the core literacies to be acquired in the 21st century, can help students realize the importance of computers as well as enable them to solve specific problems more effectively when facing real-life situations. The article takes the C language programming course as an example, analyzes the problems faced in teaching in the post-pandemic, introduces the concept of computational thinking and integrates it into all aspects of blended teaching design, pays attention to students' individual differences, and proposes a blended teaching model based on computational thinking and puts it into practice. The results show that this teaching model can improve students' learning performance, exercise students' computational thinking skills, and promote blended teaching reform and students' personalized development.},
    author = {Zhao, Fengzhi and Liu, Sijie},
    booktitle = {2022 12th International Conference on Information Technology in Medicine and Education (ITME)},
    doi = {10.1109/ITME56794.2022.00048},
    issn = {2474-3828},
    keywords = {Computers;Training;COVID-19;Computational modeling;Education;C languages;Problem-solving;computional thinking;blended teaching;teaching reform;personalized learning},
    month = {Nov},
    number = {},
    pages = {184-188},
    title = {Research on blended teaching reform based on computational thinking},
    volume = {},
    year = {2022}
}

@inproceedings{10125117,
    abstract = {Recent trends in Science, Technology, Engineering, and Mathematics (STEM) education are focused on developing problem-solving skills and computational thinking and empowering students with the STEM discipline's knowledge to solve real-world problems. STEM incorporates an interdisciplinary approach that includes inquiry, analysis, critical thinking, practical experimentation, and cooperative problem-solving. Technological advancements are offering new ways to integrate new tools such as drones, robotics and gaming in teaching and learning practices and modify the pedagogical approaches that are more appealing and engaging. This paper presents an innovative pedagogical approach and practice that integrate drone technology and block-based programming to foster students' computation thinking in a STEM context. The block-based visual programming languages provide an interactive environment to connect the blocks and write programs. The study was conducted in six Australian schools. Students were assigned projects to automate drones using the DroneBlocks app and make programs to fly the drone in different geometrical patterns; straight line, arch, rectangle, triangles and zig-zag and integrate the various manoeuvres; bounce, 8D flips, and throw & go along flight paths. Students' computational thinking development was examined with an emphasis on their performance in formulating and problem-solving. Results have shown that integrated drone and programming pedagogy contributed significantly to students' learning of developing computational thinking for problem-solving and decomposing a problem into smaller parts in a sequence that includes mathematical algorithms to write programs.},
    author = {Sattar, Farha and Nawaz, Muhammad},
    booktitle = {2023 IEEE Global Engineering Education Conference (EDUCON)},
    doi = {10.1109/EDUCON54358.2023.10125117},
    issn = {2165-9567},
    keywords = {Visualization;Writing;Encoding;Pattern recognition;Problem-solving;Task analysis;Programming profession;Drone Technology;Coding;Computational Thinking;Block-based Programming;Tello Edu Drones},
    month = {May},
    number = {},
    pages = {1-5},
    title = {Developing Computational Thinking in STEM Education with Drones},
    volume = {},
    year = {2023}
}

@inproceedings{10159750,
    abstract = {Critical and computational thinking in primary and secondary education in recent years shows growing importance in methodical approaches used in the classroom. Although many examples exist for using critical and computational thinking in STEM educational area, the social sciences i.e., non-STEM areas were somehow left out due to the relatively more difficult design of such content, especially in the part of the development of computational thinking. In that context, in this paper we present one way of using critical and computational thinking in non-STEM education, more specifically on the example of historical data sources, through the use of programming in Python. As an example, we use historical data for Trans-Atlantic Slave Trade routes, that were the largest long-distance coerced movement of people in history up to the mid-nineteenth century, for connecting concepts of databases, Data Science and programming for development of critical and computational thinking in context of history science. This way of using modern approaches in classroom should give teachers and pupils a broader picture of importance of interdisciplinary education for critical and computational thinking development through STEM and non-STEM classes that give pupils novel skills needed for future labor market.},
    author = {Vlahović, Ines and Biškupić, Ivana Ogrizek},
    booktitle = {2023 46th MIPRO ICT and Electronics Convention (MIPRO)},
    doi = {10.23919/MIPRO57284.2023.10159750},
    issn = {2623-8764},
    keywords = {Correlation;Soft sensors;Education;Social sciences;Data science;History;Pupils;Critical Thinking;Computational Thinking;STEM;non-STEM;Data Science;programming;Python;history;Trans-Atlantic Slave Trade routes},
    month = {May},
    number = {},
    pages = {672-677},
    title = {Fostering Critical and Computational Thinking in the Field of Primary and Secondary Education in non-STEM Subjects by Using Data Sets and Applications},
    volume = {},
    year = {2023}
}

@article{10213395,
    abstract = {Contribution: This study represents the first systematic attempt to develop Science, Technology, Engineering, Arts, and Mathematics (STEAM) integrated project-based learning (PBL) as a transdisciplinary teaching method for fostering students’ creativity and computational thinking (CT) skills. Background: With the growing importance of creativity and CT skills in the modern world, there is a need for innovative teaching methods that can effectively nurture these abilities in students. This study explores the potential of integrating STEAM into PBL as a transdisciplinary teaching approach to address this need. Intended Outcomes: The outcomes of this approach include significant improvements in various dimensions of students’ creativity (fluency, flexibility, originality, and elaboration) and enhanced CT skills, particularly in medium and hard tasks. Application Design: The study involved 54 junior high school seventh-graders, with 28 students in the experimental group and 26 students in the comparison group. The experimental group was exposed to a semester of STEAM PBL, while the comparison group followed the regular curriculum. Findings: After a semester of STEAM PBL, the experimental group demonstrated significant improvements in creativity dimensions, while the comparison group showed no significant changes. In terms of CT skills, the experimental group exhibited significant improvements in medium and hard tasks, whereas the comparison group did not. These results highlight the potential benefits of integrating STEAM into PBL as a transdisciplinary teaching approach for enhancing students’ creativity and CT skills. The implications for educational practice and future research are discussed in depth.},
    author = {Chang, Chu-Yang and Du, Zhengyi and Kuo, Hsu-Chan and Chang, Chih-Ching},
    doi = {10.1109/TE.2023.3297221},
    issn = {1557-9638},
    journal = {IEEE Transactions on Education},
    keywords = {Creativity;Education;Art;STEM;Games;Technological innovation;Task analysis;Computational thinking (CT);creativity;design thinking (DT);project-based learning (PBL);Science;Technology;Engineering;Arts;and Mathematics (STEAM)},
    month = {Dec},
    number = {6},
    pages = {673-681},
    title = {Investigating the Impact of Design Thinking-Based STEAM PBL on Students’ Creativity and Computational Thinking},
    volume = {66},
    year = {2023}
}

@inproceedings{10260990,
    abstract = {Computational Thinking (CT) is a way to structure thinking to solve problems, which develops cognitive skills. Educational Digital Games (EDG) are a potential tool to work with CT, stimulating the student's interest and learning. Still, to make these games playable by children with Intellectual disabilities (ID), it is necessary to have adaptations suitable to their educational needs. Therefore, this paper presents the development and evaluation of the EDG “Pensar e Vestir” (PeV). This game addresses a daily life activity, the process of choosing clothes and the act of wearing them, and aims to promote the development of CT in children both neurotypical and with ID. The development process was supported by ID, Education, and Specialized Education Treatment specialists based on accessibility guidelines. In the end, there were two evaluations, firstly with the specialists and then with Computation students, to validate the functional and technical requirements. Currently, the game is in evaluation by its target audience.},
    author = {Geremias, Matheus Soppa and Dutra, Taynara Cerigueli and Gasparini, Isabela and Maschio, Eleandro},
    booktitle = {2023 IEEE International Conference on Advanced Learning Technologies (ICALT)},
    doi = {10.1109/ICALT58122.2023.00036},
    issn = {2161-377X},
    keywords = {Technical requirements;Computer science;Heat treatment;Design methodology;Education;Games;Pattern recognition;computational thinking;educational digital games;intellectual disability},
    month = {July},
    number = {},
    pages = {105-107},
    title = {An Educational Game to Promote the Development of Computational Thinking in Children Both Neurotypical and with Intellectual Disabilities},
    volume = {},
    year = {2023}
}

@inproceedings{10261600,
    abstract = {Computational thinking is the third major mode of thinking in the age of artificial intelligence. Many primary and secondary schools adopt graphical programming as an important way for students' computational thinking development. However, elementary school students have less self-control in learning and are more dependent on teachers, so timely and effective teaching interaction is an important guarantee for the realization of the teaching goals of graphical programming. Through three rounds of action research, the essay investigated the impact of teaching interaction strategies on the development of students' computational thinking. The findings show that students are satisfied with the designed interaction strategies, and the interaction strategies can significantly improve students' computational thinking ability and level.},
    author = {Wang, Fan and Chen, Lan and Wang, Wei},
    booktitle = {2023 5th International Conference on Computer Science and Technologies in Education (CSTE)},
    doi = {10.1109/CSTE59648.2023.00009},
    issn = {},
    keywords = {Education;Artificial intelligence;Programming profession;computational thinking;computer-assisted learning;graphical programing;teaching interaction},
    month = {April},
    number = {},
    pages = {10-14},
    title = {Design and Effectiveness Analysis of Interactive Strategies for Teaching Graphical Programming Oriented to Cultivate Computational Thinking},
    volume = {},
    year = {2023}
}

@inproceedings{10261627,
    abstract = {Computational thinking is an important concept that is currently receiving widespread attention in the international computing community. Teaching programming is an effective way to develop students' computational thinking. Students in adult colleges and universities face the pressure of study and work, and there is a need to improve their computational thinking skills. In this paper, we design and develop a set of programming activities based on computational thinking development for adult college students, and study the changes in students' computational thinking before and after they participate in the activities. It provides a reference for frontline teachers and related researchers to design programming activities and conduct research in computational thinking.},
    author = {Chen, Jiefei},
    booktitle = {2023 5th International Conference on Computer Science and Technologies in Education (CSTE)},
    doi = {10.1109/CSTE59648.2023.00021},
    issn = {},
    keywords = {Education;Programming profession;Faces;computational thinking;programming;activity design},
    month = {April},
    number = {},
    pages = {81-85},
    title = {Study on Teaching Programming in Adult Colleges Based on the Cultivation of Computational Thinking},
    volume = {},
    year = {2023}
}

@inproceedings{10361088,
    abstract = {Computational thinking is advocated as a skill that everyone should possess, and stem content and background can be conducive to the learning of computational thinking. This study constructed a theoretical model of the impact of stem courses on students’ computational thinking, and measured the mediating effects of problem solving skills and stem attitudes on stem courses and students’ computational thinking. The study included a questionnaire of 1870 secondary school students and a descriptive, correlational and mediating analysis. The results show that stem courses can predict students’ computational thinking through students’ problem solving ability and students’ attitude towards stem. The results of this study have a positive reference value for discussing the factors affecting students’ computational thinking, implementing stem course education, improving students’ problem-solving ability and enhancing students’ attitude towards stem.},
    author = {Zhang, Jiaying and Zhang, Yi and Lin, Yuru},
    booktitle = {2023 International Symposium on Educational Technology (ISET)},
    doi = {10.1109/ISET58841.2023.00023},
    issn = {2766-2144},
    keywords = {Computational modeling;Educational technology;Extensibility;Problem-solving;Mediation;Computational thinking;stem course;Problem Solving Ability;stem Attitude},
    month = {July},
    number = {},
    pages = {74-78},
    title = {The Impact of stem Courses on Students’ Computational Thinking: Mediation based on problem solving ability and stem attitude},
    volume = {},
    year = {2023}
}

@inproceedings{10469197,
    abstract = {The primary objective of this research was to investigate effective learning sequences starting with computational thinking, programming, or both. We experimented with and analyzed the learning sequence of students from the Department of Computer Engineering, Information Management, and Mechanical Engineering. The findings indicated that the students of the Department of Computer Engineering possessed prior experiences in programming or computational thinking. Their learning sequences limitedly impacted learning outcomes. Conversely, for the students of the Department of Information Management, learning computational thinking before programming did not result in better learning outcomes, emphasizing the need for coherence in courses. The students of the Department of Mechanical Engineering showed the practical value of computational thinking in non-IT disciplines, particularly in using specialized software such as MATLAB. For students with foundational knowledge, the learning sequence between learning computational thinking and programming was less significant. However, for beginners or those from non-IT backgrounds, effective learning required the coherence and integration of courses. Thus, it is required to maintain cross-course coherence and establish links between computational thinking and programming skills to offer a more in-depth learning experience.},
    author = {Lai, Chien-Hung and Hsieh, Cheng-Han},
    booktitle = {2023 IEEE 3rd International Conference on Social Sciences and Intelligence Management (SSIM)},
    doi = {10.1109/SSIM59263.2023.10469197},
    issn = {},
    keywords = {Training;Systematics;Social sciences;Coherence;Programming;Software;Information management;computational thinking;programming;learning sequence;course coherence;interdisciplinary application},
    month = {Dec},
    number = {},
    pages = {175-179},
    title = {Exploring the Impact of the Learning Sequence of Computational Thinking and Programming on Learning Outcomes},
    volume = {},
    year = {2023}
}

@inproceedings{10487449,
    abstract = {This article introduces an exploratory method for automatically grading programming exam questions using syntactic analysis. The target problem is the lack of a robust, scalable, and automated method to analyze computational thinking skills from source code written by elementary school students. The proposed method uses a variety of techniques to assess student responses, including analyzing the programming structure, programming correctness, and code execution based on certain parameters defined during the exercise specification. Analysis of the source code and evaluation of the answers to the exercises are carried out using high performance computing to improve the response time of the system. This preliminary work will contribute to a robust method for automated exam scoring, which is expected to assess and support the development of computational thinking among students.},
    author = {Gonzalez-Torres, Antonio and Ramirez-Trejos, Elliot and Sancho-Chavarria, Lilliana and Navas-Su, Jose and Garita, Cesar and Monge-Fallas, Jorge},
    booktitle = {2023 Congress in Computer Science, Computer Engineering, & Applied Computing (CSCE)},
    doi = {10.1109/CSCE60160.2023.00181},
    issn = {},
    keywords = {Codes;Source coding;High performance computing;Prototypes;Cloning;Programming;Syntactics;Automatic evaluation;computational thinking;source code analysis;abstract syntax trees},
    month = {July},
    number = {},
    pages = {1090-1095},
    title = {Towards the Assessment of Basic Computational Thinking Skills Using Syntactic Analysis Techniques},
    volume = {},
    year = {2023}
}

@inproceedings{10496944,
    abstract = {Computational thinking assessment is an important part of testing the effectiveness of computational thinking cultivation. However, the existing computational thinking assessments still suffer from the problem of insufficient examination of non-cognitive factors, leading to the lack of validity of its assessment results. Since the iceberg model can comprehensively and deeply explore individual characteristics, this paper draws on the division idea of the model and divides computational thinking into explicit computational thinking the basic knowledge required to solve problems using computational thinking and implicit computational thinking the internal psychological characteristics of individuals in the process of using computational thinking. A comprehensive assessment framework of computational thinking is constructed, which contains five dimensions: knowledge and skills, self-efficacy, internet attitude, learning motivation, and thinking style. Finally, its application in the hierarchical teaching of computational thinking and suggestions for personalized teaching programs are given in order to promote the development of personalized education in computational thinking.},
    author = {Zhou, Xuchen and Zhang, Wei and Wang, Shengming and Chen, Hao},
    booktitle = {2023 5th International Workshop on Artificial Intelligence and Education (WAIE)},
    doi = {10.1109/WAIE60568.2023.00025},
    issn = {},
    keywords = {Computational modeling;Conferences;Education;Psychology;Icebergs;Artificial intelligence;Testing;computational thinking;computational thinking assessment;iceberg model;assessment framework;computational thinking education},
    month = {Sep.},
    number = {},
    pages = {96-100},
    title = {Construction and Application of a Computational Thinking Assessment Framework from the Perspective of the Iceberg Model},
    volume = {},
    year = {2023}
}

@inproceedings{10496968,
    abstract = {To better understand the impact of students' personality on their computational thinking (CT), this paper develops a CT evaluation tool for college students. Correlation analysis is used to explore the relationship between students' computational thinking skills (CTS) and their five personality traits: extraversion, agreeableness, conscientiousness, neuroticism, and openness. 219 college students completed the CT Assessment Test and the Big Five Personality Inventory. The results showed that there were statistically significant correlations between CTS and extraversion, conscientiousness, and openness, among which openness had the greatest impact on CTS, and extraversion and conscientiousness had moderate effects on CTS. These results are consistent with the conclusions of most related literatures, confirming the existence of non-cognitive influencing factors of CT. Based on these findings, this paper recommends that teachers can pay attention to the individual differences of students from the perspective of personality, and provide them with suitable education to comprehensively improve students' CTS.},
    author = {Zhang, Wei and Song, Lingling and Zeng, Xinyao and Li, Panpan},
    booktitle = {2023 5th International Workshop on Artificial Intelligence and Education (WAIE)},
    doi = {10.1109/WAIE60568.2023.00026},
    issn = {},
    keywords = {Correlation;Conferences;Computational modeling;Education;Artificial intelligence;computational thinking;personality traits;Big Five model;computational thinking evaluation},
    month = {Sep.},
    number = {},
    pages = {101-105},
    title = {Exploring the Relationship Between Computational Thinking and Personality Traits},
    volume = {},
    year = {2023}
}

@inproceedings{10505497,
    abstract = {With the rapid development of computer technology, computational thinking, as one of the core literacy elements of information technology majors, has been widely noticed, and at the same time, it has gradually become one of the core competencies cultivated by education and teaching. This paper uses CiteSpace to visualize and analyze the Chinese core papers related to computational thinking included in CNKI. By studying the current situation of domestic research on computational thinking and related hot keywords, it aims to explore the prospects for the application of computational thinking in secondary education, try to incorporate the educational model of C elements in STEM education, and provide research ideas for the cultivation of computational thinking ability of secondary students.},
    author = {Wang, Yiwei and Xu, Liancheng},
    booktitle = {2023 13th International Conference on Information Technology in Medicine and Education (ITME)},
    doi = {10.1109/ITME60234.2023.00042},
    issn = {2474-3828},
    keywords = {Computer science;Computational modeling;Education;Data visualization;Organizations;Market research;Information age;computational thinking;information technology;STEM education;vocational secondary education;CiteSpace},
    month = {Nov},
    number = {},
    pages = {161-165},
    title = {Hot Spots and Trends of Computational Thinking Research in China CiteSpace visualization and analysis based on CNKI data},
    volume = {},
    year = {2023}
}

@article{10530940,
    abstract = {Contribution: This article proposes a new theoretical model with a goal to develop future human computational thinking (CT) in foundational computer science (CS) education. The model blends six critical types of thinking, i.e., logical thinking, systems thinking, sustainable thinking, strategic thinking, creative thinking, and responsible thinking into the design of a first-year undergraduate programming course. The study describes a creative blended pedagogy that embeds the proposed model into the course plan.Background: The emergence of artificial intelligent systems such as large language models from a knowledge provider perspective, coupled with a gradual change in post-pandemic outlook of education challenge the relevance and raises concerns about the future of education. The 21st-century human CT requirements, viz., learning to code (skill) and thinking computationally (competency), will be inadequate in the future. Moreover, there is substantial evidence which shows that most introductory programming courses fail to integrate critical elements like ethics and responsibility as part of the course.Intended Outcomes: The authors anticipate experiential learning models such as this has immense potential to future-proof CS education, as well as make future software engineers responsible citizens.Application Design: The proposed model blends six types of thinking into the design and activities of the course. The underlying theoretical basis of these activities revolve around three key principles: 1) experiential learning; 2) self-reflection; and 3) peer learning.Findings: This case study from a liberal educational institution in India qualitatively shows evidence of students developing six critical elements of thinking that shapes their future CT ability.},
    author = {Kalluri, Balaji and Prasad, Prajish and Sharma, Prakrati and Chippa, Divyaansh},
    doi = {10.1109/TE.2024.3394060},
    issn = {1557-9638},
    journal = {IEEE Transactions on Education},
    keywords = {Education;Sustainable development;Computational modeling;Systems thinking;Programming profession;Software systems;Green products;21st-century skills;computer science (CS);creative pedagogy;foundational education;future thinking},
    month = {Dec},
    number = {6},
    pages = {944-953},
    title = {Developing Future Computational Thinking in Foundational CS Education: A Case Study From a Liberal Education University in India},
    volume = {67},
    year = {2024}
}

@inproceedings{10541025,
    abstract = {Computational thinking is a crucial skill for students to analyze and solve problems, and programming education serves as an important pathway to cultivate computational thinking. This study combines relevant literature and utilizes Scratch, a visual programming software, to construct a gamified teaching model for Scratch courses. A quasi-experimental research design was employed, involving two fifth-grade classes from a primary school in K city. The study employed methods such as analysis of student works, SPSS scale data analysis, and student interviews to investigate the impact of gamified teaching in Scratch courses on developing elementary students' computational thinking. The results indicate that gamified teaching in Scratch courses significantly enhances the computational thinking level of elementary students, particularly in the dimensions of critical thinking, problem-solving ability, and algorithmic thinking. Based on the research findings, it is recommended that gamified teaching in Scratch courses should involve appropriate teaching tools, incorporate game-based learning, emphasize problem-solving, encourage collaborative learning, and provide training for educators competent in programming education.},
    author = {Chen, Yuxi and Zhao, Yang and Wang, Min},
    booktitle = {2024 13th International Conference on Educational and Information Technology (ICEIT)},
    doi = {10.1109/ICEIT61397.2024.10541025},
    issn = {},
    keywords = {Training;Visualization;Federated learning;Education;Urban areas;Software;Problem-solving;scratch;gamification;elementary students;computational thinking;empirical study},
    month = {March},
    number = {},
    pages = {78-83},
    title = {An Empirical Study on the Effect of Gamified Teaching in Scratch Courses on Developing Elementary Students' Computational Thinking},
    volume = {},
    year = {2024}
}

@inproceedings{10645865,
    abstract = {Computational thinking (CT) gained significant importance in education, leading to a surge in the development of dedicated instructional platforms. The cultivation of students’ CT skills posed a challenge, often involving the introduction of abstract and challenging-to-visualize programming concepts. This study aimed to bridge this gap by introducing an augmented reality-based coding game—an interactive learning platform designed to facilitate students in acquiring programming skills and enhancing their grasp of computational thinking concepts. The augmented reality (AR) digital game is specifically directed towards fundamental CT skills, such as pattern recognition, decomposition, abstraction, and developing algorithms. To evaluate the effectiveness of the AR game in enhancing CT skills, a study was conducted with 124 middle school students, entailing in grades 6th and 8th. The experimental group (N = 63) utilized the AR game, while the control group (N = 61) relied on conventional text materials. The findings of the experiment strongly supported the integration of AR technology along with game-based learning as a means to enhance CT knowledge and skills while simultaneously reducing cognitive load.},
    author = {Rao, Toluchuri Shalini Shankar and Tiwari, Ajay Shankar and Mitra, Utanko and Bhagat, Kaushal Kumar},
    booktitle = {2024 IEEE International Conference on Advanced Learning Technologies (ICALT)},
    doi = {10.1109/ICALT61570.2024.00071},
    issn = {2161-377X},
    keywords = {Codes;Education;Games;Writing;Cognitive load;Encoding;Pattern recognition;Augmented reality;computational thinking;game-based learning;cognitive load},
    month = {July},
    number = {},
    pages = {222-226},
    title = {Effectiveness of marker-based augmented reality game on computational thinking skills and cognitive load for middle school students},
    volume = {},
    year = {2024}
}

@inproceedings{10663178,
    abstract = {This study's objectives were to: 1) compare computational thinking skills before and after game-based learning activities; and 2) study students' satisfaction after game-based learning. The research methodology uses the ADDIE model by driving game-based learning activities and promoting students with computational thinking skills, including decomposition, pattern recognition, abstraction, and algorithm design. The statistical methods used to analyze the data were mean, standard deviation, and t-test. The study's findings revealed that 1) the students' computational thinking skills improved significantly after engaging in game-based learning activities, demonstrating statistical significance at the.05 level, and 2) the overall students' satisfaction after activities with game-based learning was averaged at the highest level (= 4.75, S.D. = 0.52).},
    author = {Saenboonsong, Siripon and Poonsawad, Akarapon},
    booktitle = {2024 9th International STEM Education Conference (iSTEM-Ed)},
    doi = {10.1109/iSTEM-Ed62750.2024.10663178},
    issn = {},
    keywords = {Statistical analysis;Computational modeling;Education;Pattern recognition;Standards;computational thinking skills;game-based learning;learning activity},
    month = {July},
    number = {},
    pages = {1-4},
    title = {Promoting Computational Thinking Skills Through Game-Based Learning of Students in Lower Secondary School},
    volume = {},
    year = {2024}
}

@inproceedings{10664997,
    abstract = {Computational thinking (CT) is a key competency with a significant impact on students' academic performance in STEM fields. It empowers students to enhance problem-solving skills by decomposing problems, utilizing abstraction and pattern recognition, and employing algorithmic thinking to design solutions and build models. This is particularly important in STEM disciplines where logical reasoning is essential for addressing complex real-world challenges in academic and industrial settings. Given the increasing demand for professionals equipped with strong algorithmic thinking and problem-solving abilities in Industry 5, educational institutions are focusing on enhancing students' CT and problem-solving skills. This study presents an initiative conducted over the past two years at our institute to teach CT in a gateway course to students with different backgrounds in STEM fields. The approach involved designing specific learning modules on Abstraction, Decomposition, Pattern Recognition, and Algorithmic Thinking and integrating them into the LMS. After studying these learning modules, the students were exposed to specific assignments that required the application of related CT skills. Pre and post surveys were employed by using standard CT tests to measure the impact of the intervention on students' CT levels. The results indicated an improvement in students' perceptions of their mastery of CT. Academic course grades also showed an improvement, with increased A scores and reduced F grades post-intervention. This two-year study on improving CT skills has yielded promising results. Moving forward, the research aims to enhance the existing modules further and distribute them to a broader range of introductory-level STEM courses in other universities. This future direction aligns with the goal of expanding the impact of CT education and integrating it more widely into STEM curricula.},
    author = {Dehbozorgi, Nasrin and Roopaei, Mehdi},
    booktitle = {2024 IEEE Integrated STEM Education Conference (ISEC)},
    doi = {10.1109/ISEC61299.2024.10664997},
    issn = {2473-7623},
    keywords = {Surveys;Industries;Computational modeling;Focusing;Logic gates;Cognition;Pattern recognition;Computational Thinking;Higher Education;Integrated STEM Education;Student Performance},
    month = {March},
    number = {},
    pages = {01-04},
    title = {Improving Computational Thinking Competencies in STEM Higher Education},
    volume = {},
    year = {2024}
}

@inproceedings{10685684,
    abstract = {This study is a systematic review of the effects of computational thinking on students’ academic performance from 2006 to 2023. The main purpose of this study is to explore whether computational thinking can promote students’ academic performance and the characteristics of such research. After literature collection and screening from three databases, a total of $\mathbf{2 3}$ articles were included. According to the coding table, the literature was coded in five aspects, including basic information, sample, research, computational thinking and academic performance. Then, the publication trend, research types, effect results, computational thinking measurement and the characteristics of academic achievement evaluation of the impact of computational thinking and academic achievement are reviewed. It is found that computational thinking has a better effect on students’ academic achievement, and finally some suggestions are put forward.},
    author = {Zhou, Pinghong and Tang, Yumin and Zhang, Yi and Yu, Yue and Li, Yixin},
    booktitle = {2024 International Symposium on Educational Technology (ISET)},
    doi = {10.1109/ISET61814.2024.00038},
    issn = {2766-2144},
    keywords = {Databases;Educational technology;Market research;Encoding;computational thinking;systematic review;academic achievement},
    month = {July},
    number = {},
    pages = {153-157},
    title = {Does computational thinking really have an impact on academic performance? A systematic review},
    volume = {},
    year = {2024}
}

@inproceedings{10685695,
    abstract = {As the process of artificial intelligence progresses, it is recognized that computational thinking is one of the basic skills for understanding and solving problems and one of the core literacies of the IT discipline. There are various ways to develop students’ computational thinking, and at the primary and secondary school levels, graphical programming classes are an important way to do so. This study establishes a framework for an instructional program aimed at developing students’ computational thinking skills based on elementary school graphic programming classes. Combining curriculum standards, graphic programming standards for youth programming skills, and International Computational Thinking Challenge standards, relevant teaching cases are designed to foster students’ computational thinking and promote the development of computational concepts, computational practices, and computational concepts.},
    author = {Xue, Tianyu and He, Shiyan and Guo, Weitong},
    booktitle = {2024 International Symposium on Educational Technology (ISET)},
    doi = {10.1109/ISET61814.2024.00081},
    issn = {2766-2144},
    keywords = {Graphics;Educational technology;Artificial intelligence;Programming profession;Standards;Computational Thinking;Graphical Programming;Teaching},
    month = {July},
    number = {},
    pages = {376-380},
    title = {Design and implementation of a graphical programming class for computational thinking in elementary schools},
    volume = {},
    year = {2024}
}

@inproceedings{10748139,
    abstract = {The integration of artificial intelligence (AI) tools such as ChatGPT into educational contexts is reshaping the landscape of student learning and critical thinking. This study investigates the influence of ChatGPT on the critical thinking abilities of university students by enhancing computational strategies for analysis. We developed an advanced computational framework that leverages natural language processing (NLP) and machine learning (ML) techniques to evaluate the interaction between students and ChatGPT. Our approach involves the collection and analysis of large-scale interaction data to identify patterns and impacts on critical thinking development. We employed sentiment analysis, topic modeling, and argumentation mining to decode the nature of student responses and their evolution over time. The results reveal significant improvements in critical thinking skills among students who actively engage with ChatGPT, suggesting that the AI can act as a catalyst for developing higher-order thinking skills. This study contributes to the growing body of research on AI in education by providing insights into the mechanisms through which AI tools can enhance critical thinking, and proposes practical implications for integrating such tools into academic curricula. The findings support the notion that computational analysis can provide a nuanced understanding of AI’s educational impacts, paving the way for more effective AI-assisted learning environments.},
    author = {Gunawan and Palupi, Shinta and Hardi, Richki and Pribadi, Agung Sakti and Zulkarnain, Riski and Setiawan, M. Nurfalah and Sari, Nariza Wanti Wulan and Sulistiyanto and Utomo, Denny Trias},
    booktitle = {2024 4th International Conference of Science and Information Technology in Smart Administration (ICSINTESA)},
    doi = {10.1109/ICSINTESA62455.2024.10748139},
    issn = {},
    keywords = {Sentiment analysis;Analytical models;Technological innovation;Computational modeling;Education;Machine learning;Learning (artificial intelligence);Chatbots;Data mining;Information technology;Artificial intelligence;ChatGPT;critical thinking;computational strategies;natural language processing;machine learning;education},
    month = {July},
    number = {},
    pages = {27-32},
    title = {Enhancing Computational Strategies to Decode ChatGPT’s Influence on the Critical Thinking Abilities of University Students},
    volume = {},
    year = {2024}
}

@inproceedings{10812249,
    abstract = {Developing computational thinking through Computer Science Unplugged activities is a fantastic way to introduce students to the core concepts of computing without the need for programming tools. These activities are interactive, engaging, and help learners build problem-solving and logical reasoning skills. CT in CS Unplugged activities involves evaluating how well the activities promote the core components of CT, which are fundamental skills in algorithmic thinking and problem-solving. This paper tries to contribute to a better understanding of the related field.},
    author = {Triantafyllou, Serafeim A. and Sapounidis, Theodosios and Oikonomou, Andreas},
    booktitle = {2024 32nd National Conference with International Participation (TELECOM)},
    doi = {10.1109/TELECOM63374.2024.10812249},
    issn = {2837-5246},
    keywords = {Taxonomy;Games;Cognition;Telecommunications;Problem-solving;Programming profession;computational thinking;computer science unplugged activities;gamification},
    month = {Nov},
    number = {},
    pages = {1-4},
    title = {Trying to Develop and Assess Computational Thinking in Computer Science Unplugged Activities with Gamification},
    volume = {},
    year = {2024}
}

@inproceedings{10892914,
    abstract = {This work-in-progress research-to-practice paper presents an intervention on integrating computational thinking modules into a software engineering course. The national consensus on the significance of computational thinking has prompted the expansion of related educational initiatives over the past decade. Since the definition of computational thinking by Wing in 2006, this concept has gained significant attention within the educational community. Particularly this surge of interest has led to extensive research into its conceptual foundations and subsequent integration into educational curricula since 2013. National initiatives have since emerged to incorporate computational thinking into the educational system. Furthermore, as artificial intelligence and computing systems become increasingly integrated into daily life, there is a growing demand from industries for a workforce and graduates adept at critical thinking and problem-solving. Aligned with this national movement, our study presents a two-year institutional initiative, aimed at integrating computational thinking into the software engineering program. The software engineering discipline extensively involves design thinking and problem-solving skills. However, we noticed that these higher-level skills are not imparted early in the program to teach students this method of thinking and approaching problems. To bridge this skill gap, we developed a set of computational thinking modules and integrated them into a gateway course in the software engineering program. Over two years, we implemented this intervention in an introductory-level course and evaluated its impact on students' computational thinking skills by analyzing their responses to a standard Computational Thinking Assessment survey. The results showed significant improvement in most components. These early findings underscore the effectiveness of integrating these computational thinking modules into the gateway courses, regardless of the specific course topic. A notable feature of these modules is their adaptability to diverse engineering courses, suggesting broader applicability across disciplines. Moving forward, our research aims to expand the integration of the computational thinking modules into various courses in other institutes across the nation and analyze their impact on student performance.},
    author = {Dehbozorgi, Nasrin and Nezafati, Maysam and Roopaei, Mehdi},
    booktitle = {2024 IEEE Frontiers in Education Conference (FIE)},
    doi = {10.1109/FIE61694.2024.10892914},
    issn = {2377-634X},
    keywords = {Bridges;Surveys;Industries;Logic gates;Problem-solving;Surges;Engineering education;Artificial intelligence;Standards;Software engineering;Computational Thinking;Software Engineering;Engineering Education},
    month = {Oct},
    number = {},
    pages = {1-4},
    title = {Integrating Computational Thinking Into the Curricula to Bridge the Skill Gap in Engineering Education},
    volume = {},
    year = {2024}
}

@inproceedings{4958823,
    abstract = {The appearance and innovation of computational tools depends on human thinking and initiative, and on the other hand, human thinking is affected by computational tools. The strong function of computational tools in some aspect is superior to that of human brains. It is the application of such strong function that changes the face of human society. At the same time, it presents new methods for scientific research and new perspective for solving problems, promotes human thinking to a higher level, and presents new means for people to understand and change the world. The advantage of computational tools over human brains is the speed, while the initiative ability of human brains is not owned by computational tools. Perfect combination of thinking and computing gives birth to a series of achievements, and lays the foundation of science.},
    author = {Zhang, Xiaofeng and Zou, Hailin},
    booktitle = {2009 First International Workshop on Education Technology and Computer Science},
    doi = {10.1109/ETCS.2009.120},
    issn = {},
    keywords = {Humans;Computer science;Biology computing;Computer science education;Educational technology;Technological innovation;History;Evolution (biology);Computational intelligence;Face;computational tools;computational thinking;computational methods},
    month = {March},
    number = {},
    pages = {503-507},
    title = {On Computational Tools, Computational Thinking and Computational Methods},
    volume = {1},
    year = {2009}
}

@inproceedings{5169480,
    abstract = {Computational thinking is taken for the fundamental skills for everyone, not just computer scientist, to learn and use. It remains to be explored in many aspects how to understand the essence of computational thinking and how cultivate the computational thinking ability of students. In the view of course teaching of computer science, this paper discusses the perception of the essence of computational thinking and presents a method for the cultivation of the computational thinking ability by using courses as carrier, and a case study of the course Data Structures and Algorithms.},
    author = {Deng, Zhenrong and Huang, Wenming and Dong, Rongsheng},
    booktitle = {2009 International Conference on Education Technology and Computer},
    doi = {10.1109/ICETC.2009.16},
    issn = {2155-1812},
    keywords = {Computer science;Pervasive computing;Concurrent computing;Embedded computing;Data structures;Computer vision;Educational technology;Humans;Computer science education;Printing machinery;Computational thinking;methodology;course teaching;data structure and algorithm},
    month = {April},
    number = {},
    pages = {197-200},
    title = {Discussion of Ability Cultivation of Computational Thinking in Course Teaching},
    volume = {},
    year = {2009}
}

@inproceedings{5228288,
    abstract = {Software talents should have the engineering ability, a common sense in IT industry, which is characterized by the fact that design plays a very important role in software engineering. Basis on the enhancement of computational thinking, the reform ideas of the development of the student's engineering ability are introduced. The detailed approaches include: 1) Extraction of fundamental discipline concept of engineering ability development; 2) Problem solving-centered organization of courses of software development tools; 3) Initiate the courses of software engineering as soon as possible; 4) Continual training of abstract logical thinking for the purpose of software abstract thinking.},
    author = {Deng, Zhenrong and Huang, Wenming and Dong, Rongsheng and Wen, Peizhi},
    booktitle = {2009 4th International Conference on Computer Science & Education},
    doi = {10.1109/ICCSE.2009.5228288},
    issn = {},
    keywords = {Software engineering;Software systems;Design engineering;Programming;Computer science;Computer science education;Application software;Engineering management;Educational technology;Computer industry;software engineering;Computational thinking;design;abstract},
    month = {July},
    number = {},
    pages = {1665-1668},
    title = {Exploration of ability development of engineering and computational thinking skills in software engineering majors},
    volume = {},
    year = {2009}
}

@article{5280664,
    abstract = {The computational thinking view recognizes that underlying computing concepts are integral to our everyday lives and pervasive in many disciplines of study. Computer science, information systems, computer engineering, informatics, software engineering-these are among the smorgasbord of choices available to college students interested in a computing career. The choices for noncomputing-oriented students who want to learn about the field are even more confounding. Indeed, the established term "computer science" is not well-defined or well understood, leading to further confusion for students and their parents as well as the general public. These are some factors I view as contributing to the drop in interest in the study of computer science. The student should learn the fundamental concept of computer sciences. Computing education has been too slow moving from the computing = programming model to a more general and understandable model that captures the essence of the discipline for everyone.},
    author = {Henderson, Peter B.},
    doi = {10.1109/MC.2009.334},
    issn = {1558-0814},
    journal = {Computer},
    keywords = {Ubiquitous computing;Pervasive computing;Computer science;Information systems;Systems engineering and theory;Informatics;Software;Educational institutions;Engineering profession;Computer science education;Education;Computational thinking;Mathematical thinking},
    month = {Oct},
    number = {10},
    pages = {100-102},
    title = {Ubiquitous Computational Thinking},
    volume = {42},
    year = {2009}
}

@inproceedings{5673139,
    abstract = {In recent years, several groups of Computer Science educators have made a sustained effort to capture the essence of CS apart from programming. Three of these approaches are Mathematical Thinking, Abstract Thinking, and Computational Thinking. Each approach tries to clarify areas of CS that are not directly tied to writing computer programs. In a separate line of research, the current authors have been examining different ways to teach mathematics to CS students. We developed a Computational Math scale that measures the level of problem-solving gestalt exhibited by textbook authors. In this study, we relate our Computational Math framework to current research on Mathematical, Abstract, and Computational (MAC) Thinking. We counted words used frequently in research articles and compared them to words that form the Computational Math scale. Our results suggest an overall MAC Thinking framework that integrates a wide range of topics relevant to computing and programming.},
    author = {McMaster, Kirby and Rague, Brian and Anderson, Nicole},
    booktitle = {2010 IEEE Frontiers in Education Conference (FIE)},
    doi = {10.1109/FIE.2010.5673139},
    issn = {2377-634X},
    keywords = {Computers;Computational modeling;Programming profession;Books;Mathematical model;Abstraction;Algorithm;Computational Math;Model;Thinking},
    month = {Oct},
    number = {},
    pages = {S3G-1-S3G-6},
    title = {Integrating Mathematical Thinking, Abstract Thinking, and Computational Thinking},
    volume = {},
    year = {2010}
}

@inproceedings{5881653,
    abstract = {The online independent learning is one of the topics, which is currently focused by educational technology. Computational thinking is another important concept that international computer field widely concerned on. With the feature of online learning model, this paper builds Online Independent Learning Model Based on Computational Thinking (OILMCT). Comparing with the traditional teaching model, the OILMCT makes a great improvement in developing learners' self-building knowledge and the capability of innovative thinking. Not only improve the learning efficiency, but also make learners' computational thinking capability getting progress.},
    author = {Zhou, Xiongjun},
    booktitle = {2011 International Conference on E-Business and E-Government (ICEE)},
    doi = {10.1109/ICEBEG.2011.5881653},
    issn = {},
    keywords = {Computational modeling;Education;Mathematical model;Computers;Computer science;Learning systems;Computational efficiency;computational thinking;online environment;independent learning},
    month = {May},
    number = {},
    pages = {1-5},
    title = {The research on online independent learning model based on computational thinking},
    volume = {},
    year = {2011}
}

@inproceedings{5974984,
    abstract = {Computer basic education with computer science, and other subjects crossover study, their status has become unshakable. Current international computer science. Today, an important concept widely concerned over the field of computer science calculation thinking. His definition, characteristics and development and basic computer education inseparable, especially for basic computer course teaching practice in an important role.},
    author = {Lina Wang},
    booktitle = {2011 International Conference on Computer Science and Service System (CSSS)},
    doi = {10.1109/CSSS.2011.5974984},
    issn = {},
    keywords = {Computers;Education;Computer science;Computational modeling;Business;computer fundamental education;Computational Thinking;teaching model},
    month = {June},
    number = {},
    pages = {1158-1159},
    title = {Computational thinking and computer fundamental education},
    volume = {},
    year = {2011}
}

@inproceedings{6028861,
    abstract = {In this paper, the existing problems and teaching characteristics of VB programming are first analyzed. Then the specific measures to reform the teaching and examination modes are proposed in accordance with the requirements of computational thinking ability training. After that, how to train the students' “computational thinking” in the VB program curriculum is elaborated on, in the hope of enabling the students to analyze and solve problems and to innovate with computers.},
    author = {Zhang, Chunying and Chen, Xiao and Li, JianJing},
    booktitle = {2011 6th International Conference on Computer Science & Education (ICCSE)},
    doi = {10.1109/ICCSE.2011.6028861},
    issn = {},
    keywords = {Programming profession;Computers;Educational institutions;Visual BASIC;Training;computational thinking;computational thinking ability;VB programming},
    month = {Aug},
    number = {},
    pages = {1260-1263},
    title = {Research of VB programming teaching mode based on the core of computational thinking ability training},
    volume = {},
    year = {2011}
}

@inproceedings{6268116,
    abstract = {Game design environments are traditionally used as means for engaging non-programmers in the learning process. However, these environments lack specific support for teaching computational thinking to novices. Typically, such skills are acquired in ad hoc practical sessions with supervision provided by teachers or peers. The usual scenario is where a teacher guides the students in solving these problems during a game design session. In informal learning settings, step-by-step tutorials for creating existing games are used to compensate for the lack of computer support for solving design and computational problems. In this paper we suggest a game design process that combines support for computational thinking with tool usage, by identifying the most common computational thinking problems and providing a generic solution to them. We have evaluated our solution in the context of AgentWeb, an online cloud-based game design environment for novices. We discuss how to incorporate suggested computational thinking solutions as computer assistant into the game design user interface.},
    author = {Ahmadi, Navid and Jazayeri, Mehdi and Landoni, Monica},
    booktitle = {2012 IEEE 12th International Conference on Advanced Learning Technologies},
    doi = {10.1109/ICALT.2012.24},
    issn = {2161-377X},
    keywords = {Games;Programming;Educational institutions;Computers;Context;Tutorials;end-user programming;computational thinking;design thinking;game design environments;informal learning;cognitive walkthrough;cloud-based environments},
    month = {July},
    number = {},
    pages = {349-353},
    title = {Helping Novice Programmers to Bootstrap in the Cloud: Incorporating Support for Computational Thinking into the Game Design Process},
    volume = {},
    year = {2012}
}

@inproceedings{6685067,
    abstract = {Promoting computational thinking is one of the top priorities in CS education as well as in other STEM and non-STEM disciplines. Our innovative NSF-funded IC2Think project blends computational thinking with creative thinking so that students leverage their creative thinking skills to “unlock” their understanding of computational thinking. In Fall 2012, we deployed creative exercises designed to engage Epstein's creative competencies (Surrounding, Capturing, Challenging and Broadening) in introductory level CS courses targeting four different groups (CS, engineering, combined CS/physical sciences, and humanities majors). Students combined hands-on problem solving with guided analysis and reflection to connect their creative activities to CS topics such as conditionals and arrays and to real-world CS applications. Evaluation results (approximately 150 students) found that creative thinking exercise completion had a linear “dosage” effect. As students completed more exercises [0/1 – 4], they increased their long-term retention [a computational thinking test], F(3, 98) = 4.76, p =.004, partial Eta2 = .127 and course grades, F(3, 109) = 4.32, p =.006, partial Eta2 = .106. These findings support our belief that the addition of creative thinking exercises to CSCE courses improves the learning of computational knowledge and skills.},
    author = {Miller, L. Dee and Soh, Leen-Kiat and Chiriacescu, Vlad and Ingraham, Elizabeth and Shell, Duane F. and Ramsay, Stephen and Hazley, Melissa Patterson},
    booktitle = {2013 IEEE Frontiers in Education Conference (FIE)},
    doi = {10.1109/FIE.2013.6685067},
    issn = {2377-634X},
    keywords = {Ciphers;Reflection;Writing;Computer science;Data collection;Debugging;Educational institutions;CS1;Creative Thinking;Computational Thinking;College;Computer Science},
    month = {Oct},
    number = {},
    pages = {1426-1432},
    title = {Improving learning of computational thinking using creative thinking exercises in CS-1 computer science courses},
    volume = {},
    year = {2013}
}

@inproceedings{6756334,
    abstract = {Fundamental skills acquired by undergraduate students during their academic, play a crucial role in their career. One such skill is computational thinking (CT), which will help to solve problems algorithmically using computers. Computational thinking will improve their problem solving skills in a non-conventional manner as this leads the student to think in multiple paths to reach the solution. However, it is a challenge in Computing Education to develop student's ability to solve problems in an algorithmic way. The aim of this paper is to introduce a potential and pragmatic approach to develop computational thinking skills in novices.},
    author = {Philip, Mintu and Renumol, V. G. and Gopeekrishnan, R},
    booktitle = {2013 IEEE International Conference in MOOC, Innovation and Technology in Education (MITE)},
    doi = {10.1109/MITE.2013.6756334},
    issn = {},
    keywords = {Programming profession;Computers;Computational modeling;Educational institutions;Problem-solving;computational thinking;algorithm;problem solving;abstraction;computing education},
    month = {Dec},
    number = {},
    pages = {199-204},
    title = {A pragmatic approach to develop computational thinking skills in novices in Computing Education},
    volume = {},
    year = {2013}
}

@inproceedings{6778575,
    abstract = {Computational thinking aims to employ Computer Science foundations to solve problems in different knowledge areas. This paper describes projects related to computational thinking and starts a discussion on the challenges for implementing computational thinking in primary and secondary education in Brazil.},
    author = {Carvalho, Tainã and Andrade, Daiane and Silveira, Jayne and Auler, Victor and Cavalheiro, Simone and Aguiar, Marilton and Foss, Luciana and Pernas, Ana and Reiser, Renata},
    booktitle = {2013 2nd Workshop-School on Theoretical Computer Science},
    doi = {10.1109/WEIT.2013.27},
    issn = {},
    keywords = {Educational institutions;Computer science;Games;Proposals;Computers;Google;Computational thinking;Basic education;Informatics in education;Computer-aided learning;Constructive thinking},
    month = {Oct},
    number = {},
    pages = {111-115},
    title = {Discussing the Challenges Related to Deployment of Computational Thinking in Brazilian Basic Education},
    volume = {},
    year = {2013}
}

@article{6813968,
    abstract = {Visual programming in 3D sounds much more appealing than programming in 2D, but what are its benefits? Here, University of Colorado Boulder educators discuss the differences between 2D and 3D regarding three concepts connecting computer graphics to computer science education: ownership, spatial thinking, and syntonicity.},
    author = {Repenning, Alexander and Webb, David C. and Brand, Catharine and Gluck, Fred and Grover, Ryan and Miller, Susan and Nickerson, Hilarie and Song, Muyang},
    doi = {10.1109/MCG.2014.46},
    issn = {1558-1756},
    journal = {IEEE Computer Graphics and Applications},
    keywords = {Three-dimensional displays;Programming profession;Games;Solid modeling;Computational modeling;Educational institutions;Three-dimensional displays;Programming profession;Games;Solid modeling;Computational modeling;Educational institutions;conversational programming;Three-dimensional displays;Programming profession;Games;Solid modeling;Computational modeling;Educational institutions;graphics;3D programming;AgentSheets;AgentCubes;computational thinking;computer science education;computer graphics;3D design;computer programming;spatial thinking;syntonicity},
    month = {May},
    number = {3},
    pages = {68-71},
    title = {Beyond Minecraft: Facilitating Computational Thinking through Modeling and Programming in 3D},
    volume = {34},
    year = {2014}
}

@inproceedings{6883021,
    abstract = {This paper suggests a Cyberlearning tool based on a highly innovative assessment methodology that helps teachers with computer science education. Currently, there is a strong push to integrate aspects of programming and coding into the classroom environment. However, few if any tools exist that enable real-time formative assessment of in-class programming tasks. The proposed REACT (Real Time Evaluation and Assessment of Computational Thinking) system is a first step toward allowing teachers to see which high-level concepts students have mastered and which ones they are struggling with as students code in real time. REACT supports and facilitates the teaching of 21st century computing skills such as computational thinking [1] in the classroom environment.},
    author = {Koh, Kyu Han and Basawapatna, Ashok and Nickerson, Hilarie and Repenning, Alexander},
    booktitle = {2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
    doi = {10.1109/VLHCC.2014.6883021},
    issn = {1943-6106},
    keywords = {Real-time systems;Games;Programming profession;Pattern analysis;Educational institutions;Computer science education;Computational Thinking;Online Assessment;Real Time Assessment;Computational Thinking Pattern;Computational Thinking Pattern Analysis},
    month = {July},
    number = {},
    pages = {49-52},
    title = {Real Time Assessment of Computational Thinking},
    volume = {},
    year = {2014}
}

@inproceedings{6926430,
    abstract = {Due to the international and domestic education and computer industries and so on computational thinking attaches great importance and has done considerable exploratory research, our school also reform and exploration teaching mode on the University Computer Basic based on Computational thinking training in network environment, and the use of based on Computational thinking Autonomous learning mode in the Network Environment in the actual teaching, strengthen the learners understanding of computer science, corrected the computing disciplines equivalent to the idea of computer programming, enhance the connotation and science significance of computer disciplines, to overcome the computer means “narrow tool” argument,and achieved good teaching results.},
    author = {Boqin Liu and Junmei He},
    booktitle = {2014 9th International Conference on Computer Science & Education},
    doi = {10.1109/ICCSE.2014.6926430},
    issn = {},
    keywords = {Educational institutions;Microcomputers;Computational modeling;Indexes;HTML;Computational thinking;The Network teaching auxiliary platform;Autonomous learning mode},
    month = {Aug},
    number = {},
    pages = {59-62},
    title = {Teaching mode reform and exploration on the University Computer Basic based on Computational thinking training in Network Environment},
    volume = {},
    year = {2014}
}

@inproceedings{7044489,
    abstract = {Promoting computational thinking is a priority in CS education and other STEM and non-STEM disciplines. Our innovative, NSF-funded IC2Think project blends computational and creative thinking. In Spring 2013, we deployed Computational Creativity Exercises (CCE) designed to engage creative competencies (Surrounding, Capturing, Challenging and Broadening) in an introductory CSI course for engineering students. We compared this CCE implementation semester (80 students, 95% completing 3 or 4 CCEs) to the Fall 2013 semester of the same course (55 students) without CCEs. CCE implementation students had significantly higher scores on a CS concepts and skills knowledge test (F(1, 132) = 7.72, p < 01, partial Eta2 = .055; M=7.47 to M=6.13; 13 items) and significantly higher self-efficacy for applying CS knowledge in their field (F(1, 153) = 12.22, p < .01, partial Eta2 = .074; M=70.64 to M=61.47; 100-point scale). CCE implementation students had significantly higher study time (t(1, 136) = 2.08, p = .04; M=3.88 to M=3.29; 7-point scale) and significantly lower lack of regulation, which measures difficulties with studying (t(1, 136) = 2.82, p = .006; M=2.80 to M=3.21; 5-point scale). The addition of computational creativity exercises to CS courses may improve computational thinking and learning of CS knowledge and skills.},
    author = {Shell, Duane F. and Hazley, Melissa Patterson and Soh, Leen-Kiat and Dee Miller, L. and Chiriacescu, Vlad and Ingraham, Elizabeth},
    booktitle = {2014 IEEE Frontiers in Education Conference (FIE) Proceedings},
    doi = {10.1109/FIE.2014.7044489},
    issn = {2377-634X},
    keywords = {Educational institutions;Instruments;Problem-solving;Programming;Reflection;Engineering profession;CSI;Creative Thinking;Computational Thinking;Engineering;Student Learning;Self-Regulation;Engagement;Self-Efficacy},
    month = {Oct},
    number = {},
    pages = {1-7},
    title = {Improving learning of computational thinking using computational creativity exercises in a college CSI computer science course for engineers},
    volume = {},
    year = {2014}
}

@inproceedings{7119929,
    abstract = {This paper introduces the notion of predicting academic performance based on Computational Thinking. The integral role that Computational Thinking modalities play in engineering disciplines can serve as an accurate indicator of the student future academic success. Therefore, this study investigated the students' performance in a Computational Thinking course offered at the freshman level to predict student academic success. To achieve this goal, a two-year study of the correlation between the students' accumulative grade point averages and their grades obtained in this course was conducted. The performance of nine hundred and eighty two students in forty sections was assessed over the two-year period. It was concluded that the students' future academic performance is strongly correlated to their Computational Thinking skills assessed at the freshman level. This clearly suggests the viability of using Computational Thinking skills as a fairly accurate predictor of students' academic success. These results have also implied that the assessment of Computational Thinking can be used as an early intervention tool to improve the students' retention, progression, and graduation rates in STEM related disciplines.},
    author = {Haddad, Rami J. and Kalaani, Youakim},
    booktitle = {2015 IEEE Integrated STEM Education Conference},
    doi = {10.1109/ISECon.2015.7119929},
    issn = {},
    keywords = {Education;Computational modeling;Computers;Programming;Electrical engineering;Conferences;Correlation;Academic performance;Computational Thinking;Prediction of performance},
    month = {March},
    number = {},
    pages = {225-229},
    title = {Can computational thinking predict academic performance?},
    volume = {},
    year = {2015}
}

@inproceedings{7126261,
    abstract = {The purpose of this study is to design a computational thinking curriculum standard for K-12 education. The Delphi technique was employed to collect different views and derive consensus from a panel of thirteen experts, including computer scientists, computer science educators, K-12 computer teachers, and industry experts. The first draft of Delphi survey questionnaire, consisting of nine themes (problem solving, problem decomposition, algorithms, data representation, data analysis, modeling and simulation, abstraction, automation, and others) and 60 competence indicators, was developed based on our investigation of the nature of computational thinking. After three rounds of survey and a final round-table discussion, the expert panel derived 49 essential competence indicators (13 for grades K to 6, nine for grades 7 to 9 and 27 of grades 10 to 12) and eight optional competence indicators (one for grades 7 to 9 and seven for grades 10 to 12). According to the results, the core ability and training of computational thinking are different in grades. In grades K to 6, students develop logical thinking and problem solving skills in personal and family life. In grades 7 to 9, students must understand the basic concepts of programming and write basic programs. Finally, in grades 10 to 12, they will use high-level skills to apply the concepts of abstraction, modeling, and structured problem decomposition to solve problems in different fields. The results serve as useful references for developing Taiwan's new K-12 computing curriculum.},
    author = {Chuang, Hui-Chi and Hu, Chiu-Fan and Wu, Cheng-Chih and Lin, Yu-Tzu},
    booktitle = {2015 International Conference on Learning and Teaching in Computing and Engineering},
    doi = {10.1109/LaTiCE.2015.44},
    issn = {},
    keywords = {Computational modeling;Analytical models;Data models;Computers;Education;Computer science;Standards;Computing Curriculum;K-12 education;Computational Thinking;Delphi Survey},
    month = {April},
    number = {},
    pages = {213-214},
    title = {Computational Thinking Curriculum for K-12 Education -- A Delphi Survey},
    volume = {},
    year = {2015}
}

@inproceedings{7193021,
    abstract = {The latest concept evolving in pedagogy is flipped class room where class room is utilized for active learning by students with their peers and faculty. This necessitates development of new syllabus and pedagogy for each subject for class room activities. This paper attempt to propose spreadsheet based experiments in linear algebra that can be used to learn many abstract concepts that are very important for mastering many engineering disciplines. There is vast amount of evidence showing that the computational experiments support active learning and develop exploratory and inventive skill of students.},
    author = {Se, Shriya and Ashwini B and Chandran, Archana and Soman K.P},
    booktitle = {2015 International Conference on Innovations in Information, Embedded and Communication Systems (ICIIECS)},
    doi = {10.1109/ICIIECS.2015.7193021},
    issn = {},
    keywords = {Eigenvalues and eigenfunctions;Matrix decomposition;Conferences;Technological innovation;Communication systems;Singular value decomposition;Flipped class room computational thinking;Linear algebra;Spread sheet},
    month = {March},
    number = {},
    pages = {1-6},
    title = {Computational thinking leads to computational learning: Flipped class room experiments in linear algebra},
    volume = {},
    year = {2015}
}

@inproceedings{7357215,
    abstract = {Building a classroom environment based on student-led, meaningful collaboration is an ideal being promoted by educators and administrators seeking to equip students with 21st century workforce skills. More and more often, teachers are challenged to design lessons that utilize students' innate desire to communicate with one another rather than more traditional direct instruction. With a heavy focus on student-driven instruction and a reduced role for direct instruction, Carson Middle School's Game Design I course is able to utilize collaboration as a means for allowing students to not only learn but master and retain Computational Thinking Patterns and apply them in formal summative assessments. Through the collection of these data points throughout the course of a semester of learning, an educator can fully appreciate the learning of Computational Thinking skills that occurs as students build a sequence of games and simulations.},
    author = {Worrell, Benjamin and Brand, Catharine and Repenning, Alexander},
    booktitle = {2015 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
    doi = {10.1109/VLHCC.2015.7357215},
    issn = {},
    keywords = {Programming;computational thinking;computational thinking patterns;assessment;collaborative programming;middle school computer education;game design},
    month = {Oct},
    number = {},
    pages = {183-187},
    title = {Collaboration and Computational Thinking: A classroom structure},
    volume = {},
    year = {2015}
}

@inproceedings{7369019,
    abstract = {Computer science is expanding into K12 education and numerous educational games and systems have been created to teach programming skills, including many block-based programming environments. Teaching computational thinking has received particular attention, and more research is needed on using educational games to directly teach computational thinking skills. We propose to investigate this using Dragon Architect, an educational block-based programming game we are developing. Specifically, we wish to study ways of directly teaching computational thinking strategies such as divide and conquer in an educational game, as well as ways to evaluate our approaches.},
    author = {Bauer, Aaron and Butler, Eric and Popović, Zoran},
    booktitle = {2015 IEEE Blocks and Beyond Workshop (Blocks and Beyond)},
    doi = {10.1109/BLOCKS.2015.7369019},
    issn = {},
    keywords = {Games;Programming profession;Programming environments;Computer science education;Problem-solving;block-based programming;game-based learning;computational thinking;CS education},
    month = {Oct},
    number = {},
    pages = {121-123},
    title = {Approaches for teaching computational thinking strategies in an educational game: A position paper},
    volume = {},
    year = {2015}
}

@inproceedings{7557641,
    abstract = {Visual programming languages (VPLs), such as Scratch and StarLogo TNG, can make computer science education more accessible to everyone. Current researches in the study of using VPLs for educational purposes primarily focus on understanding motivational benefits and computational thinking gains. All these educational VPLs claim to scaffold students learning computational thinking concepts. Although the evaluations show that students may exhibit more enthusiasm, it is not clear what computational thinking concepts are actually learned by students. In this paper, we attempt to develop a visual programs recognition tool for student-created StarLogo TNG simulations which representing the computational thinking concepts implemented by the students. Through collecting student's created projects over time, this visual programs recognition tool can possibly indicate the patterns of computational thinking in science simulations created by StarLogo TNG.},
    author = {Chang, Chih-Kai},
    booktitle = {2016 5th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)},
    doi = {10.1109/IIAI-AAI.2016.27},
    issn = {},
    keywords = {Computational modeling;Programming profession;Visualization;Ice;Computers;Syntactics;Visual programming languages;computer science education;computational thinking;StarLogo TNG},
    month = {July},
    number = {},
    pages = {397-400},
    title = {Using Computational Thinking Patterns to Scaffold Program Design in Introductory Programming Course},
    volume = {},
    year = {2016}
}

@inproceedings{7739688,
    abstract = {Computational Thinking is an essential skill for all students in the 21st Century. A fundamental question is how can we create computer affordances to empower novice teachers and students, in a variety of STEM and art disciplines, to think computationally while avoiding difficult overhead emerging from traditional coding? Over the last 20 years we have iteratively developed tools that aim to support computational thinking. As these tools evolved a philosophy emerged to support Computational Thinking by joining human abilities with computer affordances. Chief among these findings is that supporting Computational Thinking is much more than making coding accessible. Computational Thinking Tools aim to minimize coding overhead by supporting users through three fundamental stages of the Computational Thinking development cycle: problem formulation, solution expression, and solution execution/evaluation.},
    author = {Repenning, Alexander and Basawapatna, Ashok and Escherle, Nora},
    booktitle = {2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
    doi = {10.1109/VLHCC.2016.7739688},
    issn = {1943-6106},
    keywords = {computational thinking tools;end-user programming;K-12 education;computational thinking},
    month = {Sep.},
    number = {},
    pages = {218-222},
    title = {Computational thinking tools},
    volume = {},
    year = {2016}
}

@inproceedings{7739692,
    abstract = {Computational Thinking has recently returned into the limelight as an essential skill to have for both the general public and disciplines outside Computer Science. It encapsulates those thinking skills integral to solving complex problems using a computer, thus widely applicable in our technological society. Several public initiatives such as the Hour of Code successfully introduced it to millions of people of different ages and backgrounds, mostly using Blocks Programming Environments like Scratch that lower the barriers of programming and facilitate learning. In this paper we present our arguments for fostering Computational Thinking skills using a Blocks Programming Environment augmented with a Tangible User Interface, namely by exploiting objects whose interactions with the physical environment are mapped to digital actions performed on the system. Our demonstration includes a working prototype implementing our Tangible Blocks Programming Environment called TAPAS.},
    author = {Turchi, Tommaso and Malizia, Alessio},
    booktitle = {2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
    doi = {10.1109/VLHCC.2016.7739692},
    issn = {1943-6106},
    keywords = {Programming environments;Visualization;Programming profession;Encoding;Concrete;Computational Thinking;Tangible User Interface;End-User Programming},
    month = {Sep.},
    number = {},
    pages = {232-233},
    title = {Fostering computational thinking skills with a tangible blocks programming environment},
    volume = {},
    year = {2016}
}

@inproceedings{7904960,
    abstract = {The learning style in these day has been changed since the traditional style has been replaced by the modern style of learning processes using new technology such as social media, smart phone or edutainment. Nowadays, simulation game plays an important role in educational ground because its characteristic can enhances the learners' motivation. The paper aims to purpose the novel idea of how to identify appropriate factors which relate to the learner's motivation for supporting the computational thinking skills via simulation game. This is importance because games are considered as efficiency tools in which lecturers can employ to escalate the interest of lessons and to make the learning to be more effective.},
    author = {Daungcharone, Kannika},
    booktitle = {2017 International Conference on Digital Arts, Media and Technology (ICDAMT)},
    doi = {10.1109/ICDAMT.2017.7904960},
    issn = {},
    keywords = {Games;Computational modeling;Programming profession;Computers;Object oriented modeling;Engineering profession;Simulation Game;Computational Thinking Skills;Learning Motivation},
    month = {March},
    number = {},
    pages = {195-199},
    title = {Enhancement the computational thinking skills via the simulation game},
    volume = {},
    year = {2017}
}

@inproceedings{8005431,
    abstract = {Studies have shown that learning approaches are able to promote the developments of computational thinking on students, including cooperative learning, project-based learning, online communication, Academic dialogue etc. Therefore, these learning approaches can combine with the traditional teaching in a more effective way. Blended learning may promote the developments of computational thinking on students. The paper takes the junior College students as the experimental objects, and carries a pretest-posttest study through unequal experimental and control groups. It approved that blended learning has a positive impact on the college student's computational thinking, i.e., they have an obvious progress.},
    author = {Liao, Lihua and Liang, Jin},
    booktitle = {2017 International Symposium on Educational Technology (ISET)},
    doi = {10.1109/ISET.2017.64},
    issn = {},
    keywords = {Education;Programming profession;Information technology;Management information systems;Software;Blended learning;Computational thinking;Computational thinking trend;Skills of computational thinking},
    month = {June},
    number = {},
    pages = {256-260},
    title = {An Empirical Study on Blended Learning to Promote the Development of Computational Thinking Ability of College Students},
    volume = {},
    year = {2017}
}

@article{8131700,
    abstract = {The paper discusses tools for teaching logic used in Logic & Proofs, a web-based introduction to modern logic that has been taken by more than 1,300 students since the fall of 2003. The tools include a wide array of interactive learning environments or cognitive mini-tutors; most important among them is the Carnegie Proof Lab. The Proof Lab is a sophisticated interface for constructing natural deduction proofs and is central, as strategically guided discovery of proofs is the distinctive focus of the course. My discussion makes explicit the broader intellectual context, but also the pursuit of pedagogical goals and their experimental examination. The intellectual context includes i) the theoretical background for the proof search algorithm AProS and its use for a dynamic Proof Tutor, and ii) the programmatic expansion of the course to Computational Logic. (I recommend that the reader enter the virtual classroom of Logic & Proofs: the interactive components just cannot be properly reflected in a narrative. It is also very easy to download AProS and observe its ways of searching for proofs.) 1},
    author = {Sieg, Wilfried},
    doi = {10.1093/jigpal/jzm026},
    issn = {1368-9894},
    journal = {Logic Journal of the IGPL},
    keywords = {introduction to logic;strategic thinking;automated proof search;dynamic proof tutor;Carnegie Proof Lab;Open Learning Initiative (OLI);intercalation calculus;natural deduction proof},
    month = {Aug},
    number = {4},
    pages = {359-368},
    title = {The AProS Project: Strategic Thinking & Computational Logic},
    volume = {15},
    year = {2007}
}

@inproceedings{8308511,
    abstract = {The traditional information technology course focuses on the learning of programming tools and ignores the development of students' Computational Thinking. The emergence of visual programming tools provides a new opportunity for the training of Computational Thinking. On the basis of studying the limitations of thinking training in the traditional information technology class and the advantages of visual programming in computational thinking, this paper proposes a computational thinking training model based on visual programming. The model based on project adopt the combination of teaching plan and learning plan to design teaching and cultivate Computational Thinking. Applying this model to the actual teaching process by designing a teaching case based on the visual programming tool App Inventor, the experimental results show that the Computational Thinking of students in this model is improved in formalization and modeling. Through proposing this model and verifying its validity, we can provide the feasibility and research ideas for further studies by using visual programming to cultivate students' Computational Thinking.},
    author = {Xiao, Min and Yu, Xiaohua},
    booktitle = {2017 International Conference of Educational Innovation through Technology (EITT)},
    doi = {10.1109/EITT.2017.26},
    issn = {},
    keywords = {Visualization;Computational modeling;Tools;Training;Programming profession;Computer Thinking;Visual Programming;Projectbased Learning},
    month = {Dec},
    number = {},
    pages = {75-80},
    title = {A Model of Cultivating Computational Thinking Based on Visual Programming},
    volume = {},
    year = {2017}
}

@inproceedings{8467140,
    abstract = {Observations have shown the need of adequate collaboration among the engineering educators for effective achievement of its goals. Nevertheless, there have been reports of the inadequate relationship among engineering educators. Consequently, it is vital to develop strategies to boost the synergy among the parties. Computational Thinking (CT) could be a dependable approach. This paper presents ways of ensuring synergy among engineering educators through computational thinking. A questionnaire survey that sought information from the respondents on the ways computational thinking: promotes thinking abilities, reduces personal clashes, and improves decision-making process among the engineering educators was administered to 400 respondents. 348 survey answers were returned, found reliable and used in the data analysis. The analysis revealed that computational thinking plays vital roles in the repositioning of engineering education for solving of novel problems, assurance of mutual respect among educators, and intensive research for renown engineering education with relative contribution index above 0.8. The paper recommends the development of a computational thinking based comprehensive engineering educators' synergy framework as a suggestion for future research.},
    author = {Johnson, Charles A. N. and Bin Daud, Moh'd Fadzil and Arsat, Mahyuddin Bin and Bt. Wan Hussin, Wan Nazdah and Egba, Ernest Ituma},
    booktitle = {2017 7th World Engineering Education Forum (WEEF)},
    doi = {10.1109/WEEF.2017.8467140},
    issn = {},
    keywords = {Engineering education;Decision making;Teamwork;Instruments;Computational modeling;Solid modeling;synergy;engineering educators;computational thinking;higher education;engineering discipline},
    month = {Nov},
    number = {},
    pages = {636-641},
    title = {Enhancing Synergy Among Engineering Educators through Computational Thinking},
    volume = {},
    year = {2017}
}

@inproceedings{8494172,
    abstract = {Recent developments in pedagogy have focused upon computational thinking. Computational thinking provides a way to solve the problem and it is a key practice of science education. The importance of computational thinking is rarely found in K-12 education. Computational thinking is a an important skill everyone needs and it is correlated with many other concepts. These factors have made the development of new tools and syllabus. In this paper, we aim to show the experiments of fractal geometry using MIT Scratch. These computational exercises facilitate to learn many of computational thinking skills that are very important for the people in the near future. Based on our experience with students, we claim that the concept of fractal and its implementation in MIT Scratch is the best practices to improve computational thinking in K-12 school level students.},
    author = {Vinayakumar, R and Soman, KP and Menon, Pradeep},
    booktitle = {2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)},
    doi = {10.1109/ICCCNT.2018.8494172},
    issn = {},
    keywords = {Fractals;Programming profession;Education;Visualization;Games;Computational thinking;fractal geometry;Scratch;K-12 education;block based programming;21st century learning skills},
    month = {July},
    number = {},
    pages = {1-6},
    title = {Fractal Geometry: Enhancing Computational Thinking with MIT Scratch},
    volume = {},
    year = {2018}
}

@inproceedings{8560947,
    abstract = {CS for ALL is a new education initiative launched in 2016 to empower a generation of American students with the computer science skills they need to thrive in a digital economy. In order to keep up with trends in the growing technology-driven world, students should have the ability to analyze and consider the consequences of computing problems critically. However, introducing CS and computational thinking skills to the first year students in college is a difficult task because the nature of the subject tends to be dry and conceptual. Thus, we introduce a computer science course that helps all undergraduate students to prepare for digital life as well as enhance their critical thinking skills through hands-on learning experiences. The course contents introduce the general concept of computer science such as computing system, basic networking, algorithms and programming with Scratch and mBot robot exercises. Our student feedback shows a high level of enthusiasm and engagement among the students. The strong hands-on learning nature of the course helped our students to have more engaging and interactive classroom experiences.},
    author = {Jung, Andrew and Park, Jinsook and Ahn, Andrew and Yun, Mira},
    booktitle = {2017 International Conference on Computational Science and Computational Intelligence (CSCI)},
    doi = {10.1109/CSCI.2017.187},
    issn = {},
    keywords = {Computer Science Education;Computational Thinking;Hands-on;Robot programming},
    month = {Dec},
    number = {},
    pages = {1073-1078},
    title = {CS for ALL: Introducing Computational Thinking with Hands-On Experience in College},
    volume = {},
    year = {2017}
}

@inproceedings{8567181,
    abstract = {The promotion of computational thinking education has become a worldwide trend. To cultivate the computational thinking ability of children at young age, many computational thinking board games have appeared recently. This article introduces five computational thinking board games, including Robot Turtles, King of Pirates, Doggy Code, ROBOT WARS Coding Board Game, and Code master, and then to analyze its characteristics respectively. Additionally, this article also points out the current limitations and challenges of computational thinking board games. We hope more schools or operators will join the development of computational thinking education in the future.},
    author = {Wu, Sheng-Yi},
    booktitle = {2018 1st International Cognitive Cities Conference (IC3)},
    doi = {10.1109/IC3.2018.00-45},
    issn = {},
    keywords = {Games;Education;Programming profession;Robots;Encoding;computational thinking, board game, coding, game-based learning},
    month = {Aug},
    number = {},
    pages = {129-131},
    title = {The Development and Challenges of Computational Thinking Board Games},
    volume = {},
    year = {2018}
}

@inproceedings{8615232,
    abstract = {The benefits of developing children's computational thinking have been widely discussed with various approaches and learning tools. This paper reports the piloting of second-year longitudinal study, aiming to examine the effect of computational thinking education on the 5th grade students (n = 85) as they develop their algorithmic thinking and debugging skills. The results show that students benefited from our designed curriculum with learning gains in algorithmic thinking, especially in analyzing and finding the essential instructions to solve computational problems. Students also achieved significant gains in debugging programs. The study demonstrated that with age-appropriate learning materials and learning approach, even young children can develop computational thinking skills important to thriving in 21st century. This pilot study sets the direction of analyzing the rest of the 5th grade students' performance as well as the next year study.},
    author = {Wong, Gary K.W. and Jiang, Shan},
    booktitle = {2018 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)},
    doi = {10.1109/TALE.2018.8615232},
    issn = {2470-6698},
    keywords = {Education;Games;Debugging;Programming profession;Problem-solving;computational thinking;algorithmic thinking;debug;primary school;coding education},
    month = {Dec},
    number = {},
    pages = {328-334},
    title = {Computational Thinking Education for Children: Algorithmic Thinking and Debugging},
    volume = {},
    year = {2018}
}

@inproceedings{8626930,
    abstract = {Soft skills are important criteria in preparing for a viable future employment, the lack of which, may result in a low employment rate among university graduates. These skills can be acquired via the use of Computational Thinking (CT) to cultivate problem solving and thinking skills. Since the inception of CT, however, not a single unified model has been developed as a guideline for educators. Based on the relevant articles available in IEEE Xplore Digital Library, Springer and ScienceDirect Journal, this paper comparing different CT models that focus on different CT dimensions which is concepts, practices and perspectives.},
    author = {Rozali, Nurul Faizah and Zaid, Norasykin Mohd and Noor, Norah Md and Ibrahim, Nor Hasniza},
    booktitle = {2018 IEEE 10th International Conference on Engineering Education (ICEED)},
    doi = {10.1109/ICEED.2018.8626930},
    issn = {},
    keywords = {Computational modeling;Programming profession;Education;Taxonomy;Problem-solving;Data models;computational thinking;soft skill;employment;problem solving;thinking},
    month = {Nov},
    number = {},
    pages = {208-213},
    title = {Developing A Unified Model of Teaching Computational Thinking},
    volume = {},
    year = {2018}
}

@inproceedings{8693273,
    abstract = {Some curriculum of making computer games were developed to engage students in digital game-making activities so as to enhance their computational thinking skills during the last few years. The findings of those studies are quite positive, especially concerning the promotion of computational thinking skills. However, many students seem to face difficulties in the processes of the game development, such as debugging, applying mathematics, or physics subjects. Additionally, students often have solved the problems and understood concepts, mainly math formulas and physics concepts, alone while creating their games. This study presents an innovative curriculum design that suggests two students playing different role to make motion-based touchless games (i.e., games that are based on natural user interaction technologies, like the Microsoft Kinect camera or Leap Motion). Based on the requirements of the innovative curriculum and interaction technologies, students can naturally fulfill the ideal of pair programming and get various benefits from each other.},
    author = {Chang, Chih-Kai and Tsai, Yu-Tzu},
    booktitle = {2018 7th International Congress on Advanced Applied Informatics (IIAI-AAI)},
    doi = {10.1109/IIAI-AAI.2018.00061},
    issn = {},
    keywords = {Games;Programming;Tools;Face;Cameras;Collaboration;Task analysis;computational thinking;learning by making games;natural user interaction;Kinect;pair programming},
    month = {July},
    number = {},
    pages = {284-287},
    title = {Pair-Programming Curriculum Development of Motion-Based Game for Enhancing Computational Thinking Skills},
    volume = {},
    year = {2018}
}

@inbook{8709361,
    abstract = {},
    author = {Denning, Peter J. and Tedre, Matti},
    booktitle = {Computational Thinking},
    doi = {},
    isbn = {9780262353410},
    issn = {},
    keywords = {},
    number = {},
    pages = {1-6},
    publisher = {MIT Press},
    title = {COMPUTATIONAL THINKING},
    url = {https://ieeexplore-ieee-org.crai.referencistas.com/document/8709361},
    volume = {},
    year = {2019}
}

@inproceedings{8753395,
    abstract = {Educational robots have been used in schools for STEM education and for teaching students programming and computational thinking (CT) for many years. The look and feel of traditional robots for educational purposes such as LEGO Mindstorms and NXT have been mostly engineering-oriented. Not until recently, have robotic products such as Dash & Dot utilized physical appearance which were cute and kid-friendly. This study compared the effects of using two kinds of robots- Dash & Dot and LEGO NXT, in terms of students' performance, student's attitudes about learning activities, and how different genders respond to various robots. A Quasi-Experimental Design was conducted. The participants consisted of 106 6th graders from four classes of students. Two classes were designated as the experimental groups which used Dash & Dot robots,). The other two classes of students were the control groups which used NXT robots. With respect to students' attitudes toward learning, the study showed no significant difference between experimental and control groups. With respect to learning programming skills, it was found that females in the experimental group prefer to use robots. Females showed a definite preference for using the Dash & Dot robots.},
    author = {Huang, Wei-Yeh and Hu, Chiu-Fan and Wu, Cheng-Chih},
    booktitle = {2018 International Conference on Learning and Teaching in Computing and Engineering (LaTICE)},
    doi = {10.1109/LaTICE.2018.00-13},
    issn = {2475-1057},
    keywords = {Computational thinking;Robot;Gender},
    month = {April},
    number = {},
    pages = {11-16},
    title = {The Use of Different Kinds of Robots to Spark Student Interest in Learning Computational Thinking},
    volume = {},
    year = {2018}
}

@inproceedings{8845505,
    abstract = {The call for innovative talents in the information age is imminent. With the promulgation of the domestic high school information technology curriculum standards in 2017, the formulation and positioning requirements of the core literacy of the disciplines, computational thinking as one of the four core literacy, is the thinking ability that everyone should have. Many foreign educational practice studies have shown that mind mapping can effectively promote students' cognitive development and knowledge construction. However, the domestic educational application research is relatively lacking in this aspect, and there is little research on the comprehensive and in-depth combination of it and the core literacy “computational thinking” of the specific information technology discipline. To this end, based on the research status at home and abroad, this paper attempts to use the concept map tool to represent several important functions of computational thinking, "definition of problems", "abstract function", "build model" and "Debugging and improvement". The diagram incorporates the teaching model in the computational thinking development curriculum. This study used quasi-experimental research methods to explore the effect of conceptual map tools on students' computational thinking. The research results show that this teaching method has a significant effect on the development of students' computational thinking.},
    author = {Xu, Ling and Tong, Ming-Wen and Li, Bin and Meng, Jiang and Fan, Chen-Yao},
    booktitle = {2019 14th International Conference on Computer Science & Education (ICCSE)},
    doi = {10.1109/ICCSE.2019.8845505},
    issn = {2473-9464},
    keywords = {Education;Tools;Programming;Visualization;Computational modeling;Creativity;Standards;computational thinking;concept map;project-based learning},
    month = {Aug},
    number = {},
    pages = {454-459},
    title = {Application of Concept Map in the Study of Computational Thinking Training},
    volume = {},
    year = {2019}
}

@inproceedings{8853613,
    abstract = {In regular basic education environments, one of the challenges of Computer and Computing courses or similar is to motivate students, who perceive programming as a difficult task. Arduino board is recognized as a tool to improve programming skills and to facilitate teamwork. In this paper, Computational Thinking is evaluated through concepts, practices and computational perspectives of the activities carried out with the Arduino board by the 5th-grade students of secondary education of the “José Obrero” Parochial Technical Educational Institution in the district of San Mateo from the province of Huarochirí of Lima region.},
    author = {Curasma, Ronald Paucar and Jara, Nolan Jara and Curasma, Herminio Paucar and Ornetta, Victor Cruz},
    booktitle = {2019 IEEE XXVI International Conference on Electronics, Electrical Engineering and Computing (INTERCON)},
    doi = {10.1109/INTERCON.2019.8853613},
    issn = {},
    keywords = {Education;Programming profession;Tools;Encoding;Computational modeling;Computational thinking;computational dimensions;Arduino;programming;coding;regular basic education},
    month = {Aug},
    number = {},
    pages = {1-4},
    title = {Assessment of Computational Thinking in regular basic education: case I.E.T.P. “José Obrero”},
    volume = {},
    year = {2019}
}

@inproceedings{8938909,
    abstract = {Computer programming is one of compulsory courses for science and engineering majors in colleges and universities, and C language is one of the most common programming language. In view of teaching problems of traditional programming course, for example, the concepts are abstract and difficult to understand for students, and students are lack of logical thinking of programming, this paper introduced the concept of computational thinking, analyzed how to integrate computational thinking into teaching contents of computer programming course, and flipped classroom teaching method was discussed too. The teaching practice showed that good teaching effects were achieved.},
    author = {Ding, Haiyan},
    booktitle = {2019 IEEE International Conference on Computer Science and Educational Informatization (CSEI)},
    doi = {10.1109/CSEI47661.2019.8938909},
    issn = {},
    keywords = {Programming profession;Online services;Training;Problem-solving;computer programming;pedagogy;computational thinking;flipped classroom},
    month = {Aug},
    number = {},
    pages = {72-75},
    title = {Teaching Research on Computer Programming based on Cultivation of Computational Thinking},
    volume = {},
    year = {2019}
}

@inproceedings{8964889,
    abstract = {Both Computational thinking and Practical thinking are important concepts of great concern to the international computer community. They are also hot topics needed to be studied in education. Inspired by these two kinds of thinking, we expound how to better carry out teaching practice. The teaching process is task-oriented, teacher-led and student-centered. In the whole teaching process, teachers use the way of integrating computational thinking with practical thinking to prepare courses, design tasks and guide students to complete learning tasks. Compared with the traditional teaching mode, the teaching mode of integrating computational thinking and practical thinking has made great progress in training students' computer practical ability and innovation ability. It can not only improve learning efficiency, but also train students' computer practical ability. Finally, the feasibility and efficiency of this method are verified by Java Web course design.},
    author = {Yu, Fengping and Wang, Hong},
    booktitle = {2019 10th International Conference on Information Technology in Medicine and Education (ITME)},
    doi = {10.1109/ITME.2019.00078},
    issn = {2474-3828},
    keywords = {Java;Task analysis;Programming;Software;Training;Information technology;Computational Thinking;Practical Thinking;Java Web},
    month = {Aug},
    number = {},
    pages = {312-316},
    title = {Computational Thinking & Practical Thinking Inspired Java Web Curriculum Reform Method},
    volume = {},
    year = {2019}
}

@inproceedings{8970131,
    abstract = {This paper is focused on the teaching/learning process of Computational Thinking at primary and secondary schools. It is generally accepted that Programming is a complex task that requires a long learning process. Theoretical knowledge about fundamentals on algorithms and data structures, as well as, on programming languages are required but are not enough; practicing a lot is also necessary. However, teaching Computer Programming is a hard job, most of the times unsuccessful. To overcome all the difficulties, felt by teachers and students, an increasingly bigger community of researchers in Computer Science is defending the importance of teaching Computational Thinking to young students to train them, since very earlier, in logic and abstract reasoning for problem solving. Our starting point to approach this topic relies on the use of an Ontology (OntoCnE) that describes in detail the concepts “Computational Thinking” and “Programming”, and maps those concepts to different education levels, starting with the first year. We believe that a person just acquires a new way of thinking, or a new way of behaving, if he is trained with the appropriate learning resources. So a main investment to educate people in Computational Thinking is on the choice/creation of those convenient resources. In particular we intended to investigate the impact of Augmented Reality in the usefulness of the referred resources. In that direction we will also discuss the development of a Web Platform to help on collecting and classifying (according to the referred ontology) learning resources to be used by teachers in computing classes. On the other hand, the platform will help on the retrieval, from that repository, of the most adequate resources to teach a specific subject to a specific level.},
    author = {Araújo, Cristiana and Lima, Lázaro V O and Henriques, Pedro Rangel},
    booktitle = {2019 International Symposium on Computers in Education (SIIE)},
    doi = {10.1109/SIIE48397.2019.8970131},
    issn = {},
    keywords = {computational thinking;programming;learning resource;teacher support tools;ontology},
    month = {Nov},
    number = {},
    pages = {1-6},
    title = {An Ontology based approach to teach Computational Thinking},
    volume = {},
    year = {2019}
}

@inproceedings{8995066,
    abstract = {Programming robots playing with the environment is an ongoing research project aimed at developing a robot and intervention program capable of enhancing young children's cognitive abilities and computational thinking skills. Using a robot sensitive to color and distance, children are able to use everyday objects in order to interact with it and program its movements. An eleven session intervention program using this robot was designed with the objective of creating playful learning instances were children would practice abilities associated with what is generally thought of as computational thinking. We'll assess children's computational thinking, fluid intelligence, working memory, planning, sequencing, number recognition and magnitude comparison, vocabulary, mental rotation, inhibitory control and cognitive flexibility to test for cognitive effects of the intervention. An active control in which children interact with the robot by remotely controlling it was used.},
    author = {Gerosa, Anaclara and Koleszar, Víctor and Gómez-Sena, Leonel and Tejera, Gonzalo and Carboni, Alejandra},
    booktitle = {2019 XIV Latin American Conference on Learning Technologies (LACLO)},
    doi = {10.1109/LACLO49268.2019.00046},
    issn = {},
    keywords = {Robots;Robot sensing systems;Color;Computational modeling;Robot kinematics;Motors;Silicon;computational thinking;educational robotics;early childhood},
    month = {Oct},
    number = {},
    pages = {226-230},
    title = {Educational Robotics and Computational Thinking Development in Preschool},
    volume = {},
    year = {2019}
}

@inproceedings{8995162,
    abstract = {During training at the Complementary Formation Program (CFP), Colombian primary school teachers do not acquire Computational Thinking (CT) skills, which are considered fundamental for the knowledge economies of the 21st century. In this paper, we describe the early stages of a project aiming to reform the CFP curriculum, such that CT skills becomes an integral part. As a first step, we carried-out four introductory workshops with 64 first-and third-semester CFP students and then surveyed them to gather their perceptions on CT. The results show that the students have a limited understanding of CT and its associated skills, but they recognize their importance. Moreover, they agree that primary school should be the starting point to develop them. The project will continue gathering information from current CFP teachers, current primary school teachers, and university professors who are experts in curriculum development, to develop the curricular proposal.},
    author = {Muñoz del Castillo, Armando and Muñoz, Mario A. and Acosta Huertas, Lydia Cruz and Herrera, Edgar and Jimenez Toledo, Javier and Ramos, Deixy Ximena},
    booktitle = {2019 XIV Latin American Conference on Learning Technologies (LACLO)},
    doi = {10.1109/LACLO49268.2019.00012},
    issn = {},
    keywords = {Computational Thinking;Curriculum design;Teacher training},
    month = {Oct},
    number = {},
    pages = {8-11},
    title = {Developing a Teacher Training Curriculum Including Computational Thinking Skills: Early Advances on a Study Focused on Colombia},
    volume = {},
    year = {2019}
}

@article{9020189,
    abstract = {Programming is considered a skill to arouse and inspire learner's potential. Learning to program is a complex process that requires students to write grammar and instructions. The structure of a programming language does not cause impose problems to students, the real obstacle is how to apply these learned grammars and present them in a complete and correct program code for problem solving. In this study, a deep learning recommendation system was developed, which includes augmented reality (AR) technology, and learning theory, and is provided for study by students in non-major and also from different learning backgrounds. Those students divided into two groups, the students participating in the experimental group were using the AR system with deep learning recommendation and the students participating in the control group were using the AR system without deep learning recommendation. The results show that students in experimental group perform better than the control group with regards to learning achievement. On the other hand, in the part of computational thinking ability, students using a deep learning recommendation based AR system is significantly better than those using non-deep learning recommendation based AR system. Among the various dimensions of computational thinking, creativity, logical computing, critical thinking, and problem-solving skills are significantly different among the two groups of students. The students in experimental group perform better than the control group with regards to the dimensions of computational thinking, creativity, logical computing, critical thinking, and problem-solving skills.},
    author = {Lin, Pei-Hsuan and Chen, Shih-Yeh},
    doi = {10.1109/ACCESS.2020.2977679},
    issn = {2169-3536},
    journal = {IEEE Access},
    keywords = {Machine learning;Education;Programming profession;Problem-solving;Grammar;Augmented reality;Deep learning recommendation;computational thinking;AR technology},
    month = {},
    number = {},
    pages = {45689-45699},
    title = {Design and Evaluation of a Deep Learning Recommendation Based Augmented Reality System for Teaching Programming and Computational Thinking},
    volume = {8},
    year = {2020}
}

@inproceedings{9028503,
    abstract = {This research study presents our work focused on studying the development of introductory computational thinking in undergraduate biomedical engineering students. In response to the growing computational intensity of the healthcare industry, biomedical engineering (BME) undergraduate education is starting to emphasize computation and computational thinking. Computational thinking is a way of thinking that uses concepts and methodologies of computing to solve problems in interdisciplinary and multidisciplinary subjects. In broader terms, computational thinking is not only associated with using computational tools but also with the thought process of solving a problem by data representation, problem decomposition, and algorithm design. Despite being so important, there is little research work or information available on the development of computational thinking in BME undergraduate students. Our research focuses on how BME undergraduate students develop computational thinking skills while performing group activities related to problem-solving. In order to conduct this study, we incorporate a teaching methodology that prompts computational thinking in a thermodynamics course being taught at a public mid-western university to approximately 120 sophomore students. We observe classroom activities involving analytical problem solving followed by pseudo code generation for computational coding. In order to investigate computational thinking, we collect classroom observations of small groups of students as they come up with a solution to an analytical problem with each other. We complement the observation notes of the classroom activities with follow up semi structured interviews with individual students from five groups. Thematic analysis of the student interviews is used in order to analyze student responses towards the incorporation of computation intensive teaching methodology. This Work in Progress helps us expand our understanding of computational thinking development and the challenges involved in performing computational thinking activity in BME undergraduate students.},
    author = {Shoaib, Huma and Cardella, Monica and Madamanchi, Aasakiran and Umulis, David},
    booktitle = {2019 IEEE Frontiers in Education Conference (FIE)},
    doi = {10.1109/FIE43999.2019.9028503},
    issn = {2377-634X},
    keywords = {Mathematical model;Thermodynamics;Interviews;Problem-solving;Computational modeling;Analytical models;Testing;thermodynamics;computational thinking},
    month = {Oct},
    number = {},
    pages = {1-4},
    title = {An Investigation of Undergraduates’ Computational Thinking in a Sophomore-Level Biomedical Engineering Course},
    volume = {},
    year = {2019}
}

@inproceedings{9066359,
    abstract = {The purpose of this study is to make learning material that can develop both Computational thinking and Mathematical thinking. This study suggest a hamburger flowchart as a teaching material that combines the three elements of "unplugged", "thinking from the end " and "mathematics class". Using this flowchart, basic experiment was conducted for 8 to 12 years old. The purpose of this experiment is to confirm whether it is possible for children to develop both Computational thinking and Mathematical thinking by using the hamburger flowchart. We evaluated both Computational thinking and Mathematical thinking from the state in this class and the content of the worksheet and prior and subsequent tests. As a result, the state related to Computational thinking and Mathematical thinking increased, and the correct answer rate of many children increased from the prior test to the subsequent test. Therefore it turned out that the hamburger flowchart affects mathematical thinking.},
    author = {Nakamura, Takayasu and Kawasaki, Tetsushi},
    booktitle = {2019 International Joint Conference on Information, Media and Engineering (IJCIME)},
    doi = {10.1109/IJCIME49369.2019.00108},
    issn = {},
    keywords = {Flowcharts;Programming profession;Tools;Education;Sugar;Toxicology;21st-century-skills;Computational-thinking;Mathematical-thinking;thinking-from-the-end},
    month = {Dec},
    number = {},
    pages = {305-308},
    title = {Computer Science Unplugged for Developing Computational Thinking and Mathematical Thinking},
    volume = {},
    year = {2019}
}

@inproceedings{9071265,
    abstract = {Today, Computational Thinking is seen as an important competency and the fourth skill that every child should process. Several significant attempts have been made to increase a student's exposure to Computational Thinking at the K-12 level, however the process is complex and requires systematic planning and comprehensive curriculum. In this paper, we describe the STEPP-UP program that aims to introduce middle schoolers to Computational Thinking via Scratch and Java coding sessions. A comprehensive curriculum and hands-on activities are applied to introduce Computational Thinking for a total of 41 students for a period of five semesters from Fall 2017 until Fall 2019. To assess the learning objectives, we used three methods of evaluation; design-scenarios, paper-assessments, and learner-documentation. Findings indicate that the students have increased knowledge of Computational Thinking and its applications for problem solving.},
    author = {Swaid, Samar and Suid, Taima},
    booktitle = {2019 International Conference on Computational Science and Computational Intelligence (CSCI)},
    doi = {10.1109/CSCI49370.2019.00150},
    issn = {},
    keywords = {Java;Programming;Sprites (computer);Tools;Education;Dogs;Computed tomography;Computational Thinking, K -12, Problem Solving, Java, Scratch Linear Search, Coding Literacy},
    month = {Dec},
    number = {},
    pages = {788-792},
    title = {Computational Thinking Education: Who Let the Dog Out?},
    volume = {},
    year = {2019}
}

@inproceedings{9155698,
    abstract = {Recent college students have been observed to be motivated and engaged in acquiring science, technology, engineering, and mathematics (STEM) knowledge and skills with robots and IoT objects. A sample of 13 master's students participated in the program. Data collected include the pre-and post- STEM and computational thinking (CT) written tests, and the pre- and post- surveys of learning perceptions toward the robots and IoT objects learning activities. The results show that the learning activities were an effective approach for the master's students' STEM learning outcome and CT as shown in the post-test. The differences between the master's students' STEM learning outcome, CT, and perceptions were also confirmed, particularly between the groups of computer programming-experienced learners and computer programming-novice learners. The results revealed that the learning activities with robots and IoT objects could improve the overall master's students' CT, STEM knowledge, and learning perceptions. Both programming-experienced and programming-novice learners' STEM learning outcome were improved.},
    author = {Hu, Chih-Chien and Tseng, Hsiao-Ting and Chen, Ming-Hsien and Goh Phaik Imm, Alexis and Chen, Nian-Shing},
    booktitle = {2020 IEEE 20th International Conference on Advanced Learning Technologies (ICALT)},
    doi = {10.1109/ICALT49669.2020.00033},
    issn = {2161-377X},
    keywords = {Programming profession;Educational robots;STEM;Computational thinking;IoT;Learning perception;Robot-assisted learning;STEM learning},
    month = {July},
    number = {},
    pages = {87-89},
    title = {Comparing the effects of robots and IoT objects on STEM learning outcomes and computational thinking skills between programming-experienced learners and programming-novice learners},
    volume = {},
    year = {2020}
}

@inproceedings{9225879,
    abstract = {Computational thinking is an important concept that is widely concerned by international computer community, and it is considered as an important way to carry out university computer education reform. This paper firstly analyzes the existing problems in university computer teaching for non-computer majors, and then it discusses a series of teaching practices that integrate computational thinking into university computer teaching, including: (1) Students are divided into different classes according to their computer proficiency; (2) We abandon the concept of “Narrow Instrumentalism”, and teach the most essential knowledge of computer foundation; (3) We propose the “data” as the mainline, and then reconstruct teaching content according to the mainline; (4) We also reconstruct experimental content with the mainline, and separate experimental teaching into a single course. The practices has proved that the teaching methods put forward in this paper yield good results, and it provides a new model for University Computer Foundation teaching, which aims at improving students’ computational thinking.},
    author = {He, Zhenyu and Zhao, Haihu},
    booktitle = {2019 IEEE International Conference on Engineering, Technology and Education (TALE)},
    doi = {10.1109/TALE48000.2019.9225879},
    issn = {2470-6698},
    keywords = {Education;Software;Instruments;Databases;Programming profession;computational thinking;university computer foundation;teaching reform;non-computer major},
    month = {Dec},
    number = {},
    pages = {1-6},
    title = {Practical Exploration of Integrating Computational Thinking into University Computer Foundation Education},
    volume = {},
    year = {2019}
}

@inproceedings{9247066,
    abstract = {This thesis study is an evaluation tool that measures the user's Computational Thinking (CT) according to its performance on Block-Based Programming Languages (BBPL) by using Machine Learning Techniques. The evaluation tool makes an evaluation for Machine Learning Model and each of the Computational Thinking seven fields. Via this developed tool, the objective is to product an alternative to the limited evaluation tools on Block-Based Programming Languages. Literature research was brought out in two sides as Machine Learning and Block-Based Programming Languages. In the first stage, on Machine Learning, the data set and the methods used in educational field were researched. In the second stage, the devices which are used to measure the performance on Block- Based Programming Languages were analyzed. On literature, there are various sources for teaching Computational Thinking ,but it occurs that measuring instruments that evaluates Computational Thinking are inadequate. To evaluate Computational Thinking a machine learning model was trained. Trained model was turned into online evaluation tool by which both the tutors and the students evaluate Computational Thinking easily. In the final stage, the developed online evaluation tool and the outcome was analyzed.},
    author = {Karakaş, Elif and Turhan Yöndem, Meltem},
    booktitle = {2020 Turkish National Software Engineering Symposium (UYMS)},
    doi = {10.1109/UYMS50627.2020.9247066},
    issn = {},
    keywords = {Performance evaluation;Computer languages;Computational modeling;Machine learning;Tools;Programming profession;Software engineering;Machine Learning;Block-Based Programming Languages;Computational Thinking},
    month = {Oct},
    number = {},
    pages = {1-5},
    title = {Performance-based evaluation of computational thinking skills using machine learning},
    volume = {},
    year = {2020}
}

@inproceedings{9272097,
    abstract = {The present study focuses on comparing the achievement levels of computational thinking skills in first-year engineering students at two Peruvian universities, one located in an area with a high human development index (Lima) and the other in a more vulnerable area (Amazonas). The study is based on a computational thinking competence assessment model carried out with 112 students who were given challenges and problems. The results show that: (a) the achievement levels of computational thinking competences differ significantly between the Lima group and the Amazonas group, (b) the highest levels of competence achievement are associated with students who had some level of previous instruction in secondary education, and (c) the differences in the achievement of computational thinking skills according to student gender are not significant.},
    author = {Nunez, Nicolas A. and Cornejo-Meza, Giuliana and Sánchez, Sandro A.},
    booktitle = {2020 IEEE ANDESCON},
    doi = {10.1109/ANDESCON50619.2020.9272097},
    issn = {},
    keywords = {Education;Analysis of variance;Programming profession;Conferences;Training;Standards;Engineering students;computational thinking;education in engineering;Peru;Latin America;vulnerable environments},
    month = {Oct},
    number = {},
    pages = {1-5},
    title = {Comparing computational thinking skills of engineering students in urban and rural areas of Peru},
    volume = {},
    year = {2020}
}

@inproceedings{9320732,
    abstract = {With the development of digital technologies, teaching computational thinking and relative skills in the K-12 curriculum can benefit students in thinking and create in the digital area. This study designed a programming course to help students develop computational thinking and relative skills, and conducted a practice in a primary school. Results indicated that students were benefited from three stages of the teaching process. Students' computational thinking knowledge, programming knowledge and skills, and problem-solving were developed after the learning of a semester. The programming works of the students also revealed that there was a tendency in the development of creativity.},
    author = {Wang, Yichi and Zhang, Yi and Mao, Aiping and Wang, Jue and Li, Niu},
    booktitle = {2020 Ninth International Conference of Educational Innovation through Technology (EITT)},
    doi = {10.1109/EITT50754.2020.00051},
    issn = {2166-0549},
    keywords = {Programming profession;Problem-solving;Testing;Media;Debugging;Visualization;Task analysis;computational thinking;programming course design;K-12 curriculum},
    month = {Dec},
    number = {},
    pages = {250-255},
    title = {The Research of Programming Teaching in Primary School on the Cultivation of Computational Thinking},
    volume = {},
    year = {2020}
}

@inproceedings{9332734,
    abstract = {This research aims to develop STEM learning activities for promote student's computational thinking skills and the results of this learning activities toward computational thinking of senior school student in the computing classroom. The study groups were 30 secondary school students in Pranakorn Si Ayutthaya who were studying in Semester 1, Academic Year 2019. They were selected by purposive sampling method. The research instruments were; (1) STEM education lesson plans for computational thinking developments; (2) The student's journals; and (3) Computational thinking test. The research was divided into three phases. The first phase focused on design lesson plans and learning activities for developing student's computational thinking skills. The second phase is implement the lesson plans and learning activities with the study group. The third phase is evaluation of the effectiveness of learning activities on develop student's computational thinking skills. The results shown learning activities can develop student's computational thinking skills, because of these activities were challenged students with real everyday life problems that required to used their computational thinking to solve the problems by decompose problems, find pattern recognition, abstraction thinking and develop algorithm for computer programming. So, these STEM learning activities could be effectively used in Computing course.},
    author = {Srisangngam, Pichet and Dechsura, Chaiyos},
    booktitle = {2020 5th International STEM Education Conference (iSTEM-Ed)},
    doi = {10.1109/iSTEM-Ed50324.2020.9332734},
    issn = {},
    keywords = {Instruments;Education;Sampling methods;Silicon;Pattern recognition;Programming profession;STEM;Computational thinking;STEM Education.},
    month = {Nov},
    number = {},
    pages = {103-105},
    title = {STEM Education Activities Development to Promote Computational Thinking’s Students},
    volume = {},
    year = {2020}
}

@inproceedings{9477758,
    abstract = {With the development of science and technology, the interdisciplinary knowledge penetration has become an important trend in the development of science and technology. Computational thinking is expanding from the field of computer science to other disciplines. The computational thinking is the focus of the information technology in science and engineering. Python teaching is widely used in programming courses in colleges and universities. The combination of theory and practice can stimulate students' initiative of independent innovation by teaching practice. It can effectively improve the effect and quality of computer thinking training.},
    author = {Wang, Xuemei and Zou, Xuelan and Yin, Weifeng and Li, Qingsheng and Zhang, Li and Hong, Liang},
    booktitle = {2021 IEEE 3rd International Conference on Computer Science and Educational Informatization (CSEI)},
    doi = {10.1109/CSEI51395.2021.9477758},
    issn = {},
    keywords = {Training;Technological innovation;Systematics;Electronic learning;Education;Market research;Online services;computational thinking;case teaching;python programming},
    month = {June},
    number = {},
    pages = {311-314},
    title = {Research and Application of Computational Thinking on Python Teaching},
    volume = {},
    year = {2021}
}

@inproceedings{9526726,
    abstract = {This paper mainly adopts the theory with practice, combines the computational thinking method with education and teaching, and constructs the inquiry teaching model based on computational thinking. We adopt the formal teaching model and learning model, incremental expression of computational thinking ability to improve the effect, from the computational thinking of automation, abstract characteristics of the teaching and learning model based on computational thinking formalization. Then, in the case study, the learning support technology scheme of MOOC course platform combining mobile terminal and HTML5 is designed. Through teaching practice and quantitative analysis of experimental behavior, the platform effectively avoids the interference of programming language code, which simplifies the expression and application process of algorithm thinking, and enhances students' interest and operation of programming working ability.},
    author = {Xue, Chen and Zhun, Wang},
    booktitle = {2020 13th International Conference on Intelligent Computation Technology and Automation (ICICTA)},
    doi = {10.1109/ICICTA51737.2020.00063},
    issn = {},
    keywords = {Computer languages;Computer aided instruction;Automation;Electronic learning;Codes;Statistical analysis;Computational modeling;computational thinking;practice analysis;computer basic teaching;HTML;MOOC},
    month = {Oct},
    number = {},
    pages = {266-269},
    title = {The Teaching Mode and Practice Analysis of College Computer Basic Course Based on Computational Thinking},
    volume = {},
    year = {2020}
}

@inproceedings{9534576,
    abstract = {Computational thinking ability is a very important, and it is a basic necessary skill for future talents. This paper describes the shortcomings of the current education of cultivating students’ computational thinking ability, analyzes the needs of cultivating students’ innovative ways of computational thinking in the information age, and expounds the necessity of innovative education and teaching. In this paper, the project driven teaching mode and the teaching method of computational thinking cultivation are proposed. The Small Private Online Course (SPOC) teaching method is used in the teaching practice, which is a kind of information technology method. Combined with project driven and SPOC teaching methods, the students' computational thinking ability is further cultivated. In the teaching practice, the information technology and project driven learning are made full use, which are two key factors in the information age, so the students’ computational thinking ability has been greatly improved, and the teaching effect is obvious.},
    author = {Xiaohong, Cong and Jie, Liu and Zhibin, Miao and Li, Xu},
    booktitle = {2021 2nd International Conference on Artificial Intelligence and Education (ICAIE)},
    doi = {10.1109/ICAIE53562.2021.00125},
    issn = {},
    keywords = {Training;Technological innovation;Education;Employment;Information age;Artificial intelligence;information technology;computational thinking;Innovation education;Project driven;Teaching practice},
    month = {June},
    number = {},
    pages = {564-567},
    title = {Teaching research on the cultivation of computational thinking ability by using information technology},
    volume = {},
    year = {2021}
}

@inproceedings{9546563,
    abstract = {The study aims to examine the effectiveness of flipped-classroom instruction on college students’ computational thinking skills (CTS). Participants were enrolled in the basic computer course from two classes at a university in central China. One class as an experimental group was chosen for the flipped-classroom instruction method (n=55); the other as a control group used the traditional lecture-based instruction method (n=54). The results show that learning through the flipped-classroom approach can significantly promote students’ levels of creativity, algorithmic thinking, cooperativity, and critical thinking, compared with the traditional lecture-based instruction approach. The findings of this research suggest that instructors should be encouraged to take the flipped-classroom instruction method to teach.},
    author = {Gong, Di and Yang, Harrison Hao and Cai, Jin},
    booktitle = {2021 International Symposium on Educational Technology (ISET)},
    doi = {10.1109/ISET52350.2021.00050},
    issn = {2766-2144},
    keywords = {Educational technology;Creativity;computational thinking skills;flipped-classroom instruction;traditional lecture-based instruction;quasi-experiment},
    month = {Aug},
    number = {},
    pages = {207-210},
    title = {Investigating the Flipped-classroom Approach on College Students’ Computational Thinking Skills},
    volume = {},
    year = {2021}
}

@inproceedings{9583648,
    abstract = {Learning to program is the new literacy of the 21st century. Computational thinking, closely related to programming, requires thinking and solving problems with different levels of abstraction and is independent of hardware devices. The early childhood education stage provides teachers with the opportunity to lay the foundations for a comprehensive quality education using innovative tools and technologies. Educational robotics in early childhood education becomes a tool that facilitates the acquisition of knowledge to children, playfully, based on the principles of interactivity, social interrelationships, collaborative work, creativity, constructivist and constructionist learning, and a student-centered didactic approach, allowing in turn that student can acquire digital competencies and develop logical and computational thinking in an underlying way. This project explores the current state of teaching and learning computational thinking and programming in early childhood education in an inclusive manner. Moreover, the lack of diversity and inequality is particularly latent in science, Technology, Engineering, and Mathematics (STEM) fields. Therefore, this work considers this problem and presents an inclusive coeducation approach to this new literacy, eliminating gender stereotypes and extending them to people with Down syndrome and hospitalized minors.},
    author = {González-González, Carina S. and Caballero-Gil, Pino and García-Holgado, Alicia and García-Peñalvo, Francisco J. and Molina, Jezabel and del Castillo-Olivares, José M. and San Juan, Bernardo Candela and Cuesta, Sara García and Perdomo, Inmaculada and Caballero-Gil, Cándido and Gutíerrez-Vela, Francisco and Paderewski, Patricia and Holz, Verónica Violant and Iranzo, Rosa Gil and Ramos, Sofía},
    booktitle = {2021 International Symposium on Computers in Education (SIIE)},
    doi = {10.1109/SIIE53363.2021.9583648},
    issn = {},
    keywords = {Computers;Education;Tools;Collaborative work;Hardware;Programming profession;Robots;Computational thinking;programming;inclusion;digital literacy;STEM;childhood education},
    month = {Sep.},
    number = {},
    pages = {1-4},
    title = {COEDU-IN Project: an inclusive co-educational project for teaching computational thinking and digital skills at early ages},
    volume = {},
    year = {2021}
}

@inproceedings{9588856,
    abstract = {This study aims to examine the development of Project Based Learning kits using Scratch program to improve students' mathematical computational thinking skills in statistics content. The research method used is Research and Development (R & D) approach which refers to Four-D model: Define, Design, Develop, and Disseminate. In the initial stage, researchers conducted preliminary research through literature studies, school surveys, and draft designs. The study produces Project Based Learning kits using Scratch program consist of student's worksheet, lesson plans, and an instrument of mathematical computational thinking. The design of the model was then revised by the expert trial subject. The subjects of the expert test were mathematics learning experts and several mathematics school teachers. The field Pre-Test and Post-Test were conducted in a Junior High School in Tangerang Selatan on mathematical computational thinking instruments, consisting of four essay test (8 question items). The collected data were analyzed using qualitative and quantitative techniques. In validity aspects, all the three learning kits are valid. From the aspect of effectiveness, the Project Based Learning model intervention can improve students' mathematical computational thinking skills. In terms of practicality, students' responses to the developed worksheets are positive.},
    author = {Hadi, Mega Ekka and Nur Atiqoh, Khamida Siti and Kadir},
    booktitle = {2021 9th International Conference on Cyber and IT Service Management (CITSM)},
    doi = {10.1109/CITSM52892.2021.9588856},
    issn = {},
    keywords = {COVID-19;Pandemics;Computational modeling;Instruments;Tools;Mathematical models;Research and development;mathematical computational thinking;scratch program;project based learning},
    month = {Sep.},
    number = {},
    pages = {1-5},
    title = {Improving Students' Mathematical Computational Thinking Using Scratch Program through Project Based Learning: A Development Research during Pandemic Covid-19},
    volume = {},
    year = {2021}
}

@inproceedings{9603471,
    abstract = {Under the background of modern computer science education, the development of students' computational thinking ability and programming problem solving skills is the most important work. This paper researches on group-based learning teaching mode to computational thinking ability development based on Blackboard system, which explores a suitable learning way in terms of learner cognitive engagement and constructivist perspective using Blackboard system, and emphasizes the student's subject position in learning and the teacher's dominant position in teaching. It can also enhance the interaction between the teacher and the student, a positive teacher-student relationship facilitates affective learning, thus developing the educational process and making it more comfortable. This paper discusses the development of computational thinking ability and Blackboard system, and the current situation of the computer teaching. Then put forward the key elements of course content selection in computer science education, and designed a group-based learning teaching mode to computational thinking ability development based on Blackboard system.},
    author = {Wang, Yintong and Li, Shuo},
    booktitle = {2021 International Conference on Education, Information Management and Service Science (EIMSS)},
    doi = {10.1109/EIMSS53851.2021.00021},
    issn = {},
    keywords = {Computational modeling;Education;Collaboration;Computer science education;Information management;Problem-solving;Programming profession;computational thinking;group-based learning teaching mode;computer science education},
    month = {July},
    number = {},
    pages = {58-61},
    title = {Research on group-based learning teaching mode to computational thinking ability development based on Blackboard system},
    volume = {},
    year = {2021}
}

@inproceedings{9627365,
    abstract = {Computational thinking is an important skill for solving complex problems, including processes such as decomposition, pattern recognition, abstraction, and algorithmic design. Game-based learning has recently seen an increase in prevalence for teaching computational thinking, making games an important topic of study. However, there is currently no validated tool for assessing Computational Thinking (CT) that performs reliably across disciplines and age groups. In the absence of such a tool, this paper examines several software testing methods for the evaluation of CT pedagogy effectiveness within serious games. Namely, it makes recommendations for the application of standardized questionnaires, think-aloud testing, and automated data logging for evaluating games that promote CT learning. It concludes with a potential use case to demonstrate how the methods can be combined to achieve a granular and actionable understanding of a complex CT assessment problem and its causes.},
    author = {Fanfarelli, Joey R.},
    booktitle = {2021 IEEE/ACIS 20th International Fall Conference on Computer and Information Science (ICIS Fall)},
    doi = {10.1109/ICISFall51598.2021.9627365},
    issn = {},
    keywords = {Software testing;Information science;Bibliographies;Education;Games;Manuals;Tools;serious games;game;gaming;computational thinking;algorithmic thinking;test;testing;assessment;development},
    month = {Oct},
    number = {},
    pages = {149-152},
    title = {Assessing Computational Thinking Pedagogy in Serious Games Through Questionnaires, Think-aloud Testing, and Automated Data Logging},
    volume = {},
    year = {2021}
}

@inproceedings{9645630,
    abstract = {As the information age has progressed, computational thinking ability to solve problems has become an indispensable way of life in life. Many scholars believe that the process of solving problems will be more logical if they have computational thinking ability. At the same time, scholars believe that a good learning method improves learners' intrinsic motivation. Therefore, in this research, we try to use conceptual mapping so that students can construct knowledge when composing their own images, as the focus of this learning model and computational thinking is the thinking process and the two coincide. This research intends to introduce the traditional programming robot course into conceptual mapping and measure whether there are differences in computational thinking tendencies, problem-solving tendencies, and intrinsic motivations between students who use conceptual mapping and those who do not use it. The students in the experimental group with conceptual mapping activities developed computational thinking skills during the program robotics course. The students in the control group first watched the computational thinking explanation video to explain the computational thinking skills to the students, and then taught in the traditional programming robotics course.},
    author = {Chen, Bing-Hong and Chen, Ling-Hsiu and Chen, Chih-Cheng and Chen, Chih-Hung},
    booktitle = {2021 IEEE 3rd Eurasia Conference on IOT, Communication and Engineering (ECICE)},
    doi = {10.1109/ECICE52819.2021.9645630},
    issn = {},
    keywords = {Learning systems;Conferences;Computational modeling;Programming;Information age;Robot learning;Problem-solving;Concept mapping;computational thinking;programmed robot 10 pts;intrinsic motivation},
    month = {Oct},
    number = {},
    pages = {617-620},
    title = {Influence of Programming Robot Learning Mode Based on Conceptual Mapping on College Students' Computational Thinking},
    volume = {},
    year = {2021}
}

@inproceedings{9678854,
    abstract = {In today's world of growing complexity and interconnectedness, computational thinking (CT) and systems thinking (ST) are imperative for everyone to solve complex problems, create advanced solutions, and innovate cutting-edge technologies and systems. Traditional teaching approaches for CT and ST offer limited avenues for applying the knowledge and skills learned in class. This paper presents and discusses the design and development of intelligent aquaponics capstone projects to foster CT and ST in undergraduate students. Specifically, students designed and built an automated aquaponics system with internet of things for real-time remote monitoring and control. Aquaculture and hydroponics subsystems, hardware and software components, communication networks, and data acquisition and analysis of fish and plant growth were integrated and tested, with high yield and quality of fish and vegetables. Attributable to the multidisciplinary and multifaceted high-tech aquaponics system, students can broaden and deepen their theoretical understanding and practical experience of CT and ST.},
    author = {Ng, Andrew Keong and Mahkeswaran, R},
    booktitle = {2021 IEEE International Conference on Engineering, Technology & Education (TALE)},
    doi = {10.1109/TALE52509.2021.9678854},
    issn = {2470-6698},
    keywords = {Education;Writing;Fish;Real-time systems;Software;Reflection;Systems thinking;computational thinking;systems thinking;aquaponics;urban farming technology;capstone project},
    month = {Dec},
    number = {},
    pages = {1039-1044},
    title = {Fostering Computational Thinking and Systems Thinking through Aquaponics Capstone Projects},
    volume = {},
    year = {2021}
}

@article{9684795,
    abstract = {A significant aspect of computational thinking is as a way of reasoning about the world in terms of data. This mindset channels number-crunching toward an ambition to discover knowledge through logic, models and simulations. Here we show how computational cognitive science can be used to reconstruct and analyse the structure of computational thinking mindsets (forma mentis in Latin) through complex networks. As a case study, we investigate cognitive networks tied to key concepts of computational thinking provided by (i) 159 high school students enrolled in a science curriculum and (ii) 59 researchers in complex systems and simulations. Researchers' reconstructed knowledge highlighted a positive mindset about scientific modelling, semantically framing data and simulations as ways of discovering nature. Students correctly identified different aspects of logic reasoning but perceived ‘computation’ as a distressing, anxiety-eliciting task, framed with math jargon and lacking links to real-world discovery. Students' mindsets around ‘data’, ‘model’ and ‘simulations’ critically revealed no awareness of numerical modelling as a way for understanding the world. Our findings provide evidence of a crippled computational thinking mindset in students, who acquire mathematical skills that are not channelled toward real-world discovery through coding. This unlinked knowledge ends up being perceived as distressing number-crunching expertise with no relevant outcome. The virtuous mindset of researchers reported here indicates that computational thinking can be restored by training students specifically in coding, modelling and simulations in relation to discovering nature. Our approach opens innovative ways for quantifying computational thinking and enhancing its development through mindset reconstruction.},
    author = {Stella, M and Kapuza, A and Cramer, C and Uzzo, S and Latora, Vito},
    doi = {10.1093/comnet/cnab020},
    issn = {2051-1329},
    journal = {Journal of Complex Networks},
    keywords = {computational thinking;cognitive network science;mindset reconstruction;education},
    month = {Nov},
    number = {6},
    pages = {1-13},
    title = {Mapping computational thinking mindsets between educational levels with cognitive network science},
    volume = {9},
    year = {2021}
}

@inproceedings{9690630,
    abstract = {Project-Based Learning and STEAM Education are widely favored by schools and teachers because both of them are student-centered learning models by allowing students to collaborate and explore around issues in order to promote the development of students' learning in the 21st century. However, in practical pedagogical applications, specific educational models and implementations are highly dependent on exceptional teachers with innovative abilities, especially in the cultivation of implicit higher-order thinking of students still lacking a better landing point. In the context of the current era of rapid development of information technology, the educational changes caused by the new development of smart education mean that more attention should be paid to the level of thinking and operational skills of students. As a result, the Problem-Based Learning for Computational Thinking Development Model for Primary and Secondary Schools (CTPBL), which is interdisciplinary, contextual, innovative, experiential and humanistic in nature, has emerged. As a new educational model, CTPBL helps integrate the advantages of existing Project-Based Learning and STEAM Education, crack the dilemma of teachers' choice of the inherent educational model, and realize the cultivation of students' information literacy and the improvement of their comprehensive ability. However, it still needs to be further explored, such as its operation mechanism, technology carrier, and teachers' roles.},
    author = {Zhao, Danqing and Li, Yatao},
    booktitle = {2022 11th International Conference on Educational and Information Technology (ICEIT)},
    doi = {10.1109/ICEIT54416.2022.9690630},
    issn = {},
    keywords = {Training;Printing;Solid modeling;Computational modeling;Virtual reality;Production;Information age;project-based learning;production-based learning;interdisciplinary learning;computational thinking;educational model},
    month = {Jan},
    number = {},
    pages = {10-15},
    title = {Research on the Educational Model of Computational Thinking Cultivation in Primary and Middle Schools Oriented to Production-Based Learning},
    volume = {},
    year = {2022}
}

@inproceedings{9694003,
    abstract = {Gender differences in computational thinking (CT) among students are obvious, with boys ‘CT being significantly higher than girls’. Therefore, how to effectively improve girls' CT has become a serious concern. This study integrated two types of project-based learning (PBL) into a Scratch programming course, one with extensive teacher-supported scaffolding and the other with limited teacher-supported scaffolding. To examine their impact on girls' CT skills and self-efficacy, this study applied mixed research methods, conducted a pretest-posttest control group experiment, and analyzed the quantitative and qualitative data collected from 21 grade-3 girls in a primary school. It was found that the extensive teacher-supported scaffolding of PBL in a Scratch programming course is more effective in promoting the CT skills and self-efficacy than limited teacher-supported scaffolding of PBL. These findings have some implications for the effective PBL practice and related teacher professional development.},
    author = {Jin, Yunbo and Sun, Junmei and Ma, Hongliang and Wang, Xiaohong},
    booktitle = {2021 Tenth International Conference of Educational Innovation through Technology (EITT)},
    doi = {10.1109/EITT53287.2021.00077},
    issn = {2166-0549},
    keywords = {Technological innovation;Programming profession;computational thinking;project-based learning;scaffolding;girls},
    month = {Dec},
    number = {},
    pages = {362-366},
    title = {The impact of different types of scaffolding in project-based learning on girls' computational thinking skills and self-efficacy},
    volume = {},
    year = {2021}
}

@inproceedings{9725213,
    abstract = {Computational thinking is a type of analytical thinking that is developed intentionally, that is, under a “learned” approach, and the best way to learn it is through computer programming. In this paper, the experience of using block-based programming environments such as Scratch, Lightbot and the PSelnt pseudo-code tool for the understanding of computational concepts and development of computational thinking skills is reported. A quasi-experimental methodological design was used, since it did not work with a control group. A mixed exploratory investigation was carried out. 85 first-year students from the Accounting Professional School of the National University of San Agustin de Arequipa participated in the experience. The results show that in introductory programming courses of short time period, teaching with block-based programming environments compared to the use of pseudocode with the PSelnt tool, facilitates the appropriation of computational concepts and the development of computational thinking skills; thus obtaining better learning results. It is concluded that block-based programming environments favor the construction of knowledge and foster the development of creativity and algorithmic thinking.},
    author = {Laura-Ochoa, Leticia and Bedregal-Alpaca, Norka},
    booktitle = {2021 XVI Latin American Conference on Learning Technologies (LACLO)},
    doi = {10.1109/LACLO54177.2021.00070},
    issn = {},
    keywords = {Design methodology;Education;Programming profession;Creativity;Programming environments;algorithmic thinking;computational thinking;constructionism;digital literacy;problem solving},
    month = {Oct},
    number = {},
    pages = {112-117},
    title = {Development of Computational Thinking Skills: An Experience With Undergraduate Students},
    volume = {},
    year = {2021}
}

@inproceedings{9728803,
    abstract = {Recent college students have been observed to be motivated and engaged in acquiring information and communication technology (ICT) knowledge and skills with robots and digital media. The purpose of this study is to develop students’ technology comprehension through a learning activity by constructing robot-based storytelling systems. A sample of 15 college students participated in the program. Data collected include the pre-and post-computational thinking tests (CTt) and computational thinking skill (CTs) tests for evaluating their learning effects of technology comprehension (TC) in terms of computational thinking knowledge and skills and their perceptions toward the robot-based storytelling development environment and learning activities. The results show that the learning activities were an effective approach for enhancing the students’ TC as shown in the post-test. The differences between the students’ CT and perceptions were also confirmed. The results revealed that the learning activities with the robot-based storytelling development environment could improve the students’ TC knowledge and skills, and learning perceptions.},
    author = {Hu, Chih-Chien and Chen, Ming-Hsien and Yuadi, Imam and Chen, Nian-Shing},
    booktitle = {2022 24th International Conference on Advanced Communication Technology (ICACT)},
    doi = {10.23919/ICACT53585.2022.9728803},
    issn = {1738-9445},
    keywords = {Education;Media;Information and communication technology;Robots;Creativity;Technology comprehension;Computational thinking;Robot-based storytelling;Information and communication technology},
    month = {Feb},
    number = {},
    pages = {496-500},
    title = {The effects of constructing robot-based storytelling system on college students' computational thinking skill and technology comprehension},
    volume = {},
    year = {2022}
}

@article{9744486,
    abstract = {This article illustrates that the task design and problem selection are of characteristic influence to evoke sense-reason-act programming (SRA) among primary school pupils when programming robots. Research shows that the task design influences the development of computational thinking (CT). The literature provides evidence that the context, the problem space, and the representation of the problem to apply SRA-programming require the programming task to be embedded in a dynamic context in which a programmable robot must use sensory information to anticipate changes in the environment. In order to ascertain whether the problem space and the task design influence the evocation of SRA-thinking, this article uses a research design comparing the differences between two programming conditions (static/dynamic). In these conditions, pupils use Lego EV-3 robots and Mindstorms software to solve programming problems. As a post-measurement, a Lego challenge is applied. In this article, it is shown that the integration of a dynamic task design to solve a programming problem is essential for a deeper understanding of CT skills. Furthermore, when pupils can immediately test the consequences of their program in a dynamic environment and, thus, the learning environment provides an appropriate problem, they gain a deeper understanding of the added value of sensors and will be better able to reason about complex problems. It is found that programming in a dynamic problem environment almost naturally evokes SRA-thinking, as opposed to programming in a static environment. The influence of SRA-programming as demonstrated identifies characteristics of CT.},
    author = {Fanchamps, Nardie and Slangen, Lou and Specht, Marcus and Hennissen, Paul},
    doi = {10.1109/TLT.2022.3162895},
    issn = {1939-1382},
    journal = {IEEE Transactions on Learning Technologies},
    keywords = {Programming;Pupils;Programming profession;Robots;Task analysis;Robot sensing systems;Problem-solving;Computational thinking (CT);dynamic environments;robotics;sense-reason-act (SRA)-thinking;tangible output},
    month = {April},
    number = {2},
    pages = {213-222},
    title = {The Effect on Computational Thinking Using SRA-Programming: Anticipating Changes in a Dynamic Problem Environment},
    volume = {15},
    year = {2022}
}

@inproceedings{9759837,
    abstract = {This study attempted to investigate elementary school teachers' understandings, beliefs, and intentions toward STEM and Computational Thinking. We collected data through a survey of 16 teachers at one elementary school in Malang City, Indonesia. They represented a variety of subjects with diverse learning experiences. The survey took place after the respondents received a short training about STEM and Computational Thinking. Quantitative analysis showed that most elementary school teachers positively demonstrated Computational Thinking practices in their schools. Besides, they believed that Computational Thinking could help students think logically, structurally, and creatively, while STEM helped train students to be problem solvers in an analytical, critical, and practical way. In addition, most respondents intended to continue learning and applying STEM and Computational Thinking approaches in their learning design. Added to this, the participants' understanding of STEM and Computational Thinking also improved based on the results of the Wilcoxon test conducted on the pre-test and post-test. This study provides valuable information on the need for elementary teacher development programs, namely improving teachers' teaching skills based on STEM and Computational Thinking for preparing students with 21 st-century learning skills.},
    author = {Surahman, Ence and Hua Wang, Tzu and Turner Lam, Kee-Fui and Sulthoni and Nendra Pratama, Ujang and Nur Aisyah, Eny},
    booktitle = {2022 2nd International Conference on Information Technology and Education (ICIT&E)},
    doi = {10.1109/ICITE54466.2022.9759837},
    issn = {},
    keywords = {Training;Statistical analysis;Oceans;Education;Urban areas;Problem-solving;STEM;computational thinking;elementary teachers;understandings;beliefs;intentions},
    month = {Jan},
    number = {},
    pages = {175-180},
    title = {Investigating Elementary Teachers' Understanding, Beliefs, and Intentions toward STEM and Computational Thinking in Education},
    volume = {},
    year = {2022}
}

@inproceedings{9766703,
    abstract = {Computational thinking (CT) has been described as a set of valuable skills for tackling complex problems. To foster CT among K-12 students, different initiatives have been introduced by governmental and non-governmental entities, and numerous studies have been carried out by researchers to define and integrate CT into school curriculum. However, previous studies has shown little agreement among researchers, governmental and non-governmental sectors about a unified CT definition. These dissensions have introduced challenges in formulating a definition for CT at the K-12 level. The absence of a unified definition may increase the challenges for teachers to teach and integrate CT into school curriculum. To foster CT among K-12 students, we introduce a definition and framework for CT. We evaluated 39 articles and extracted the most common elements used in the literature to frame CT definition and describe its elements. Several studies have discussed, as well as investigated, the significance of conceptualizing and comprehending the interaction and dependency relationships among computational objects. However, our literature review discovered that little attention has been dedicated to the concept of dependency in the CT body of knowledge. Based on the literature review, we define CT as the thought process used for solving problems, and it encompasses the elements of problem decomposition, abstraction, and algorithmic thinking. We conjecture the CT definition is missing the element of dependency. In the context of CT, we define dependency as the knowledge of comprehending the interrelationships between different sections of a decomposed problem.},
    author = {Ismail, Redar and Steinbach, Theresa A. and Miller, Craig S.},
    booktitle = {2022 IEEE Global Engineering Education Conference (EDUCON)},
    doi = {10.1109/EDUCON52537.2022.9766703},
    issn = {2165-9567},
    keywords = {Computer science;Bibliographies;Conferences;Computational modeling;Engineering education;Computational Thinking (CT);K-12 Education;Dependency;Abstraction;Decomposition;Algorithmic Thinking},
    month = {March},
    number = {},
    pages = {801-810},
    title = {A Guide Towards a Definition of Computational Thinking in K-12},
    volume = {},
    year = {2022}
}

@article{9790858,
    abstract = {Computational thinking (CT) skills are becoming increasingly relevant for future professionals across all domains, beyond computer science (CS). As such, an increasing number of bachelor's and master's programs outside of the CS discipline integrate CT courses within their study program. At the same time, tools such as notebooks and interactive apps designed to support the teaching of programming concepts are becoming ever more popular. However, in non-CS majors, CT might not be perceived as essential, and students might lack the motivation to engage with such tools in order to acquire solid CT skills. This article presents a field study conducted with 115 students during a full semester on a novel computational notebook environment. It evaluates computational notebooks and CT skills in an introductory course on information technology for first-year undergraduates in business and economics. A multidimensional evaluation approach makes use of pre- and post-test surveys, lectures, and self-directed laboratory sessions tracking analytics. Our findings suggest that, in the process of learning CT for non-CS students, engagement in active learning activities can be a stronger determinant of learning outcomes than initial knowledge. Furthermore, gamifying computational notebooks can serve as a strong driver of active learning engagement, even more so than initial motivational factors.},
    author = {De Santo, Alessio and Farah, Juan Carlos and Martínez, Marc Lafuente and Moro, Arielle and Bergram, Kristoffer and Purohit, Aditya Kumar and Felber, Pascal and Gillet, Denis and Holzer, Adrian},
    doi = {10.1109/TLT.2022.3180588},
    issn = {1939-1382},
    journal = {IEEE Transactions on Learning Technologies},
    keywords = {Education;Hybrid learning;Codes;Programming profession;Encoding;Python;Games;Active learning;computational notebooks;computational thinking (CT);fieldwork learning;gamification;motivation},
    month = {June},
    number = {3},
    pages = {392-405},
    title = {Promoting Computational Thinking Skills in Non-Computer-Science Students: Gamifying Computational Notebooks to Increase Student Engagement},
    volume = {15},
    year = {2022}
}

@inproceedings{9799068,
    abstract = {Computational Thinking (CT) is a method of analysis and problem solving that enables the development of life skills and positively influences the social and competitive conditions of people. This type of thinking promotes learning through the application of planning, analysis, abstraction and decomposition of problems into their constituent parts. In addition, PC contributes to the formation of critical thinking, creativity and cooperation between people. In education, the mechanisms used to foster CP are diverse; among them, learning through programming. Databases of source code generated in learning exercises using the CP method are a valuable tool for discovering learning patterns. However, there are no robust and scalable methods for studying the huge source code bases of learning products to recognize the predominant patterns and determine the effectiveness of the method. Consequently, a comprehensive analysis of learners’ skills, knowledge, outcomes and performance levels is necessary to identify points of improvement to meet learning objectives and modify curricula and exercises. This paper presents the joint research between the Costa Rica Institute of Technology (TEC) and the PRONIE MEP-FOD program of the Omar Dengo Foundation. Its objective is to automatically analyze the source code created by the students, evaluate the Computational Thinking skills they developed and compare the results with the learning objectives established in the study plans.},
    author = {Gonzalez-Torres, Antonio and Sancho-Chavarria, Lilliana and Zuniga-Cespedes, Magaly and Monge-Fallas, Jorge and Navas-Su, Jose},
    booktitle = {2021 International Conference on Computational Science and Computational Intelligence (CSCI)},
    doi = {10.1109/CSCI54926.2021.00222},
    issn = {},
    keywords = {Measurement;Codes;Scientific computing;Education;Software;Planning;Pattern recognition;Computation thinking;program analysis;automatic grading},
    month = {Dec},
    number = {},
    pages = {1037-1042},
    title = {A strategy to assess computational thinking},
    volume = {},
    year = {2021}
}

@inproceedings{9973092,
    abstract = {With the rapid development of human society and technology, it's necessary for contemporary students to have the ability to quickly adapt to social development. Meanwhile, traditional educational concepts have to be transformed in time, and a full understanding of computational thinking plays an important role in promoting students' life-long development. Based on in-depth analysis and research on computational thinking theory, this paper integrates micro: bit into teaching from the perspective of practical application. After analyzing the teaching objectives, teaching contents, and teaching process, this paper proposes an instructional design for the development of computational thinking for secondary school students.},
    author = {Liu, Junjie and Xia, Xiaojun and Bai, Yi and Liu, Pingyao},
    booktitle = {2022 4th International Conference on Computer Science and Technologies in Education (CSTE)},
    doi = {10.1109/CSTE55932.2022.00043},
    issn = {},
    keywords = {Visualization;Technological innovation;Knowledge acquisition;Education;Focusing;Market research;Computational efficiency;computational thinking;micro:bit;instructional design},
    month = {May},
    number = {},
    pages = {198-201},
    title = {A Study of Micro:bit Teaching Design Based on the Development of Computational Thinking of Secondary School Students},
    volume = {},
    year = {2022}
}

@inproceedings{9990631,
    abstract = {Computational thinking is a fundamental thinking skill for students in the 21st-century learning era. This study aims to integrate computational thinking skills in physics through project-based learning. Data were gathered through observation, interviews, and portfolio documents. The results indicated three main categories of computational thinking: decomposition, abstraction, and simulation. The implementation of project-based learning can develop students’ computational thinking skills. Students are trained to solve physics problems analytically and precisely in structured and logical thinking through a project. This research is expected to be the information for physics teachers to integrate computational thinking in the classroom as a 21st-century learning skill.},
    author = {Handayani, Rif’Ati Dina and Lesmono, Albertus Djoko and Prastowo, Srihandono Budi and Supriadi, Bambang and Dewi, Nila Mutia},
    booktitle = {2022 8th International Conference on Education and Technology (ICET)},
    doi = {10.1109/ICET56879.2022.9990631},
    issn = {2770-4807},
    keywords = {Computational modeling;Education;Problem-solving;Interviews;Physics;Portfolios;computational thinking;physics classroom;project-based learning},
    month = {Oct},
    number = {},
    pages = {76-80},
    title = {Bringing Computational Thinking Skills Into Physics Classroom Through Project-Based Learning},
    volume = {},
    year = {2022}
}

@article{AGBO2024101458,
    abstract = {Computational thinking (CT) has been relevant in teaching STEM courses, and educators are incorporating both plugged and unplugged CT activities in their modules to prepare new entrants for advanced knowledge. However, additional empirical data are needed to understand how an unplugged activities approach can lead to an improved understanding of CT concepts. Therefore, this study investigates the impact of unplugged activities on novice students' CT skills and unravels the characteristics of students' CT competency from performing unplugged activities. The experimental aspect of this study was conducted with a cohort of 210 students participating in an introductory programming course at a University in Nigeria. A mixed-method research approach and a quasi-experimental design were applied in this study to understand how the unplugged approach in teaching CT could help students improve their CT competency. A paired-sample t-test of familiarity score for each CT concept showed a significant increase in the score before and after the intervention. Furthermore, Latent Dirichlet Allocation (LDA) was used for topic modeling of the text describing students’ solutions. Topic modeling allows for more insights into the steps taken by the students to solve CT problems. Only 27.62 % of students' solution descriptions contained CT concepts, 56.90 % of the students solved the puzzle with an optimal score, and 72.41 % of students who applied CT concepts of problem abstraction and decomposition were able to solve the puzzle correctly. Indeed, CT unplugged activities significantly increased the number of students who gained CT competency. In addition, this study provides recommendation for computer science educators and highlight future direction.},
    author = {Friday Joseph Agbo and Linda Ojone Okpanachi and Patrick Ocheja and Solomon Sunday Oyelere and Godwin Sani},
    doi = {https://doi.org/10.1016/j.tsc.2023.101458},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Problem-solving, Unplugged activities, Programming education, CS students, Nigeria university},
    pages = {101458},
    title = {How can unplugged approach facilitate novice students’ understanding of computational thinking? An exploratory study from a Nigerian university},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187123002250},
    volume = {51},
    year = {2024}
}

@article{ALONSOGARCIA2024e33249,
    abstract = {This paper deals within a context where technology plays a pivotal role in education. In this sense, it is essential to highlight the emergence of new competencies and skills in education due to technological advancements. Legislative frameworks have been developed to incorporate digital literacy, access to robotics, and computational thinking, between others. Hence, this review and meta-analysis aim at identifying the influence of robotics activities on computational thinking through a PRISMA-guided review. The findings reveal that interventions conducted in early childhood education significantly impact computational thinking. Results also showcase that, despite perceived barriers related to technology accessibility, the presence of legislation and contexts prioritizing these competencies is more relevant than the digital access gap.},
    author = {Santiago Alonso-García and Antonio-Vicente {Rodríguez Fuentes} and Magdalena {Ramos Navas-Parejo} and Juan-José Victoria-Maldonado},
    doi = {https://doi.org/10.1016/j.heliyon.2024.e33249},
    issn = {2405-8440},
    journal = {Heliyon},
    keywords = {Computational thinking, Preschool education, Robotics, Technology education, Meta-analysis},
    number = {13},
    pages = {e33249},
    title = {Enhancing computational thinking in early childhood education with educational robotics: A meta-analysis},
    url = {https://www.sciencedirect.com/science/article/pii/S2405844024092806},
    volume = {10},
    year = {2024}
}

@article{ANGELI2022100329,
    abstract = {Workers in the areas of science, technology, engineering and mathematics play a significant role in the sustained growth and stability of the global economy, and, thus constitute a critical component in helping all countries worldwide to prosper. In this context, computational thinking constitutes an important skill to have as it enables workers to develop creative solutions to complex problems. Nonetheless, across all economies worldwide, there is a need to have more workers who are able to think through problems, challenges, and solutions in computational terms. It is thus of utmost importance to integrate the teaching of computational thinking in K-12 education in order to reduce the skills gap between education and the workplace. A pertinent and crucial question that arises is whether teachers have the knowledge and skills to teach students how to think computationally. Existing research shows that teacher education departments do not currently have the knowledge to promote computational thinking in their programs. The present study focuses on two aspects of computational thinking, such as, algorithmic thinking and debugging skills with the use of scaffolded programming scripts in an educational technology undergraduate course. The results show statistically significant learning gains in pre-service teachers’ algorithmic thinking and debugging skills in the context of robotic programming activities with LEGO WeDo. Limitations and future research directions are discussed.},
    author = {Charoula Angeli},
    doi = {https://doi.org/10.1016/j.ijcci.2021.100329},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {Computational thinking, Algorithmic thinking, Debugging, Robotic activities, Pre-service education, Scaffolded programming scripts, LEGO WeDo},
    pages = {100329},
    title = {The effects of scaffolded programming scripts on pre-service teachers’ computational thinking: Developing algorithmic thinking through programming robots},
    url = {https://www.sciencedirect.com/science/article/pii/S2212868921000519},
    volume = {31},
    year = {2022}
}

@article{AVITAL2023101417,
    abstract = {Creativity and Computational Thinking (CT) have been pointed out as two important skills that would promote students in the digital age as contributing members of society. Therefore, these two constructs have been extensively researched in recent years, but the associations between them are yet to be fully understood. This study takes another step towards bridging this gap by examining the association between CT and three types of creativity, i.e., Figural Creative Thinking, Verbal Creative Thinking, and Computational Creativity. Data was collected from 119 ninth-grade students (14–15 years old) from Israel. Students took two commonly used creativity tests (Torrance's Test of Creative Thinking, and the Alternative Uses Test). They also used Kodetu—an online learning environment for CT—and we used the system log files to measure their CT acquirement and their computational creativity. Findings suggest some nuanced associations between the four sets of variables. Specifically, we point out the limited associations between verbal and figural creativities, some of which are negative; also, we found that the associations between creative thinking and CT, as well as between creative thinking and computational creativity, differ by gender.},
    author = {Ben Avital and Arnon Hershkovitz and Rotem Israel-Fishelson},
    doi = {https://doi.org/10.1016/j.tsc.2023.101417},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Figural Creative Thinking, Verbal Creative Thinking, Computational Thinking, Online learning environment, Learning analytics},
    pages = {101417},
    title = {Associations between Computational Thinking and Figural, Verbal Creativity},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187123001852},
    volume = {50},
    year = {2023}
}

@article{BAKALA2021100337,
    abstract = {We conducted a systematic review of empirical studies aimed at exploring robot-mediated activities to promote the development of computational thinking in preschoolers. In this study, we investigated the robots used, proposed activities, and evaluation processes. We also analyzed research contexts and the stated motivations to conduct the studies. Our review identified characteristics of the robots, such as input and output interfaces, cost, and availability. We also categorized activities considering context, modality of work, type of activities, duration, adults’ role, scaffolding, unplugged activities, explicit debugging, communication and sharing instances, and teaching knowledge from other domains. We analyzed the computational thinking evaluation process looking at types of assessments, asset concepts, and research design. This paper presents a comprehensive overview of existing research, identifies existing gaps, and provides recommendations for future studies.},
    author = {Ewelina Bakala and Anaclara Gerosa and Juan Pablo Hourcade and Gonzalo Tejera},
    doi = {https://doi.org/10.1016/j.ijcci.2021.100337},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {Educational robotics, Computational thinking, Preschool},
    pages = {100337},
    title = {Preschool children, robots, and computational thinking: A systematic review},
    url = {https://www.sciencedirect.com/science/article/pii/S2212868921000556},
    volume = {29},
    year = {2021}
}

@article{BARKELA2024100463,
    abstract = {Theory
The successful implementation of computational thinking into primary schools requires that primary school teachers feel safe and confident in teaching this topic to young learners. However, many student teachers face low expectancy of success and heightened anxiety towards computational thinking. Self-worth theory suggests that this may lead to a self-worth threat and in consequence to engagement in self-protective behaviours, hampering the successful acquisition of skills needed to implement computational thinking into their future classrooms.
Aims
This study aims to investigate potential self-worth threats as amplifiers of student teachers’ resistance to engage in computational thinking.
Method
323 student teachers participated in the study. Participants filled out a questionnaire on expectancy of success and anxiety towards computational thinking, and rated how likely they were to engage in self-protective behaviours, i.e., self-handicapping, avoiding novelty, and academic cheating, when learning about computational thinking at the start of the semester.
Results
Students showed heightened levels of anxiety and low levels of expectancy towards computational thinking. Further, they reported that they would be likely to engage in self-protective behaviours. A structural equation model showed that anxiety towards computational thinking was positively related to self-protective behaviours. Moreover, expectancy had a negative indirect effect via anxiety towards computational thinking on self-protective behaviours.
Discussion
Student teachers might experience self-worth threats when learning about computational thinking and engage in self-protective behaviours that might hamper their success. Our findings caution the impact of possible self-worth threats on teaching methods, thus influencing children's learning in the 21st century.},
    author = {Veronika Barkela and Areum Han and Anke Maria Weber},
    doi = {https://doi.org/10.1016/j.chbr.2024.100463},
    issn = {2451-9588},
    journal = {Computers in Human Behavior Reports},
    keywords = {Computational thinking, Anxiety, Self-worth threat, Teacher education, Expectancy},
    pages = {100463},
    title = {Do student teachers experience self-worth threats in computational thinking?},
    url = {https://www.sciencedirect.com/science/article/pii/S2451958824000964},
    volume = {15},
    year = {2024}
}

@article{BARRICELLI2023111516,
    abstract = {The sustainable and digital future of work may imply a dramatic equilibrium change between social factors and technological ones. We argue that providing suitable tools to support End-User Development (EUD) in the workplace could represent a way to cope with such future changes. The contributions of this paper include the analysis and characterization of the most used EUD techniques and their crossover with a new conveyed model of Computational Thinking. The synthesis between these aspects is made explicit in the construct of EUDability, which is designed to capture the quality dimensions of EUD systems suitable to work scenarios where better roles and better tools for individuals may be shaped. EUDability has to do with identifying and assessing the difficulties of EUD techniques on one side and the Computational Thinking skills held by individuals on the other side.},
    author = {Barbara Rita Barricelli and Daniela Fogli and Angela Locoro},
    doi = {https://doi.org/10.1016/j.jss.2022.111516},
    issn = {0164-1212},
    journal = {Journal of Systems and Software},
    keywords = {End-User Development, EUDability, Computational Thinking, Digital transformation, Life-long learning, Sustainable workplace},
    pages = {111516},
    title = {EUDability: A new construct at the intersection of End-User Development and Computational Thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S0164121222001923},
    volume = {195},
    year = {2023}
}

@article{BERSON202357,
    abstract = {Early evidence suggests that robot programming offers an important foundation for spatial reasoning and computational thinking; however, researchers have debated how to introduce young children to these skills. We explored how preschoolers develop understanding of spatial concepts and computational thinking as the children took turns navigating a path during guided play with a programmable robot. Our analysis of the data included a multimodal visualization of the exchanges between the teacher, children, and a programmable robotic device. The findings highlight the effects that arose from the physical-digital convergence of technology integrated into play including: (a) the robot evoked a chain of actions, enacting pedagogic forces that transformed children's learning; (b) children used their own bodies as spatial referents, co-locating themselves in space with the robot; (c) the teacher remained a key actor, providing verbal and nonverbal scaffolding to promote children's understanding and mastery of spatial and computational concepts; and (d) talking with the teacher about spatial concepts combined with the interactions with the robot enhanced children's acquisition of spatial ideas relative to the quantity of children's verbal expressions and complexity of their applied spatial skills and computational thinking.},
    author = {Ilene R. Berson and Michael J. Berson and Candice McKinnon and Deeksha Aradhya and May Alyaeesh and Wenwei Luo and Ben Rydal Shapiro},
    doi = {https://doi.org/10.1016/j.ecresq.2023.05.015},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Spatial reasoning, Computational thinking, Robot programming, Preschool, Guided play, Socio-material approach},
    pages = {57-67},
    title = {An exploration of robot programming as a foundation for spatial reasoning and computational thinking in preschoolers’ guided play},
    url = {https://www.sciencedirect.com/science/article/pii/S0885200623000777},
    volume = {65},
    year = {2023}
}

@article{BILBAO2021e06135,
    abstract = {Since the end of the 20th century, the digitalization of society, including the educational systems, has been growing exponentially. At the same time, education systems have been evolving towards competency-based assessment. Likewise, at the beginning of this century, the idea of Computational Thinking was resurrected by J. Wing, for solving problems and designing systems using concepts of computer science. Today, we can see how all these questions are taking shape in a new competence, called Computational Thinking, related to others that already exist. In this paper, we have studied the skills of Computational Thinking in university students, focusing on abstraction and its possible relationship with other factors. Results conclude that the students fail in relation to abstraction and in algorithmic thinking. Although the ability of abstraction is not easy to measure, a linear regression analysis has been carried out in order to determine its possible study.},
    author = {Javier Bilbao and Eugenio Bravo and Olatz García and Carolina Rebollar and Concepción Varela},
    doi = {https://doi.org/10.1016/j.heliyon.2021.e06135},
    issn = {2405-8440},
    journal = {Heliyon},
    keywords = {Computational thinking, Engineering, Computer science, Higher education, Valuation methodologies, Pedagogical issues, Teaching/learning strategies, Structural equation modelling, Mathematics},
    number = {2},
    pages = {e06135},
    title = {Study to find out the perception that first year students in engineering have about the Computational Thinking skills, and to identify possible factors related to the ability of Abstraction},
    url = {https://www.sciencedirect.com/science/article/pii/S2405844021002401},
    volume = {7},
    year = {2021}
}

@article{BROZA2023101285,
    abstract = {In the digital age, our lives become more dependent on technology, yet the digital gap is intensifying especially because most people lack digital literacy. As a modest step to handle this challenge, we designed a course named "Play with me in Code" to develop pre-service teachers' (PSTs) thinking skills and expose them to learning by creation using computational thinking and programming as part of the constructionism paradigm. The added value of using Scratch in the context of teacher education lies not only in familiarity with a programming language but with an emphasis on experiencing self-directed learning tackling with problem solving situations, creativity, socioemotional competencies, and logical computational thinking. The present study aims to examine 25 PSTs' attitudes towards facing challenges of coding with Scratch. To this end, a mixed-method approach was activated by using questionnaires, blog posts, and reflections. Findings revealed that the learning environment encouraged PSTs' use of abstraction and decomposition to address a complex problem or to design a complex game. Study's conclusions relate to the importance of providing PSTs opportunities to experience learning by programming for raising their awareness of the importance of enhancing thinking skills and creativity in the future.},
    author = {Orit Broza and Liat Biberman-Shalev and Nurit Chamo},
    doi = {https://doi.org/10.1016/j.tsc.2023.101285},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Blogs, Constructionism, Creativity, Gamification, Scaffolding, Scratch, Teacher education},
    pages = {101285},
    title = {“Start from scratch”: Integrating computational thinking skills in teacher education program},
    url = {https://www.sciencedirect.com/science/article/pii/S187118712300055X},
    volume = {48},
    year = {2023}
}

@article{CELIK2023102026,
    abstract = {To effectively utilize artificial intelligence (AI)-based technologies such as ChatGPT and realize their novel ethical issues, individuals must have a variety of knowledge and skills about AI. Such knowledge and skills have led to the emergence of AI literacy. Despite the importance of AI literacy in everyday life, little is known about its determinants. To better understand the determinants of AI literacy, we attempted to build a research model relying on previous research and different theoretical frameworks. The model incorporated digital divide, cognitive absorption, and computational thinking. As a major finding from the current study, computational thinking was found to be a significant determinant of AI literacy, which facilitate using, recognizing, and evaluating AI-based technologies. Moreover, we found out that individuals with physical access to information and communication technologies (ICTs) are more expected to use and recognize AI. Also, motivation and skills in using ICTs enable individuals to better evaluate the outcomes of AI-based technologies. The findings also showed that convenient access to ICTs contributes to a deep involvement with AI-based technologies in the use. Further, individuals with higher motivation and skills to use AI technologies are likely to have a pleasant experience after using these technologies.},
    author = {Ismail Celik},
    doi = {https://doi.org/10.1016/j.tele.2023.102026},
    issn = {0736-5853},
    journal = {Telematics and Informatics},
    keywords = {AI Literacy, Digital Divide, Computational Thinking, Cognitive Absorption, ChatGPT},
    pages = {102026},
    title = {Exploring the Determinants of Artificial Intelligence (AI) Literacy: Digital Divide, Computational Thinking, Cognitive Absorption},
    url = {https://www.sciencedirect.com/science/article/pii/S0736585323000904},
    volume = {83},
    year = {2023}
}

@article{CHEN2023101224,
    abstract = {Using the analytical tool CiteSpace, this review study conducted a bibliometric analysis of the characteristics of 249 studies on Computational Thinking (CT) indexed in the Web of Science from 2012 to 2021. The multi-dimensional analytical approach provided a holistic view of the scope of CT research and its progression,and enabled the major topics, themes, disciplinary domains, and prominent authors, institutes, countries/regions, and papers to be identified. Based on the general descriptive data analysis, the results showed that CT has gained increasing influence as a field of research over the past decade. A clustering analysis of the retrieved keywords showed that the development of CT in K-12 education was the most frequently discussed topic. The co-occurrence knowledge maps identified the 11 main research themes and their progress. The research was from a wide spectrum of disciplines including education, science education, computer science, interdisciplinary application, psychology, engineering, and information systems. The highest co-citations were found in the journals of Communication of the ACM, Computers and Education, and Computers in Human Behaviors. The researchers, institutes, and countries/regions that have made the most significant contributions to CT research and the 10 most highly cited CT studies were also identified. Overall, the findings of this review study indicate the paths for future research on developing CT in the classroom.},
    author = {Hui E Chen and Daner Sun and Ting-Chia Hsu and Yuqin Yang and Jin Sun},
    doi = {https://doi.org/10.1016/j.tsc.2022.101224},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Trends study, Citespace tool, Bibliometric analysis, Clustering analysis},
    pages = {101224},
    title = {Visualising trends in computational thinking research from 2012 to 2021: A bibliometric analysis},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187122002255},
    volume = {47},
    year = {2023}
}

@article{CHEN2024101995,
    abstract = {Although there is controversy surrounding rewards and competition in education, they are key elements in digital game-based learning (DGBL). Research on the influence of rewards and competition in DGBL often yields mixed results, suggesting a need to investigate individual game elements and their interactions. This study implemented DGBL focusing on computational thinking (CT) in 7th-grade classes. Both quantitative and behavioral data were collected to understand the impact of rewards (power-up or customization) and competition (with or without) on students’ intrinsic motivation, game performance, behaviors, and CT skills. The findings uncovered significant interactions between rewards and competition. Students with both competition and power-up rewards achieved the highest game points but the lowest CT performance, whereas those exposed to the same power-up rewards without competition attained the lowest game points but the best CT performance. Implications are drawn for DGBL research and practice.},
    author = {Ching-Huei Chen and Kun Huang},
    doi = {https://doi.org/10.1016/j.learninstruc.2024.101995},
    issn = {0959-4752},
    journal = {Learning and Instruction},
    keywords = {Game-based learning, Rewards, Competition, Computational thinking},
    pages = {101995},
    title = {The interplay of rewards and competition in digital game-based learning: Effects on intrinsic motivation, game performance and behaviors, and computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S0959475224001221},
    volume = {94},
    year = {2024}
}

@article{CHENG2023104794,
    abstract = {Computational thinking (CT), a way to think about solving problems, is recognized as a basic skill for the 21st century. Although game-based learning (GBL) has been shown to improve student's CT skills, students may fail to self-evaluate or debate as they play games, thus failing to develop higher-order thinking. Also not widely explored is how teachers are to practice the CT core competencies during the learning process to cultivate students' problem-solving thinking. As the adoption of student-generated questions (SGQ) is an instructional strategy to promote higher-order thinking, we develop a GBL platform that uses this strategy to enhance students' CT skills, learning motivation, and learning confidence. For this purpose, fifty-three primary school students were recruited for this study, and data were collected during four classes of experimental CT activities. This study shows that the experimental group using the SGQ strategy with a GBL platform exhibited significantly higher CT skills than the control group. In addition, with respect to learning motivation and learning confidence it is found that the experimental group also outperformed the control group. This confirms that integrating the SGQ strategy and CT core competencies fosters higher-order cognitive thinking in students in problem-solving through gamification of the learning environment, resulting in higher motivation and confidence to complete experimental activities.},
    author = {Yu-Ping Cheng and Chin-Feng Lai and Yun-Ting Chen and Wei-Sheng Wang and Yueh-Min Huang and Ting-Ting Wu},
    doi = {https://doi.org/10.1016/j.compedu.2023.104794},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Computational thinking, Student-generated questions strategy, Game-based learning, Blocky game, Visual programming},
    pages = {104794},
    title = {Enhancing student's computational thinking skills with student-generated questions strategy in a game-based learning platform},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131523000714},
    volume = {200},
    year = {2023}
}

@article{CHEUNGKONG2025105281,
    abstract = {Teacher competencies encompass the dimensions of knowledge and attitudes, yet few studies have analysed teachers' latent profiles in relation to the interaction between these two dimensions. Latent profile analysis, which examines the interplay between variables to distinguish subgroups of individuals, has recently emerged in studies of computational thinking (CT) as a method for identifying student profiles. However, the latent profiles of CT teachers have not yet been analysed. We therefore analysed the latent profiles of a sample of 493 teachers who had participated in a teacher development programme in CT, according to their knowledge and perceived usefulness of CT. Three profiles were identified: (1) highly knowledgeable with high perceived usefulness, (2) knowledgeable with low perceived usefulness, and (3) less knowledgeable with low perceived usefulness. Qualitative data further triangulated these findings. We also examined the learning achievement of 12,105 students taught by these teachers. Students taught by highly knowledgeable teachers with a high perceived sense of usefulness demonstrated significantly better achievement than their peers. Our findings highlight the importance of nurturing both knowledge of and perceived usefulness in CT. They also provide valuable insights for similar teacher development programmes, emphasizing the importance of peer mentoring support for less knowledgeable teachers. Additionally, we underscore the value of having teachers create artefacts using CT for instructional purposes, allowing them to gain firsthand experience of its usefulness. As few studies have explored teachers' latent profiles based on the dimensions of knowledge and attitudes, the contribution of this study extends beyond the domain of CT.},
    author = {Siu {Cheung KONG} and Ming LAI and Yugen LI and Tak-Yue {Dickson CHAN} and Yue {Travess ZHANG}},
    doi = {https://doi.org/10.1016/j.compedu.2025.105281},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {computational thinking, latent profile analysis, perceived usefulness, student achievement, teacher knowledge},
    pages = {105281},
    title = {A Latent Profile Analysis of Teachers’ Knowledge About and Perceived Usefulness of Computational Thinking and How Teacher Profiles Relate to Student Achievement},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131525000491},
    year = {2025}
}

@article{CIFTCI2023101337,
    abstract = {The purpose of the current study is to investigate the effects of the unplugged computational thinking (CT) integrated STEM (UCT-STEM) approach and STEM approach on early childhood pre-service teachers’ CT skills (creativity, algorithmic thinking, critical thinking, problem solving, cooperativity, communication). The study was conducted with a total of 70 early childhood pre-service teachers. Quasi-experimental design was used; activities based on the UCT-STEM approach were administered to the experimental group and activities based on the STEM approach were administered to the control group. Post-test scores for CT skills showed a statistically significant difference in favour of the experimental group. It was concluded that the UCT-STEM approach was more effective in developing the pre-service teachers’ CT skills than the STEM approach. The current study presents an important finding to the literature in terms of the developed STEM and UCT-STEM contents and how these contents improve pre-service teachers’ CT skills. The STEM and UCT-STEM content provides significant information in terms of teacher practices. At the same time, this study offers important implications for program developers and policy-makers to integrate these innovative educational approaches into both early childhood education and teacher education programs.},
    author = {Ayşe Çiftçi and Mustafa Sami Topçu},
    doi = {https://doi.org/10.1016/j.tsc.2023.101337},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking skills, Computational thinking integrated STEM education, Early childhood pre-service teachers, STEM},
    pages = {101337},
    title = {Improving early childhood pre-service teachers’ computational thinking skills through the unplugged computational thinking integrated STEM approach},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187123001062},
    volume = {49},
    year = {2023}
}

@article{CLARKEMIDURA202368,
    abstract = {With growing interest in supporting the development of computational thinking (CT) in early childhood, there is also need for new assessments that serve multiple purposes and uses. In particular, there is a need to understand the design of formative assessments that can be used during classroom instruction to provide feedback to teachers and children in real-time. In this paper, we report on an empirical study and advance a new unit of observational analysis for formative assessment that we call an indicator of a knowledge refinement opportunity or as a shorthand, KRO indicators. We put forth a new framework for conceptualizing the design of formative assessments that builds on the Evidence Centered Design framework but centers identification and analysis of indicators of knowledge refinement opportunities. We illustrate a number of key indicators through empirical examples drawn from video recordings of Kindergarten classroom lessons.},
    author = {Jody Clarke-Midura and Victor R. Lee and Jessica F. Shumway and Deborah Silvis and Joseph S. Kozlowski and Rebecca Peterson},
    doi = {https://doi.org/10.1016/j.ecresq.2023.05.013},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Formative assessment, Computational thinking, Kindergarten, Tangible coding toys, Assessment design},
    pages = {68-80},
    title = {Designing formative assessments of early childhood computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S0885200623000741},
    volume = {65},
    year = {2023}
}

@article{COBAN2021100929,
    abstract = {Educators emphasize that computational thinking is especially helpful in raising problem-solving skills, improving logical reasoning, and developing analytical thinking. In this context, the aim of this study is to develop an online, interactive, valid, reliable and useful performance-based assessment tool for measuring computational thinking skills. Data were collected in two stages with three different measurement tools. In the data collection phase, a psychometric scale, a skill test and an interactive web application developed in this study were used. In the study in which a total of 203 high school students participated, it was determined that the students' computational thinking skills were at average level. as a result, a valid and reliable performance-based platform was developed for measuring computational thinking skills. It has also been concluded that the performance-based measurement tool makes a better measurement than the psychometric scale. It is emphasized that computational thinking should be treated as a skill or group of skills, not as a theoretical knowledge, product/portfolio or attitude/perception. Therefore, it is believed that developing performance-based tools for evaluating computational thinking skills and measuring them by using multiple measurement tools will give more accurate results. Considering the developments in computational thinking, it is thought that the study will contribute to the literature.},
    author = {Emre Çoban and Özgen Korkmaz},
    doi = {https://doi.org/10.1016/j.tsc.2021.100929},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Performance-based assessment platform, Interactive web app, Measuring computational thinking skills, Student evaluation, Evaluation methods},
    pages = {100929},
    title = {An alternative approach for measuring computational thinking: Performance-based platform},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187121001449},
    volume = {42},
    year = {2021}
}

@article{doi:10.1068/b230313,
    abstract = {In order to interpret the current state of a design, designers possess the powerful, spontaneous ability to restructure shapes in terms of emergent subshapes. In this paper a theoretical model of restructuring shapes is presented, one that aims to recognize explicit and implicit emergent subshapes computationally and to explain cognitively some critical phenomena of designers’ visual behaviors. A computing procedure using two neuron-like connectionist networks and two attentional techniques serves as the vehicle to mimic some critical empirical phenomena. By a comparison of the computational and empirical variables embedded in the subshape viewing processes, the internal behavior of the model has been further clarified, and some hypothetical viewpoints have been cross-validated.},
    author = {Y T Liu},
    doi = {10.1068/b230313},
    eprint = {https://doi-org.crai.referencistas.com/10.1068/b230313},
    journal = {Environment and Planning B: Planning and Design},
    number = {3},
    pages = {313–328},
    title = {Restructuring Shapes in Terms of Emergent Subshapes: A Computational and Cognitive Model},
    url = {https://doi-org.crai.referencistas.com/10.1068/b230313},
    volume = {23},
    year = {1996f}
}

@article{doi:10.1177/0301006619872101,
    author = {Ella M. Gale},
    doi = {10.1177/0301006619872101},
    eprint = {https://doi-org.crai.referencistas.com/10.1177/0301006619872101},
    journal = {Perception},
    number = {9},
    pages = {897–898},
    title = {Miller, P. An Introductory Course in Computational Neuroscience},
    url = {https://doi-org.crai.referencistas.com/10.1177/0301006619872101},
    volume = {48},
    year = {2019b}
}

@article{doi:10.1177/0309324718763189,
    abstract = {This work concentrates on the characterization of the stress intensity factor range for a compact tension specimen tested under a uniaxial tensile fatigue loading condition. The experimental solution is obtained using a three-dimensional full-field optical technique, digital image correlation. The deformation field is measured and documented for distinct crack lengths. As a relevant fracture parameter, stress intensity factor is thus experimentally measured combined with a computational overdeterministic algorithm for different crack lengths. Moreover, to verify the performance of the proposed fracture model, the cracked compact tension specimen is elasto-statically resolved using advanced discretization techniques, such as the finite element method, the meshless radial point interpolation method and the meshless natural neighbour radial point interpolation method. The finite element method model is thereby analysed with ABAQUS© to enable computation of mode I stress intensity factor results based on strain energy release rate criterion for different crack measurements in addition to strain contours. Likewise, the resolution pattern is repeated for meshless methods, and analogous numerical solutions are thus obtained. Overall, the experimental and numerical stress intensity factor results are compared with an available solution (ASTM E647) exhibiting a reasonable agreement. The novelty of this investigation is the amalgamation of an experimental digital image correlation procedure with a computational overdeterministic algorithm and, most importantly, the meshless formulation performance in the linear elastic fracture mechanics.},
    author = {Behzad V Farahani and Paulo J Tavares and Jorge Belinha and PMGP Moreira},
    doi = {10.1177/0309324718763189},
    eprint = {https://doi-org.crai.referencistas.com/10.1177/0309324718763189},
    journal = {The Journal of Strain Analysis for Engineering Design},
    number = {8},
    pages = {630–647},
    title = {Compact tension fracture specimen: Experimental and computational implementations on stress intensity factor},
    url = {https://doi-org.crai.referencistas.com/10.1177/0309324718763189},
    volume = {53},
    year = {2018a}
}

@article{doi:10.1177/109434208800200407,
    abstract = {Computational fluid dynamics (CFD) is a powerful tool for the simulation of complex fluid dynamics problems. In the future, the progress in CFD will depend on effi cient algorithms as well as on the power and storage capacity of the computers available. A careful study and comparison of these supercomputers, therefore, is nec essary. The following paper presents a short description of the Engineering and Scientific Model Benchmark, the supercomputers and mini-supercomputers under con sideration, and a discussion of the benchmark results.},
    author = {Wolfgang Gentzsch},
    doi = {10.1177/109434208800200407},
    eprint = {https://doi-org.crai.referencistas.com/10.1177/109434208800200407},
    journal = {The International Journal of Supercomputing Applications},
    number = {4},
    pages = {63–71},
    title = {Comparison of Supercomputers and Mini- Supercomputers for Computational Fluid Dynamics Calcu Lations},
    url = {https://doi-org.crai.referencistas.com/10.1177/109434208800200407},
    volume = {2},
    year = {1988c}
}

@article{doi:10.1177/109434208800200407,
    abstract = {Computational fluid dynamics (CFD) is a powerful tool for the simulation of complex fluid dynamics problems. In the future, the progress in CFD will depend on effi cient algorithms as well as on the power and storage capacity of the computers available. A careful study and comparison of these supercomputers, therefore, is nec essary. The following paper presents a short description of the Engineering and Scientific Model Benchmark, the supercomputers and mini-supercomputers under con sideration, and a discussion of the benchmark results.},
    author = {Yi Qin and Jianhuang Wu and Qingmao Hu and Dhanjoo N. Ghista and Kelvin K.L. Wong},
    doi = {10.1177/109434208800200407},
    eprint = {https://doi-org.crai.referencistas.com/10.1177/109434208800200407},
    journal = {The International Journal of Supercomputing Applications},
    number = {2},
    pages = {63–71},
    title = {Computational evaluation of smoothed particle hydrodynamics for implementing blood flow modelling through CT reconstructed arteries},
    url = {https://doi-org.crai.referencistas.com/10.1177/109434208800200407},
    volume = {25},
    year = {2017h}
}

@article{doi:10.1177/14780771231170272,
    abstract = {This paper examines the prevalence of bias in artificial intelligence text-to-image models utilized in the architecture and design disciplines. The rapid pace of advancements in machine learning technologies, particularly in text-to-image generators, has significantly increased over the past year, making these tools more accessible to the design community. Accordingly, this paper aims to critically document and analyze the collective, computational, and cognitive biases that designers may encounter when working with these tools at this time. The paper delves into three hierarchical levels of operation and investigates the possible biases present at each level. Starting with the training data for large language models (LLM), the paper explores how these models may create biases privileging English-language users and perspectives. The paper subsequently investigates the digital materiality of models and how their weights generate specific aesthetic results. Finally, the report concludes by examining user biases through their prompt and image selections and the potential for platforms to perpetuate these biases through the application of user data during training.},
    author = {Andrew Kudless},
    doi = {10.1177/14780771231170272},
    eprint = {https://doi-org.crai.referencistas.com/10.1177/14780771231170272},
    journal = {International Journal of Architectural Computing},
    number = {2},
    pages = {256–279},
    title = {Hierarchies of bias in artificial intelligence architecture: Collective, computational, and cognitive},
    url = {https://doi-org.crai.referencistas.com/10.1177/14780771231170272},
    volume = {21},
    year = {2023e}
}

@article{doi:10.1177/154193120104500444,
    abstract = {Military missions are increasingly contingent upon the ‘emergent qualities’ of distributed cognition. Cognition is situated and shared across multiple agents, objects, and environments. The total information surround is evolutionary, chaotic, and presents workers with ill-defined dilemmas that proliferate across geopolitical boundaries under stressed conditions. Crew members are bombarded with multiple constraints as they encounter automation, situational awareness, and information warfare. To address these concerns the use of computational neuroscience/ubiquitous computing technologies are described. Ubiquitous computing means that computing elements are not integrated in a single workstation but are ubiquitous; they are distributed as everyday objects in an operative work environment. When complemented with evolutionary computing technology, computer structures (cellular thoughtonoma) are designed to ‘genetically evolve’ through natural selection to be ‘fit’ with environmental, technological, and worker demands. This paper discusses the symbiosis underlying thoughtonomous technologies and describes possibilities to radically redefine intelligent interaction and collaboration.},
    author = {Michael D. McNeese},
    doi = {10.1177/154193120104500444},
    eprint = {https://doi-org.crai.referencistas.com/10.1177/154193120104500444},
    journal = {Proceedings of the Human Factors and Ergonomics Society Annual Meeting},
    number = {4},
    pages = {473–477},
    title = {The Use of Ubiquitous Computing/Computational Neuroscience for Distributed Battlefield Management},
    url = {https://doi-org.crai.referencistas.com/10.1177/154193120104500444},
    volume = {45},
    year = {2001g}
}

@article{doi:10.1177/15500594211018545,
    abstract = {Electroencephalogram (EEG)-based automated depression diagnosis systems have been suggested for early and accurate detection of mood disorders. EEG signals are highly irregular, nonlinear, and nonstationary in nature and are traditionally studied from a linear viewpoint by means of statistical and frequency features. Since, linear metrics present certain limitations and nonlinear methods have proven to be an efficient tool in understanding the complexities of the brain in the identification of underlying behavior of biological signals, such as electrocardiogram, EEG and magnetoencephalogram and thus, can be applied to all nonstationary signals. Various nonlinear algorithms can be used in the analysis of EEG signals. In this research paper, we aim to develop a novel methodology for EEG-based depression diagnosis utilizing 2 advanced computational techniques: frequency-domain extended multivariate autoregressive (eMVAR) and deep learning (DL). We proposed a hybrid method comprising a pretrained ResNet-50 and long-short term memory (LSTM) to capture depression-specific information and compared with a strong conventional machine learning (ML) framework having eMVAR connectivity features. The following 8 causality measures, which interpret the interaction mechanisms among spectrally decomposed oscillations, were used to extract features from multivariate EEG time series: directed coherence (DC), directed transfer function (DTF), partial DC (PDC), generalized PDC (gPDC), extended DC (eDC), delayed DC (dDC), extended PDC (ePDC), and delayed PDC (dPDC). The classification accuracies were 84% with DC, 85% with DTF, 95.3% with PDC, 95.1% with gPDC, 84.8% with eDC, 84.6% with dDC, 84.2% with ePDC, and 95.9% with dPDC for the eMVAR framework. Through a DL framework (ResNet-50 + LSTM), the classification accuracy was achieved as 90.22%. The results demonstrate that our DL methodology is a competitive alternative to the strong feature extraction-based ML methods in depression classification.},
    author = {Caglar Uyulan and Sara de la Salle and Turker T. Erguzel and Emma Lynn and Pierre Blier and Verner Knott and Maheen M. Adamson and Mehmet Zelka and Nevzat Tarhan},
    doi = {10.1177/15500594211018545},
    eprint = {https://doi-org.crai.referencistas.com/10.1177/15500594211018545},
    journal = {Clinical EEG and Neuroscience},
    note = {PMID:34080925},
    number = {1},
    pages = {24–36},
    title = {Depression Diagnosis Modeling With Advanced Computational Methods: Frequency-Domain eMVAR and Deep Learning},
    url = {https://doi-org.crai.referencistas.com/10.1177/15500594211018545},
    volume = {53},
    year = {2022j}
}

@article{doi:10.1177/17504813231207948,
    abstract = {Social media has become a powerful conduit for misinformation during major public events. As a result, an extant body of research has emerged on misinformation and its diffusion. However, the research is fragmented and has mainly focused on understanding the content of misinformation messages. Little attention is paid to the production and consumption of misinformation. This study presents the results of a detailed comparative analysis of the production, consumption, and diffusion of misinformation with authentic information. Our findings, based on extensive use of computational linguistic analyses of COVID-19 pandemic-related messages on the Twitter platform, revealed that misinformation and authentic information exhibit very different characteristics in terms of their contents, production, diffusion, and their ultimate consumption. To support our study, we carefully selected a sample of 500 widely propagated messages confirmed by fact-checking websites as misinformation or authentic information about pandemic-related topics from the Twitter platform. Detailed computational linguistic analyses were performed on these messages and their replies (N = 198,750). Additionally, we analyzed approximately 1.2 million Twitter user accounts responsible for producing, forwarding, or replying to these messages. Our extensive and detailed findings were used to develop and propose a theoretical framework for understanding the diffusion of misinformation on social media. Our study offers insights for social media platforms, researchers, policymakers, and online information consumers about how misinformation spreads over social media platforms.},
    author = {Yuzhang Han and Minoo Modaresnezhad and Indika Dissanayake and Nikhil Mehta and Hamid Nemati},
    doi = {10.1177/17504813231207948},
    eprint = {https://doi-org.crai.referencistas.com/10.1177/17504813231207948},
    journal = {Discourse & Communication},
    number = {2},
    pages = {159–215},
    title = {A computational linguistic analysis of the anatomy of production, consumption, and diffusion of misinformation and authentic information in social media: The case of the COVID-19 pandemic},
    url = {https://doi-org.crai.referencistas.com/10.1177/17504813231207948},
    volume = {18},
    year = {2024d}
}

@article{doi:10.2190/ET.39.1.d,
    abstract = {The current research article is based on a simple and practical way of employing the computational power of widely available, versatile software MS Excel 2007 to perform interactive computer simulations for undergraduate/graduate students in biology, biochemistry, biophysics, microbiology, medicine in college and university classroom setting. To accomplish this important motive, we developed the necessary computer algorithm, which used a built-in pseudo-random number generating function in MS Excel 2007, to computer model two basic Mendel’s Laws of heredity for plant and animal species. We performed more than 18,000 computer simulations to investigate the behavior of dominant and recessive genes to verify two basic Mendel’s Laws of heredity. Our simulation work corroborates the experimental observations of Mendel’s research on inheritance in Pisum hybrid species. When we compare our results of simulated data with that of experiments done on Drosophila melanogaster, fruit fly extensively being used as a model organism to study genetics and development, an exceedingly good agreement between the simulated and the experimental data has been observed for the F2 generation.},
    author = {Gurmukh Singh and Khalid Siddiqui and Mankiran Singh and Satpal Singh},
    doi = {10.2190/ET.39.1.d},
    eprint = {https://doi-org.crai.referencistas.com/10.2190/ET.39.1.d},
    journal = {Journal of Educational Technology Systems},
    number = {1},
    pages = {31–46},
    title = {Modeling Mendel’s Laws on Inheritance in Computational Biology and Medical Sciences},
    url = {https://doi-org.crai.referencistas.com/10.2190/ET.39.1.d},
    volume = {39},
    year = {2010i}
}

@article{DONG2025104824,
    abstract = {Computational thinking (CT) is regarded as the conceptual basis required for identifying and solving real-world problems through algorithmic approaches to achieve transferable solutions. Developing students' CT in primary school stages is essential and has received considerable attention. Meanwhile, researchers incorporated digital badges into classrooms to improve students' learning motivation in computer science (CS). However, few solid empirical studies analyze the effects of the digital badges approach in CS education to develop students' CT. Therefore, to bridge this gap, this study designed and implemented a block-based programming course in a primary school and examined the impact of the digital badges approach on pupils' CT skills and self-efficacy and learning motivation in CS. A quasi-experimental design was conducted among 99 third-grade students across three classes. The results revealed that the adapted digital badges in primary school (1) significantly improved the students' CT skills, (2) had no significant positive impact on their CT self-efficacy or learning motivation in CS, and (3) showed no mediating effect of learning motivation on the relationship between CT skills and CT self-efficacy. In addition, we found that whether students could see only their own digital badges or also those of others had no impact on CT skills, self-efficacy, or learning motivation in CS. These findings have implications for the design of digital badge educational interventions intended to promote students' CT and learning motivation.},
    author = {Yuhan Dong and Hongliang Ma and Hongying Li and Bin Jing and Hongchao Liu},
    doi = {https://doi.org/10.1016/j.actpsy.2025.104824},
    issn = {0001-6918},
    journal = {Acta Psychologica},
    keywords = {Computer science, Digital badges, Computational thinking (CT) skills, CT self-efficacy, Learning motivation, Primary education},
    pages = {104824},
    title = {Effects of digital badges on pupils' computational thinking and learning motivation in computer science},
    url = {https://www.sciencedirect.com/science/article/pii/S0001691825001374},
    volume = {254},
    year = {2025}
}

@article{FALLOON2024105045,
    abstract = {In recent years, the development of computational thinking (CT) has become integral to many school curricula worldwide. This has been associated with calls for computational thinking to be considered a ‘21St Century’ competency, valuable to all students as a transferable process for solving problems and building understanding of human behaviour and systems. However, while computational thinking is a focus of most secondary school computer science curricula, proponents such as Jeanette Wing argue its relevance for younger students, indicating more work must be done investigating its development in early years' education. This study used a structured, problem-based curriculum supported by guided inquiry pedagogy, to explore 6 year old students' learning of basic computational thinking concepts and practices while coding programmable floor robots (Blue-bots and an iPad app). Results indicated improvement across the seven lessons in students' sequencing/algorithm authoring, error correction, and pattern recognition. Furthermore, they revealed evidence of higher order thinking such as identifying patterns in code, and how these can be transferred to help solve problems of different designs. While currently play-based approaches are used to introduce computational thinking concepts and practices in early years' education, results from this study suggest that more structured, problem-based methods should be seriously considered. Results challenge commonly understood developmental theories about what young children can and can't do, contextualised within the field of computer science, and hold implications for early years' teachers' professional knowledge and pedagogy if they are to promote their students' learning in this increasingly important area. Given rapid technological advancements such as artificial intelligence (AI) and increasingly earlier exposure of young children to digitally-mediated information, this study provides support for the earlier and more systematic introduction of basic digital literacy knowledge and skills in early years' education.},
    author = {Garry Falloon},
    doi = {https://doi.org/10.1016/j.compedu.2024.105045},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Computational thinking, Coding, Kindergarten, Early years' education, Curriculum, Guided inquiry, Structured},
    pages = {105045},
    title = {Advancing young students’ computational thinking: An investigation of structured curriculum in early years primary schooling},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131524000599},
    volume = {216},
    year = {2024}
}

@article{GUNTOSIK2024101552,
    abstract = {Since computational thinking is a high-level cognitive skill and its conceptual framework has not yet been clarified, the assessment of this skill is problematic. While there is no consensus in the literature about the components of computational thinking, the abstraction component is located at a point where opinions intersect. In addition, it is predicted that computer science unplugged activities will improve computational thinking, and there is limited research examining this effect. As a result, this research aims to demonstrate the alleged effects of computer science unplugged activities on abstraction skill which is considered the critical component of computational thinking. The study, which was planned with a mixed methods research design, lasted 8 weeks. Quantitative data were obtained from the abstraction skill test developed by the researchers, while qualitative data were obtained from observations and task- based interviews after each activity. Quantitative findings showed that computer science unplugged activities significantly improve abstraction skills and thus computational thinking. Qualitative findings not only revealed that developments in the six abstracting steps caused this significant difference but also identified abstracting steps where the effect of each activity was limited. Suggestions for organizing activities to improve these steps are given. Finally, suggestions are presented for the conceptual framework of computational thinking based on abstraction.},
    author = {Ezgi Gün-Tosik and Tolga Güyer},
    doi = {https://doi.org/10.1016/j.tsc.2024.101552},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Abstraction skill, Computational thinking skill, Computer science, Computer science unplugged},
    pages = {101552},
    title = {The effect of computer science unplugged on abstraction as a sub-component of computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187124000907},
    volume = {53},
    year = {2024}
}

@article{HARPER2023381,
    abstract = {The specific mechanisms by which teachers and parents can provide culturally relevant opportunities for computational thinking for racially/ethnically and linguistically diverse groups of preschoolers remain unknown. Accordingly, the purpose of this research is to examine how PreK parent and teacher voice directed efforts to realize a culturally relevant computing program. We drew data sources from a subsample of design-based research meetings in which partners collaborated to co-develop the first iteration of the program. Using qualitative analysis, we examined how parent voice and teacher voice, conceptualized as perspectives and participation, influenced theories of culturally responsive computing and computational thinking in early childhood education and the translation of theory into practice in classroom and home settings. Findings showed that connecting powerful ideas from computational thinking, namely algorithms and problem solving (e.g., debugging), to familiar activities and experiences served as a powerful entry point. Yet, differences arose in how teachers and parents conceptualized culturally relevant computing and made connections to familiar routines. We discuss what can be learned from parent voice in regards to bolstering children's self-expression, access to increasingly complex computational thinking tasks, and opportunities for learning cultural and community values through computing.},
    author = {Frances K. Harper and Lori A. Caudle and Charles E. Flowers and Tabatha Rainwater and Margaret F. Quinn},
    doi = {https://doi.org/10.1016/j.ecresq.2023.05.001},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Computational thinking, Culturally responsive computing, Early childhood education, Design-based research, Parental engagement},
    pages = {381-393},
    title = {Centering teacher and parent voice to realize culturally relevant computational thinking in early childhood},
    url = {https://www.sciencedirect.com/science/article/pii/S088520062300056X},
    volume = {64},
    year = {2023}
}

@article{HOLSTEIN2025101772,
    abstract = {In recent years, there has been increasing interest in integrating Computational Thinking (CT) into elementary schools. However, few studies have focused on teachers’ perceptions. This study aims to examine teachers' perceptions to bridge the gap between theory and practice. The study analysed teachers’ perceptions of integrating CT into school subjects through the constructionist approach, using Scratch a leading programming platform inspired by Resnick's Lifelong Kindergarten Constructionist model. Over a school year, 31 teachers participated in a professional development program and applied this model in their classrooms. The teachers were interviewed to capture their perceptions of learning and teaching using a constructionist method. The findings revealed that teachers with creative arts experience fully embraced the model, while others partially adopted it. Teachers recognized the benefits of constructionist teaching in fostering creativity, motivation, and engagement among students. However, they struggled with balancing these benefits with school demands and constraints. Challenges included managing time effectively within constraints of school and ensuring curriculum alignment. Despite this, many teachers found that the constructionist approach positively impacted students' learning engagement and personal development. By addressing the identified challenges, teacher education designers, curriculum developers, and schools can develop practices for closing the gap between theory and practice.},
    author = {Simona Holstein and Anat Cohen},
    doi = {https://doi.org/10.1016/j.tsc.2025.101772},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computer science, Teachers, Computational thinking, Scratch, constructionism, Teachers’ perceptions},
    pages = {101772},
    title = {Scratch teachers' perceptions of teaching computational thinking with school subjects in a constructionist approach},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187125000215},
    volume = {56},
    year = {2025}
}

@article{HOOSHYAR2024122283,
    abstract = {Predictive learner modelling is crucial for personalized education. While convolutional neural networks (CNNs) have shown great success in education, their potential in learner modelling via image data is unexplored. This research introduces a novel and interpretable approach for Image-based Learner Modelling (ImageLM) using CNNs and transfer learning to model learners’ performance and accordingly classify their computational thinking solutions. The approach integrates Grad-CAM, enabling it to provide insights into its decision-making process. Findings show that our custom CNN outperforms other models (namely ResNet, VGG, and Inception), with 83% accuracy in predicting solution correctness. More importantly, the ImageLM approach identifies the regions that contribute the most to the predictions, shedding light on learners' computational thinking knowledge and advancing toward trustworthy AI for education. These results underline the potential of utilizing imagery data from learners’ activities during the learning process to predict their performance, especially in challenging environments like programming where traditional feature extraction and learning might struggle.},
    author = {Danial Hooshyar and Yeongwook Yang},
    doi = {https://doi.org/10.1016/j.eswa.2023.122283},
    issn = {0957-4174},
    journal = {Expert Systems with Applications},
    keywords = {Image processing, Learner modelling, Convolutional neural network, Trustworthy AI for education, Computational thinking},
    pages = {122283},
    title = {ImageLM: Interpretable image-based learner modelling for classifying learners’ computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S0957417423027859},
    volume = {238},
    year = {2024}
}

@article{HSU2023104657,
    abstract = {Designing artificial intelligence (AI) artefact learning has gone beyond command-line-based instruction, to include a low-barrier threshold with block-based programming. Such instructional design must not solely emphasise AI workings. Rather, it must offer students computational thinking (CT) practice to support their AI-related artefact creation while reducing their AI anxiety about future job replacement or sociotechnical blindness. In this study, this research explored an experiential learning approach to improve CT along with AI application capabilities when engaging undergraduate students in creating a voice assistant application (VA app). A total of 56 students participated in the study. The control group (CG) of 26 students used a conventional subject-based learning method, while the experimental group (EG) of 30 students adopted an experiential learning method. This study aimed to examine the differences in the learning achievement of CT and AI concept, as well as the perspectives of AI anxiety, and CT; in the meanwhile, this study analysed the students' learning behaviours using sequential behavioural analysis to discuss the learning process. Results showed that the CT ability of the EG was better than that of the CG, although no significant difference was found between the two groups’ AI concepts and anxiety. The behaviour analysis also revealed that the EG students were willing to ask more questions, and conducted their VA evaluation, whereas the CG students were inclined to focus on the input and output of knowledge, and replicated what the teacher presented. Suggestions and implications are given for future research.},
    author = {Ting-Chia Hsu and Ching Chang and Yi-Wei Lin},
    doi = {https://doi.org/10.1016/j.compedu.2022.104657},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Artificial intelligence, Computational thinking, Experiential learning, Student learning behaviour, Voice assistant},
    pages = {104657},
    title = {Effects of voice assistant creation using different learning approaches on performance of computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131522002287},
    volume = {192},
    year = {2023}
}

@article{HU202381,
    abstract = {Although studies have shown that computational thinking (CT) can enhance learning processes and outcomes across traditional subjects, they have not shown how teachers might scaffold children's CT processes in a technology-mediated learning context. This exploratory study examined how teacher talk and technologies impacted the CT of three children (6 to 8 years old). Seven videotaped 90-minute sessions of weekly project-based activities yielded 4,842 turns of talk (2,974 by children). Statistical discourse analysis revealed the following results. After a teacher command, the children more often executed a sequence of actions toward a solution but less often demonstrated problem understanding than otherwise. Following a teacher's open question, the children were more likely to offer logically organized ideas. In response to a teacher's rhetorical question, they more often searched for information. These results inform educators regarding when to use each type of teacher talk to scaffold children's CT processes.},
    author = {Xinyun Hu and Ming Ming Chiu and Nicola Yelland and Yutong Liang},
    doi = {https://doi.org/10.1016/j.ecresq.2023.05.011},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Computational thinking, Early childhood education, Teacher talk, Technology},
    pages = {81-91},
    title = {Scaffolding young children's computational thinking with teacher talk in a technology-mediated classroom},
    url = {https://www.sciencedirect.com/science/article/pii/S0885200623000753},
    volume = {65},
    year = {2023}
}

@article{HU2024101653,
    abstract = {The rapid development of artificial intelligence technology has led to the proliferation of computational thinking (CT) education. However, research on unplugged activities’ influence in elementary math classrooms is limited, despite some exploring programming's cognitive benefits. This study presents both qualitative and quantitative analyzes stemming from a ten-week quasi-experimental research endeavor, specifically tailored for third-grade students. The research devised a series of unplugged activities, encompassing mathematical games, hands-on construction of mathematical logic boards, and calculating shopping discounts. The overarching objective was to investigate the impact of these unplugged activities on students’ mathematical creativity and CT. Students participating in a mathematics curriculum based on unplugged activities (N = 47) were compared with students participating in a traditional lecture-based mathematics curriculum (N = 46). The results indicated that unplugged activities exhibited significant advantages in fostering students’ CT and mathematical creativity across three dimensions, namely, problem-posing creativity (t = 5.830, p < 0.01), problem-solving creativity (t = 6.633, p < 0.01), and creative self-efficacy (t = 7.554, p < 0.01). Furthermore, the study revealed a relationship between students’ mathematical creativity as a predictor of CT. The results of the quantitative analysis were supported by the teacher's and students’ interview data, and the students felt excited and interested in the unplugged activities, whereas some students using the lecture-based method reported boredom and lack of interactivity. This research offered valuable insights for mathematics and CT education practice, underscoring unplugged activity as an innovative instructional approach that brings forth new possibilities for traditional mathematics teaching, with potential applications in the K-12 curriculum.},
    author = {Linlin Hu and Hao Wang},
    doi = {https://doi.org/10.1016/j.tsc.2024.101653},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Mathematics, Unplugged activities, Computational thinking, Mathematical creativity},
    pages = {101653},
    title = {Unplugged activities in the elementary school mathematics classroom: The effects on students’ computational thinking and mathematical creativity},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187124001913},
    volume = {54},
    year = {2024}
}

@article{ISRAELFISHELSON2022104353,
    abstract = {Both computational thinking (CT) and creativity have been recognized as key skills for today's learners. Over the last decade, research of both skills in a single context has emerged. In this paper, we present a scoping review of 62 such empirical from 2011 to 2020. Our goal was to have a thorough understanding of the educational settings in which research on both CT and creativity was conducted, the theoretical foundations it has laid down, and the research tools used. Our findings indicate a geographical bias (dominance of the US and prominence of developed European countries), as well as a focus on secondary education and on STEM-related disciplines; this could be explained by the current situation of CT spread. We also found that when studying CT and creativity jointly, it is most common to define CT in a broader perspective than merely programming of computer science. Additionally, while creativity is largely referred to as product-related, CT is barely referred to as such. Taken together, our findings point out some gaps in the current research of CT and creativity and suggest how it should be expended on the fertile grounds of creativity, as the latter crosses geographical, age, and subject borders. Doing so may build a bridge between CT and creativity in a way that will benefit both.},
    author = {Rotem Israel-Fishelson and Arnon Hershkovitz},
    doi = {https://doi.org/10.1016/j.compedu.2021.104353},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Computational thinking, Creativity, Creative thinking, Scoping review},
    pages = {104353},
    title = {Studying interrelations of computational thinking and creativity: A scoping review (2011–2020)},
    url = {https://www.sciencedirect.com/science/article/pii/S036013152100230X},
    volume = {176},
    year = {2022}
}

@article{JOHNLEMAY2021100056,
    abstract = {Teaching computational thinking (CT) has become a priority for educators and policymakers tasked with educating and training students for future jobs which are predicted to be increasingly automated. Recent research on effective instructional interventions for developing computational thinking skills, including algorithmic and critical thinking, problem-solving, creativity, and cooperativity, suggests that teaching and learning CT can improve student academic performance. In fact, the extant literature is quite sanguine about the topic of CT. However, few studies have attempted to establish a relationship between CT skills and academic performance. In the present cross-sectional study, we employ path analysis to model the structural relationship between self-reported CT skills and academic performance of a sample of 81 computer science undergraduates enrolled at a Southwestern American university. We found few direct relationships between CT skills and academic performance. We only find a significant positive relationship between creativity and academic performance and a significant negative relationship between cooperativity and academic performance. Our findings are surprising considering the abundant research promoting computational thinking as a key component of 21st century skills. The findings call for further in-depth analysis of computational thinking and the influence on students’ learning and learning outcomes. We discuss our results with respect to recent educational mandates for including CT and instructional alignment in school curricula. Our findings contribute to the existing discussion by helping to clarify the relationship between CT skills and academic performance in higher education.},
    author = {David {John Lemay} and Ram B. Basnet and Tenzin Doleck and Paul Bazelais and Anoop Saxena},
    doi = {https://doi.org/10.1016/j.caeo.2021.100056},
    issn = {2666-5573},
    journal = {Computers and Education Open},
    keywords = {Computational thinking, Academic performance, Computer science, School curricula},
    pages = {100056},
    title = {Instructional interventions for computational thinking: Examining the link between computational thinking and academic performance},
    url = {https://www.sciencedirect.com/science/article/pii/S2666557321000276},
    volume = {2},
    year = {2021}
}

@article{KITE2022103904,
    abstract = {Computational thinking (CT) is critical for Twenty-first century life. Ensuring equitable access to CT depends on preparing teachers to integrate CT into disciplinary curricula. We report on the design, evaluation, and outcomes of the Computational Thinking Unplugged for Science (CT-UP-S) professional development program for inservice science teachers. Our process-based approach to CT significantly improved teachers CT understanding and CT/science integration self-efficacy by systematically linking CT practices to scaffold the generation of unplugged algorithms. Additionally, we found that the process-based approach provided a framework for teachers' lesson planning and that teachers’ content knowledge moderated their ability to write CT-integrated science lessons.},
    author = {Vance Kite and Soonhye Park},
    doi = {https://doi.org/10.1016/j.tate.2022.103904},
    issn = {0742-051X},
    journal = {Teaching and Teacher Education},
    keywords = {Computational thinking, Computational thinking integration, Process-based computational thinking, Science education, Teacher professional development, Unplugged},
    pages = {103904},
    title = {Preparing inservice science teachers to bring unplugged computational thinking to their students},
    url = {https://www.sciencedirect.com/science/article/pii/S0742051X22002797},
    volume = {120},
    year = {2022}
}

@article{KONG2023107749,
    abstract = {Computational thinking (CT) practices is a critical cognitive tool for students to overcome challenges in this technological era. Few studies investigated CT practices from a development perspective. A two-year intervention was implemented in 30 intervention and 22 control schools in Hong Kong to promote CT education (T1baseline: N = 13,056; T2: N = 16,367; and T3: N = 15,269). Senior primary students (grades 4 to 6) around 8–12 years old were targeted. Among them, 34% were girls at T1baseline. Their learning progression of cognitive development was assessed with a CT practices test. Data were analyzed using item response analysis. Learning trajectories of CT practices were modeled to understand how students’ cognitive development differed between schools. Insights of findings were discussed in bringing CT practices to life.},
    author = {Siu-Cheung Kong and Yi-Qing Wang},
    doi = {https://doi.org/10.1016/j.chb.2023.107749},
    issn = {0747-5632},
    journal = {Computers in Human Behavior},
    keywords = {Cognitive development, Cognitive learning, Computational thinking practices, Item response analysis, Longitudinal intervention},
    pages = {107749},
    title = {Monitoring cognitive development through the assessment of computational thinking practices: A longitudinal intervention on primary school students},
    url = {https://www.sciencedirect.com/science/article/pii/S0747563223001000},
    volume = {145},
    year = {2023}
}

@article{KONG2024105126,
    abstract = {Recent studies identify Self-Regulated Learning (SRL) as a key factor in enhancing cognitive development, particularly within Computational Thinking (CT) literature. However, research gaps remain in understanding how SRL and CT interact from a developmental perspective. Our study designed a program with tailored animations and worksheets to specifically foster students' learning and cognitive development. Using a mixed-methods approach, we administered surveys among 1235 students from 29 Hong Kong primary schools to investigate a dynamic learning system comprising SRL and CT in a large-scale CT program. Additionally, semi-structured interviews were conducted with 15 students to further probe insights. Quantitative findings revealed a mutually reinforcing relationship in the dynamic system, suggesting that higher SRL skills enhance cognitive CT abilities, and vice versa. Complementing these results, qualitative findings showed that integrating animations and worksheets into the CT program significantly boosted students' SRL and cognitive development. These findings have significant implications for educational practices and curriculum design. Schools should consider implementing SRL strategies, such as proactive goal setting and reflective evaluation, within their curricula to promote students’ cognitive development. Furthermore, strategic investments in educational technology, including collaborations with EdTech developers, are essential to create effective, pedagogically sound tools that enhance learning outcomes. These insights provide valuable guidance for creating a supportive SRL environment that fosters cognitive development in primary school education.},
    author = {Siu-Cheung Kong and Yi-Qing Wang},
    doi = {https://doi.org/10.1016/j.compedu.2024.105126},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Cognitive development, Computational thinking, Mixed methods design, Reciprocal dynamics, Self-regulated learning},
    pages = {105126},
    title = {Dynamic interplays between self-regulated learning and computational thinking in primary school students through animations and worksheets},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131524001404},
    volume = {220},
    year = {2024}
}

@article{KOPCHA2023100156,
    abstract = {In this paper, we explore how the theoretical notion of possibility space offers a way to study how children's computational thinking develops as a process. Drawing on embodied notions of cognition, we first examine the literature that supports how children's computational thinking emerges as a possibility space that involves conceptualizing possible actions in a given moment, deciding which action to take by anticipating the results of a possible action, and learning from the actions that they have taken. We then use a grounded approach to analyze the problem-solving process of two 5th-grade children who engaged in an educational robotics activity over two 50-minute class periods. The findings lend support for approaching children's computational thinking as a cycle of action-taking that includes conceptualizing, anticipating, and taking action. The findings also support the pedagogical practice of having children predict the results of a computer program to enhance their computational thinking. Implications for the way that teachers can support children in learning to conceptualize what is possible and take action from it are discussed.},
    author = {Theodore J. Kopcha and Ceren Ocak},
    doi = {https://doi.org/10.1016/j.caeo.2023.100156},
    issn = {2666-5573},
    journal = {Computers and Education Open},
    keywords = {Computer science education, Computational thinking, Elementary, Embodied cognition, Educational robotics},
    pages = {100156},
    title = {Children's computational thinking as the development of a possibility space},
    url = {https://www.sciencedirect.com/science/article/pii/S2666557323000344},
    volume = {5},
    year = {2023}
}

@article{KOREN2023101240,
    abstract = {Methodological innovations across social sciences are opening new avenues for conducting research designed to address real-world challenges. The benefits of utilizing the Design-Based Implementation Research (DBIR) approach in public libraries to resolve a persistent problem of practice, a lack of assessment tools to evaluate youth Computational Thinking (CT) programs, is demonstrated. Findings from a three-year, three-phased study utilizing the DBIR approach to design and implement a suite of assessment tools to assess CT programming in public libraries are presented. Guided by the four principles of the DBIR approach, this research produced new knowledge, including identifying CT program outcomes, challenges, and recommendations for designing and implementing assessment tools to measure the impact of public libraries' CT programming. Findings underscore the DBIR approach as a strategy for engaging with practitioners and helping shift their perspectives by resolving practice problems and facilitating the design of sustainable solutions.},
    author = {Nitzan Koren and David Weintrop and Mega Subramaniam},
    doi = {https://doi.org/10.1016/j.lisr.2023.101240},
    issn = {0740-8188},
    journal = {Library & Information Science Research},
    keywords = {Design-based implementation research, Assessment, Computational thinking, Public libraries, Methods paper},
    number = {2},
    pages = {101240},
    title = {Using design-based implementation research approach to create computational thinking assessment tools for youth programs in public libraries},
    url = {https://www.sciencedirect.com/science/article/pii/S0740818823000166},
    volume = {45},
    year = {2023}
}

@article{LAVIGNE2023102,
    abstract = {This paper describes a study designed to investigate the promise of resources that support the development of computational thinking (CT) in preschool children. This study was the culmination of a collaborative research process between researchers and media developers of a home-based intervention that included media and hands-on activities created to support the development of young children's CT. The mixed-methods study included 108 families, each with a 4- or 5-year-old child. Families, who participated in the study at home for six weeks, were randomly assigned to an intervention group that viewed media and engaged with hands-on activities with a CT focus or a control group that viewed and engaged with non-STEM literacy content. Data collection consisted of parent surveys, parent interviews, and CT learning and pre-coding tasks to assess children's CT abilities. Results indicate that the learning intervention demonstrates promise in supporting parental understanding of CT. Experience with the intervention over the six weeks also appeared to cultivate some CT strategy use in children as evidenced by parental reports and performance on learning and pre-coding sequencing tasks.},
    author = {Heather J. Lavigne and Ashley Lewis Presser and Deborah Rosenfeld and Leslie Cuellar and Regan Vidiksis and Camille Ferguson and Marisa Wolsky and Jessica Andrews},
    doi = {https://doi.org/10.1016/j.ecresq.2023.05.009},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Computational thinking, Preschool, informal learning, Joint engagement, Parents, Digital media},
    pages = {102-114},
    title = {Computational thinking with families: Studying an at-home media intervention to promote joint media engagement between preschoolers and their parents},
    url = {https://www.sciencedirect.com/science/article/pii/S0885200623000716},
    volume = {65},
    year = {2023}
}

@article{LEE2022102008,
    abstract = {This systematic review examined how computer science (CS) education was implemented in schools and its efficacy for developing students’ computational thinking (CT). Sixty-six papers were selected for this systematic review and analyzed for patterns in relation to the implementation of CS education in K-12 schools and its impact on the development of students’ CT skills. Although educational interventions have not always been successful in CS education, this review provides strong evidence that overall, CS education promotes the development of students’ CT in the K-12 setting while improving their creative and critical thinking skills. We recommend early access to CS education, various innovative instructional approaches to CS education and appropriate support and guidance for student learning.},
    author = {Sang Joon Lee and Gregory M. Francom and Jeremiah Nuatomue},
    doi = {https://doi.org/10.1016/j.ijer.2022.102008},
    issn = {0883-0355},
    journal = {International Journal of Educational Research},
    keywords = {Computer science education, Computational thinking, Programming, Systematic review, K-12},
    pages = {102008},
    title = {Computer science education and K-12 students’ computational thinking: A systematic review},
    url = {https://www.sciencedirect.com/science/article/pii/S0883035522000866},
    volume = {114},
    year = {2022}
}

@article{LEWISPRESSER202342,
    abstract = {Collecting and organizing data to understand and answer real-world questions is an increasingly important skill in our current world. Fostering data collection and analysis (DCA) skills in young children leverages key mathematics skills as well as the data representation, visualization, and interpretation skills of computational thinking (CT), culminating in a problem-solving approach with data. As such, the intervention, comprising investigations and a digital app, supported preschool teachers and children to answer data-focused questions by engaging in each step of the DCA process in order to foster CT and math skills. Teachers appreciated that the app offers a new way for children to visualize data and noted that the app provided learning opportunities for children that would not otherwise be possible or easy to implement. Results also suggest that the app provides a systematic process for data collection, entry, and interpretation. Children in classrooms that completed the intervention had significantly higher scores at post-intervention compared to children in classrooms that did not complete the intervention, controlling for pre-intervention scores, B(SE) = 0.13(0.05), t (6) = 2.48, p = .048.},
    author = {Ashley E. {Lewis Presser} and Jessica Mercer Young and Deborah Rosenfeld and Lindsay J. Clements and Janna F. Kook and Heather Sherwood and Michelle Cerrone},
    doi = {https://doi.org/10.1016/j.ecresq.2023.05.012},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Preschool, Mathematics, Data collection and analysis, Computational thinking, Technology},
    pages = {42-56},
    title = {Data collection and analysis for preschoolers: An engaging context for integrating mathematics and computational thinking with digital tools},
    url = {https://www.sciencedirect.com/science/article/pii/S088520062300073X},
    volume = {65},
    year = {2023}
}

@article{LI2024101537,
    abstract = {Engagement is critical to computational thinking and programming education. However, as multi-dimensional variables, when analyzing how different aspects of engagement in computational thinking tasks influence skills development, it becomes crucial to discern precisely which engagement components intersect with the progression of computational thinking skills. This discernment is pivotal because engagement can vary based on the task nature, the context, and the individual's preferences. Therefore, the purpose of this study is to explore the gender differences in engagement and computational thinking skills and the predictive relationships among these sub-dimensions for boys and girls in an unplugged environment. In this study, a quasi-experiment for 90 sixth-grade students from a north Chinese primary school was performed. By partial least squares–structural equation modeling, students’ models of computational thinking skills and engagement were analyzed, and comparisons of boys and girls were made by analysis of covariance statistics. Results indicated that compared with boys, girls reported higher computational thinking performance and more engagement in unplugged contexts. Furthermore, girls’ computational thinking skills were only predicted by their cognitive engagement, whereas boys’ computational thinking skills were predicted by their behavioral, emotional, and cognitive engagement. Teachers can adopt these findings to design computational thinking teaching interventions that combine the advantages of unplugged activity and focus on the engagement of boys and girls.},
    author = {Qi Li and Qiang Jiang and Jyh-Chong Liang and Weiyan Xiong and Wei Zhao},
    doi = {https://doi.org/10.1016/j.tsc.2024.101537},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Engagement, Computational thinking skills, Gender differences, Unplugged activity, Partial least squares–structural equation},
    pages = {101537},
    title = {Engagement predicts computational thinking skills in unplugged activity: Analysis of gender differences},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187124000750},
    volume = {52},
    year = {2024}
}

@article{LOUKA2024e30482,
    abstract = {A plethora of programming platforms purports to teach preschool-aged children computational thinking (CT) and coding skills. However, the empirical evidence to support their effectiveness is still in its early stages. A three-week didactic intervention using ScratchJr was conducted to investigate its effectiveness in fostering CT and rudimentary coding skills in a cohort of preschool children (N = 34, aged 4–6 years). While the initial performance mean of the control group (M = 7.07, SD = 2.58) exhibits a statistically significant elevation t (22.64 = 2.23, p = 0.036) vis-à-vis the experimental group (M = 5.35, SD = 1.58), t (22.64) = 2.23, p = 0.0 the terminal performance means of both groups converge closely. However, meticulous data analysis unveils a statistically notable enhancement among preschool participants exposed to the educational intervention involving ScratchJr. Notably, both instructional modalities appear commensurate in nurturing elementary computational tenets, namely modularity and control structures. The experimental cohort outperforms the control group with statistical significance in comprehending potent ideational constructs encompassing representation, algorithms, and hardware/software interplay. Conversely, the control group performs better in grasping the debugging concept than their experimental counterparts. The outcomes lend substantive credence to the efficacy of the distinct programming milieu offered by ScratchJr, underscoring its effectiveness in cultivating CT and coding proficiencies within the preschool demographic.},
    author = {Konstantina Louka and Stamatios Papadakis},
    doi = {https://doi.org/10.1016/j.heliyon.2024.e30482},
    issn = {2405-8440},
    journal = {Heliyon},
    keywords = {Computational thinking, Coding skills, Early childhood education, ScratchJr},
    number = {10},
    pages = {e30482},
    title = {Enhancing computational thinking in early childhood education through ScratchJr integration},
    url = {https://www.sciencedirect.com/science/article/pii/S2405844024065137},
    volume = {10},
    year = {2024}
}

@article{MADARIAGA2023104664,
    abstract = {As we begin to identify essential skills for the future, there has been an increased focus on how to define and implement computational thinking within education. However, the question of how to engage children with coding activities within the context and limitations of the curriculum remains relatively explored. In our study, a human-centered design approach was followed to guide a small group of children through the co-design, implementation and evaluation of a board game. The board game had two versions: an offline version involving a robotic agent and an online version with its digital equivalent. A mixed-method approach was used to understand and compare levels of engagement, usability, and collaboration in both versions of the game. The tangible aspect of working with a robotic agent in the offline version led to greater levels of motivation and involvement with the game mechanics. Tangible robotics games tend to be more approachable for children. Our study shows that using such games by connecting the mathematics curriculum with coding problems can successfully engage participants in collaborative computational thinking activities. We contribute to the field by providing human-centered guidance for the creation of educational tools to develop computational thinking. Such guidance is not only applicable in technologically rich environments; it can also be applied in educational communities with limited access to technology.},
    author = {Leonardo Madariaga and Carolina Allendes and Miguel Nussbaum and Gustavo Barrios and Nicolás Acevedo},
    doi = {https://doi.org/10.1016/j.compedu.2022.104664},
    issn = {0360-1315},
    journal = {Computers & Education},
    pages = {104664},
    title = {Offline and online user experience of gamified robotics for introducing computational thinking: Comparing engagement, game mechanics and coding motivation},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131522002354},
    volume = {193},
    year = {2023}
}

@article{MARINMARIN2024e29177,
    abstract = {The development of programming skills and computational thinking in the formal educational context is one of the most recent horizons set by many educational systems worldwide. Although the first computational thinking initiatives are being applied from the earliest school ages, this research focuses on the secondary education level. Specifically, the objective is the following: to analyse the implementation of Arduino, as well as the benefits and opportunities it brings to secondary school students. For this purpose, documentary research has been undertaken applying a systematic review according to the PRISMA 2020 framework following the PiCoS strategy. Atlas.ti 9 was used to analyse the information. Out of 316 papers identified, 37 were included in the research. In relation to the results, Arduino is primarily used in technology and physics subjects, although it is also used to develop interdisciplinary STEAM projects. As a rule, it is used to learn programming languages, but likewise as a resource to develop science experiments. LED lights, servomotors and breadboards are among the most commonly used resources together with the Arduino board. and Scratch was the most widely used software. The initiatives implemented have yielded both positive and negative results, for example, one drawback is that some projects are very difficult, and some achievements such as: increased motivation towards the contents addressed or also the development of some soft skills, such as problem solving.},
    author = {José-Antonio Marín-Marín and Pedro Antonio García-Tudela and Pablo Duo-Terrón},
    doi = {https://doi.org/10.1016/j.heliyon.2024.e29177},
    issn = {2405-8440},
    journal = {Heliyon},
    keywords = {Arduino, Secondary education, STEM, Computational thinking, Programming, Robotics, Educational innovation, Educational technology},
    number = {8},
    pages = {e29177},
    title = {Computational thinking and programming with Arduino in education: A systematic review for secondary education},
    url = {https://www.sciencedirect.com/science/article/pii/S2405844024052083},
    volume = {10},
    year = {2024}
}

@article{MARTINNUNEZ2023100128,
    abstract = {The concept of Artificial Intelligence (AI), born as the possibility of simulating the human brain's learning capabilities, quickly evolves into one of the educational technology concepts that provide tools for students to better themselves in a plethora of areas. Unlike the previous educational technology iterations, which are limited to instrumental use for providing platforms to build learning applications, AI has proposed a unique education laboratory by enabling students to explore an instrument that functions as a dynamic system of computational concepts. However, the extent of the implications of AI adaptation in modern education is yet to be explored. Motivated to fill the literature gap and to consider the emerging significance of AI in education, this paper aims to analyze the possible intertwined relationship between students’ intrinsic motivation for learning Artificial Intelligence during the COVID-19 pandemic; the relationship between students’ computational thinking and understanding of AI concepts; and the underlying dynamic relation, if existing, between AI and computational thinking building efforts. To investigate the mentioned relationships, the present empirical study employs mediation analysis based upon collected 137 survey data from Universidad Politécnica de Madrid students in the Institute for Educational Science and the School of Naval Architecture and Marine Engineering during the first quarter of 2022. Findings show that intrinsic motivation mediates the relationship between perceived Artificial Intelligence learning and computational thinking. Also, the research indicates that intrinsic motivation has a significant relationship with computational thinking and perceived Artificial Intelligence learning.},
    author = {José Luis Martín-Núñez and Anil Yasin Ar and Rodrigo Pérez Fernández and Asad Abbas and Danica Radovanović},
    doi = {https://doi.org/10.1016/j.caeai.2023.100128},
    issn = {2666-920X},
    journal = {Computers and Education: Artificial Intelligence},
    keywords = {Artificial intelligence, Computational thinking, COVID-19, Educational innovation, E-learning, Higher education, SDG 4, Soft skills},
    pages = {100128},
    title = {Does intrinsic motivation mediate perceived artificial intelligence (AI) learning and computational thinking of students during the COVID-19 pandemic?},
    url = {https://www.sciencedirect.com/science/article/pii/S2666920X23000073},
    volume = {4},
    year = {2023}
}

@article{MARTINS2023100566,
    abstract = {This study characterizes the literature on teaching computational thinking (CT) to preschoolers aged 4 to 5 years. Previous research and published systematic studies have provided important contributions about CT teaching to elementary and high school children. However, to date, there is no systematic overview of CT education for preschoolers. For this reason, this systematic mapping synthesizes 82 studies on CT teaching, through the implementation and evaluation of tools and activities to teach, improve or measure the CT knowledge acquired by children. Furthermore, studies on courses or training offered to preschool teachers related to the teaching of CT were also considered. From the selected studies, the following information was collected: year of publication; recovery sources and databases; vehicles and places of publication; temporal delimitation of research, research approach, nature and research method; CT teaching approaches; tools used to teach CT and how they are classified according to their physical characteristics and, finally, participants and individuals responsible for the research. The results suggest an increase in the number of publications in recent years, revealing the interest of researchers in the topic. Furthermore, we observed a trend towards the use of physical artifacts and the use of the disconnected computing approach to teaching CT skills to preschool children. The results also exposed that preschool teachers have little autonomy in implementing CT teaching activities because those are mostly implemented by computer professionals (researchers, teachers, etc.). This is because preschool teachers are still discouraged from teaching computer and technology-related content to children, considering them complex and disconnected from basic curricula. However, when teachers are trained to teach CT, they become interested in the content and become more active during the teaching process. We argue for integrating CT-related content into education curricula and supporting preschool teachers to implement it autonomously in their classrooms.},
    author = {Everton Carlos Martins and Letícia Gabrielly Zacano {da Silva} and Vânia Paula de Almeida Neris},
    doi = {https://doi.org/10.1016/j.ijcci.2023.100566},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {Computational thinking, Early childhood, Preschool, Systematic mapping},
    pages = {100566},
    title = {Systematic mapping of computational thinking in preschool children},
    url = {https://www.sciencedirect.com/science/article/pii/S221286892300003X},
    volume = {36},
    year = {2023}
}

@article{MASTER2023242,
    abstract = {Learning coding during early childhood is an effective way for children to practice computational thinking. Aspects of children's motivation can increase the likelihood that children approach computational thinking activities with enthusiasm and deep engagement. Gender inequities may interfere with children's readiness to take advantage of opportunities to build computational thinking skills through activities such as coding. Societal stereotypes can reduce young girls’ motivation to engage with computer science, preventing them from gaining benefits from coding activities designed to support computational thinking. This study examined children's gender stereotypes as well as children's own motivation for computer coding in 363 first- through third-grade children. We assessed gender differences in both stereotypes and motivation, as well as links between the stereotypes that individual children held and their own motivation. Children generally endorsed stereotypes about interest and ability for computer coding that favored their own-gender group, although third-grade girls reported gender-egalitarian beliefs about interest in coding. There were no gender differences in children's motivation for computer coding in terms of their own interest, sense of belonging, or ability self-concepts. Children's stereotypes about their own-gender group were significantly positively correlated with their own motivation for computer coding. These findings suggest that early childhood represents an excellent age for children to begin building computational thinking skills, before girls endorse negative stereotypes about their gender's interest in computer science.},
    author = {Allison Master and Daijiazi Tang and Desiree Forsythe and Taylor M. Alexander and Sapna Cheryan and Andrew N. Meltzoff},
    doi = {https://doi.org/10.1016/j.ecresq.2023.03.004},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Computational thinking, Motivation, Gender, Stereotypes, Belonging, Self-concepts},
    pages = {242-254},
    title = {Gender equity and motivational readiness for computational thinking in early childhood},
    url = {https://www.sciencedirect.com/science/article/pii/S0885200623000406},
    volume = {64},
    year = {2023}
}

@article{MENDOZADIAZ2023e18997,
    abstract = {The tenure system in the United States places significant importance on teaching effectiveness. To date, students' evaluations of teaching (SETs) have been the reigning mechanism for assessing effective teaching. However, prior work has shown that SETs are often biased against underrepresented groups and minorities. The present study analyzes options for effective teaching assessments, which include evaluating final grades and measuring the differences between students’ pre- and post-tests (normalized gain) using standard instruments. The content area and the instrument used in this study originated in the computational thinking field, which has a widespread presence in engineering, where minorities are at a disadvantage. This study obtained a total of 88 student participants from four sections of an introductory engineering course at a Southwestern institution. The study utilized a computational thinking diagnostic (CTD) to inform the course teaching approach (the intervention). Results show that (a) normalized learning gains correlated moderately with SETs, (b) final grades correlated strongly with SETs, (c) final grades correlated strongly with normalized learning gains, (d) the educational intervention based on the CTD significantly affected student learning, and (e) SET comments affect evaluations. The implications include the notion that standardized instrument-driven instruction and evaluations can increase the success of minorities on both sides of the classroom. The purpose of this manuscript is to invite the Heliyon readership to get involved in the development of related instruments and to incorporate these measures of learning into their instruction so biases are avoided or minimized.},
    author = {Noemi V. {Mendoza Diaz} and Trinidad Sotomayor},
    doi = {https://doi.org/10.1016/j.heliyon.2023.e18997},
    issn = {2405-8440},
    journal = {Heliyon},
    keywords = {Measures of teaching effectiveness, Computational thinking, Students' evaluations of teaching (SETs), Measures of learning, Biased faculty assessment},
    number = {8},
    pages = {e18997},
    title = {Effective teaching in computational thinking: A bias-free alternative to the exclusive use of students’ evaluations of teaching (SETs)},
    url = {https://www.sciencedirect.com/science/article/pii/S2405844023062059},
    volume = {9},
    year = {2023}
}

@article{MISIRLI2023139,
    abstract = {The present study investigates the debugging process of 526 children in preschool (4–6 aged) when programming a tangible robot. When a child is involved in programming, it is needed to identify and correct errors, or in other words, debug a program. Debugging is a high-level thinking skill and is an essential component closely related to developing Computational Thinking in early childhood education. Though the debugging process is a cognitive function in programming investigated by many researchers in recent decades, most studies are conducted either in primary, secondary education, or higher education concerning beginners or experts in programming. Very few reviews, and some focus on preschool education. Our study set out the following objectives: 1) How do children identify the existence of error and locate it? 2) What types of errors emerge when coding? 3) What type of error is complex for novice programmers? 4) What strategies are developed by novice programmers to debug effectively? and 5) What types of knowledge do novice programmers construct by debugging the tangible robot Bee-Bot? The study follows an iterative model of a design-based research approach. It uses multiple case studies to collect qualitative and quantitative data. The programming intervention was implemented by 30 educators in their classrooms and was based on a scenario-based teaching design. The debugging process was analysed using Klahr & Craven's framework (1988): 1) test and evaluate program, 2) identify bug, 3) represent program, 4) locate bug and 5) correct bug. The main finding is the construction and development of syntactic and semantic knowledge.},
    author = {Anastasia Misirli and Vassilis Komis},
    doi = {https://doi.org/10.1016/j.ecresq.2023.05.014},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Computational thinking, Programming, Debugging, Educational robotics, Early childhood education},
    pages = {139-158},
    title = {Computational thinking in early childhood education: The impact of programming a tangible robot on developing debugging knowledge},
    url = {https://www.sciencedirect.com/science/article/pii/S0885200623000765},
    volume = {65},
    year = {2023}
}

@article{MONTEYNE2025105181,
    abstract = {Computational thinking has become an integral component of curricula worldwide, necessitating teachers to develop this competence in their students. To effectively meet these curricular requirements, teachers themselves need a solid foundation of computational thinking content knowledge, which refers to the understanding and skills they possess in this area. However, despite widespread recognition of this need, few studies have rigorously examined teachers' content knowledge in this domain. Addressing this gap requires the development of high-quality measurement tools. This study details the development of an instrument, created as part of the International Computer and Information Literacy Study (ICILS) 2023 in Flanders, to measure lower secondary school teachers' computational thinking content knowledge in a valid and reliable way. The article first outlines the construction process of the instrument, which involved close collaboration with experts in the field and drew upon the framework of Fraillon et al. (2023). Following this, the instrument's psychometric properties are presented, which include both item-level and overall instrument characteristics. These properties were evaluated using data from a sample of 352 participants, applying both Classical Test Theory and Item Response Theory. The final tool consists of sixteen multiple-choice and short constructed response questions. The results indicate favorable item and overall instrument characteristics, thereby affirming its potential to measure the intended construct in a valid and accurate way.},
    author = {Sara Monteyne and Charlotte Struyve and Natacha Gesquière and Tom Neutens and Francis Wyffels and Johan {van Braak} and Koen Aesaert},
    doi = {https://doi.org/10.1016/j.compedu.2024.105181},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Evaluation methodologies, Secondary education, 21st century abilities},
    pages = {105181},
    title = {Teachers’ computational thinking content knowledge: Development of a measurement instrument},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131524001957},
    volume = {225},
    year = {2025}
}

@article{MONTUORI2024104961,
    abstract = {In this paper, we review and meta-analyze the findings of experimental studies published between 2006 and 2022 that examined the effects of coding and programming interventions on children's core and higher order executive functions (response inhibition, working memory, cognitive flexibility, planning and problem solving). The systematic review and meta-analysis aimed to address three research questions: 1) Which executive functions are most impacted by the teaching of CT? 2) Which instructional modality (educational robotics/virtual coding/unplugged coding) is most effective in enhancing executive function skills in learners aged 4–16 years? and 3) Does the cognitive effectiveness of coding vary with children's age? A total of 19 studies with 1523 participants met the selection criteria for the systematic review. The meta-analysis included 11 of those studies. The results reveal beneficial effects of structured virtual and tangible coding (educational robotics) activities for preschoolers and first graders, and significant effects of more unstructured virtual coding activities (e.g., Scratch-based) for older students. A multivariate fixed-effects model meta-analysis shows that the teaching of coding significantly improves problem-solving with the highest effect (dppc2 = 0.89), but also planning (dppc2 = 0.36), and inhibition and working memory with lower effects (dppc2 = 0.17, dppc2 = 0.20).},
    author = {Chiara Montuori and Filippo Gambarota and Gianmarco Altoé and Barbara Arfé},
    doi = {https://doi.org/10.1016/j.compedu.2023.104961},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Coding, Computational thinking, Executive function, Problem solving, Children, Intervention},
    pages = {104961},
    title = {The cognitive effects of computational thinking: A systematic review and meta-analytic study},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131523002385},
    volume = {210},
    year = {2024}
}

@article{NA2024100650,
    abstract = {Despite growing interest in early childhood computational thinking (CT), there is a lack of validated assessments for children who are emerging readers. This paper presents validity and reliability evidence of a performance-based assessment of CT using item response theory (IRT) from 272 children aged 4–8. Using a two-parameter logistic model IRT model (2PL IRT), we confirmed that model- and item-level fits are acceptable. Item analyses revealed a high discriminability (M = 2.26, SD = 1.12) and a moderate item difficulty (M = −0.21; SD = 0.86), on average, across 19 items. Reliability analysis demonstrated that the assessment was substantially reliable (marginal reliability: rxx = 0.87). Differential item functioning (DIF) analyses indicated that the assessment estimated children's item parameters fairly, regardless of their gender and age. However, we confirmed gaps in latent ability (θ) of CT by gender and age: boys showed higher latent ability of CT than girls, and old children (above 72 months) showed higher latent ability than young children (below 72 months). Findings suggest the assessment is a fair measure that can serve as a reliable and valid tool to assess CT for children who are emerging readers.},
    author = {Chungsoo Na and Jody Clarke-Midura and Jessica Shumway and Wilhelmina {van Dijk} and Victor R. Lee},
    doi = {https://doi.org/10.1016/j.ijcci.2024.100650},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {, , , , },
    pages = {100650},
    title = {Validating a performance assessment of computational thinking for early childhood using item response theory},
    url = {https://www.sciencedirect.com/science/article/pii/S2212868924000187},
    volume = {40},
    year = {2024}
}

@article{NOCERINO2023112626,
    abstract = {Since environmental and energy issues and challenges continues to emerge as key global concerns, Green Building Certification Systems are becoming increasingly relevant in the construction industry. In this regard, LEED (Leadership in Energy and Environmental Design) is considered one of the most widely recognized environmental assessment methods used globally in the construction industry today. However, due to the high level of complexity of the LEED system, the tools usually used to verify the achievement of the credits lack of “design friendliness” and hardly communicate effectively with the conventional tools used by architects and engineers (e.g. CAD, BIM). This makes difficult to fully take into account, especially at the early design stage, the many interconnected aspects that contribute to the green certification, with consequent issues often arising in the design validation and/or construction phases, resulting in time delays and cost increments. The application of innovative problem-solving methods, such as computational thinking, together with coding techniques, represents an effective way to deal with this issue. This kind of methodology, in fact, allows the requirements of a specific LEED credit to be digitally parametrised and flexibly incorporated into a “designer friendly” working environment. In particular, Visual Programming Languages (VPLs), due to their high simplicity of usage, allow architects and engineers to develop algorithms and thus implement their technical knowledge in the field of environmental design with computer programming skills, useful to improve their tools and keep them constantly updated. The aim of this paper is to illustrate a methodology through which, by merging computational thinking strategies with VPL tools, is possible to keep under control, in the same working environment, all the parameters required to verify in real time the achievement of LEED credits. To demonstrate the flexibility of the approach, dedicated tools developed for the verification of some specific credits at different scales – neighbourhood and building – are illustrated as operational examples of the proposed methodology.},
    author = {Giovanni Nocerino and Mattia Federico Leone},
    doi = {https://doi.org/10.1016/j.enbuild.2022.112626},
    issn = {0378-7788},
    journal = {Energy and Buildings},
    keywords = {LEED, Environmental Design, Computational Thinking, Visual Programming Language, Algorithm Aided Design},
    pages = {112626},
    title = {Computational LEED: computational thinking strategies and Visual Programming Languages to support environmental design and LEED credits achievement},
    url = {https://www.sciencedirect.com/science/article/pii/S0378778822007976},
    volume = {278},
    year = {2023}
}

@article{ODGAARD2023100598,
    abstract = {This paper sheds light on 3–5-year-old children’s enactments of computational empowerment (CE) in activities with computational thinking (CT). CT is widely elaborated on as a universal problem-solving approach and a skill set necessary for thriving in today’s digitized societies. Scholars claim that CT for all should be ensured from an early age, and several studies develop and examine age-appropriate technological tools, as well as pedagogical approaches, for young children’s learning of CT. Based on 1.5 years of co-designing for children’s situated CT in two Danish kindergartens, the present study conducts a socioculturally informed analysis of video-observed interactions between children and educational robots. The findings display how children and robots engage in interactions that transcend children’s mastery of CT in any narrow sense. This is examined as situated enactments of CE; as children’s critical and informed decisions regarding the roles that technologies, in this case educational robots, can play in their institutionally situated social lives. The paper concludes that children’s various enactments of CE deserve scholarly and professional attention, both as an important prerequisite for, and as a necessary limitation to, the implementation of CT in kindergartens.},
    author = {Ane Bjerre Odgaard},
    doi = {https://doi.org/10.1016/j.ijcci.2023.100598},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {Computational thinking, Computational empowerment, Kindergarten, Play},
    pages = {100598},
    title = {Who programs whom?—Computational empowerment through mastery and appropriation in young children’s computational thinking activities},
    url = {https://www.sciencedirect.com/science/article/pii/S2212868923000351},
    volume = {37},
    year = {2023}
}

@article{OUYANG2023104721,
    abstract = {The use of educational robotics for programming education has been shown to be effective in fostering students’ computational thinking (CT) skills. However, physical educational robots are expensive, which may limit their wide use in the classroom. This study used augmented reality technology to develop a virtual educational robotic system (AR Bot for short), which offers 3D visual learning feedback to strengthen spatial ability, as well as delayed feedback and auto-scoring feedback to promote students’ deeper CT processes. To examine the impact of AR Bot on programming learning, this study used a quasi-experimental design to compare an experimental group of 41 first-year university students who used AR Bot and a control group of 34 first-year university students who used Scratch. We assessed the impact of the two CT tools on students’ internal learning processes (enjoyment of learning), CT skills (problem decomposition, algorithm design, and algorithm efficiency skills), and academic achievement. The results showed that students who used AR Bot had higher enjoyment of learning, algorithm design skills, and algorithm efficiency skills but not higher problem decomposition skills and academic achievement than students who used Scratch. Enjoyment of learning led to higher problem decomposition, algorithm design, and algorithm efficiency skills but not academic achievement. Problem decomposition and algorithm design skills, but not algorithm efficiency skills, led to academic achievement. The theoretical and practical implications of the proposed tool and other CT tools in programming education are discussed.},
    author = {Fang-Chuan {Ou Yang} and Hui-Min Lai and Yen-Wen Wang},
    doi = {https://doi.org/10.1016/j.compedu.2022.104721},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Augmented and virtual reality, Improving classroom teaching, Teaching strategies, Learning strategies},
    pages = {104721},
    title = {Effect of augmented reality-based virtual educational robotics on programming students’ enjoyment of learning, computational thinking skills, and academic achievement},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131522002925},
    volume = {195},
    year = {2023}
}

@article{OYELERE2023100016,
    abstract = {Recently, virtual reality (VR) technology has shown great potential in advancing education with many pedagogical benefits for building the 21st-century teaching and learning experience. This study conducted a formative evaluation of an immersive VR expedition application with the aim of understanding users' learning processes and how the application facilitates higher education students' computational thinking skills. Six participants were randomly selected to conduct this evaluation. A mixed research approach consisting of quantitative and qualitative methods was employed. The study quantitatively analyzed users' scores from gameplay to understand how the intervention supported computational thinking skills. Participants were also interviewed to collect data after playing the mini-games to investigate users' experiences. The study showcases players' computational thinking competency, assessed automatically during gameplay. Further, this study used inductive content analysis to demonstrate users' reactions to prototyped VR mini-games. The qualitative findings suggest that users found the VR mini-games interactive and immersive, which provided an opportunity to foster learners' computational thinking skills. The quantitative analysis revealed that student's computational thinking competency can be enhanced through consistent playing of the mini-games. Moreover, the expedition aspect of the VR game stimulated learners' curiosity, which sustained their learning progress. Furthermore, users gained new knowledge and found the mini-games educative. Nevertheless, several aspects of the VR mini-games need improvements, according to users' perceptions. This study contributes to the knowledge in terms of the affordances of VR in education research and provides relevant insights that can shape future studies, for example, the recent hype of metaverse in education.},
    author = {Amos Sunday Oyelere and Friday Joseph Agbo and Solomon Sunday Oyelere},
    doi = {https://doi.org/10.1016/j.cexr.2023.100016},
    issn = {2949-6780},
    journal = {Computers & Education: X Reality},
    keywords = {Virtual reality, Metaverse, Game-based learning, Computational thinking, Head mounted display, Higher education},
    pages = {100016},
    title = {Formative evaluation of immersive virtual reality expedition mini-games to facilitate computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S2949678023000107},
    volume = {2},
    year = {2023}
}

@article{OZMUTLU2021100833,
    abstract = {Although there are different definitions for computational thinking in the literature, it is possible to define it mainly as problem solving, designing and interpreting new systems by thinking like a computer. According to Wing (2006), computational thinking is a way of designing a system and understanding human behaviors by focusing on the basic concepts of the computer sciences. The recent focus on computational thinking as a key 21 st century skill for all students has led to a number of curriculum initiatives to embed it in K-12 classrooms and to introduce computing ideas to students early during their schooling years. The present study aims to explore the effects of a short, intensive coding and robotics training on the computational thinking skill self-efficacy of middle school students. 24 fifth graders participated in the study and data were collected by means of the Computational Thinking Self-efficacy scale (CTS) and one open-ended question. Analyses of the pre, post and delayed tests revealed significant differences between the pre and post-tests.},
    author = {Meltem Özmutlu and Derin Atay and Barış Erdoğan},
    doi = {https://doi.org/10.1016/j.tsc.2021.100833},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Algorithm, Programming},
    pages = {100833},
    title = {Collaboration and engagement based coding training to enhance children’s computational thinking self-efficacy},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187121000481},
    volume = {40},
    year = {2021}
}

@incollection{PEREZ2023312,
    abstract = {Teacher preparation programs currently struggle to (a) address the challenges preparing students to use computing principles, and (b) do so in ways that apply a critical lens toward societal inequities. In this paper, we describe our (1) integrated STEM and computational thinking (CT) teacher preparation program; (2) response to barriers educators face in preparing students to critically use computing principles; and (3) examples of the pedagogical practices teacher candidates developed through the program. We contribute an approach to preparing and empowering educators to support students understanding and use of CT as a lens for advocating for social justice in their lives.},
    address = {Oxford},
    author = {Leticia Perez and Heather F. Clark and Roxana Hadad and Imelda Nava and Maureen Giannotti},
    booktitle = {International Encyclopedia of Education (Fourth Edition)},
    doi = {https://doi.org/10.1016/B978-0-12-818630-5.13007-6},
    edition = {Fourth Edition},
    editor = {Robert J Tierney and Fazal Rizvi and Kadriye Ercikan},
    isbn = {978-0-12-818629-9},
    keywords = {Computational thinking, Computer science, Pre-service programs, Professional development, Mathematics education, Science education, STEM education},
    pages = {312-320},
    publisher = {Elsevier},
    title = {CT for equity: situating computational thinking, computer science, and social justice in a math and science teacher education program},
    url = {https://www.sciencedirect.com/science/article/pii/B9780128186305130076},
    year = {2023}
}

@article{PIATTI2022100166,
    abstract = {Computational thinking is a fundamental competence that is being introduced in K-12 and succeeding curricula worldwide. Despite this huge effort, many computational thinking models in the literature do not explicitly take into consideration the pupils’ age and the developmental nature of computational thinking skills. Furthermore, many existing computational thinking models are focused on the internal thinking processes of the individuals, failing to explicitly consider the situated nature, in terms of social context and artefactual environment, that usually characterise tasks that require computational thinking to be solved. In this paper, we present a framework for the design, realisation, analysis, and assessment of computational thinking activities, called CT-cube. The CT-cube allows to extend existing computational thinking models to consider the life-long development of computational thinking skills in individuals, from childhood to adult age, and to take into consideration the situated nature of computational thinking activities. We use the CT-cube to design an unplugged task, called Cross Array Task (CAT), allowing to assess the algorithmic skills of K-12 pupils and we show how the CT-cube can be used in this case to illustrate the development of this competence along the entire compulsory school path, considering a sample of 109 pupil aged 3 to 16 in Switzerland.},
    author = {Alberto Piatti and Giorgia Adorni and Laila El-Hamamsy and Lucio Negrini and Dorit Assaf and Luca Gambardella and Francesco Mondada},
    doi = {https://doi.org/10.1016/j.chbr.2021.100166},
    issn = {2451-9588},
    journal = {Computers in Human Behavior Reports},
    keywords = {Computational thinking, Algorithmic skills development, Assessment, K-12, Situated cognition},
    pages = {100166},
    title = {The CT-cube: A framework for the design and the assessment of computational thinking activities},
    url = {https://www.sciencedirect.com/science/article/pii/S2451958821001147},
    volume = {5},
    year = {2022}
}

@article{RAHIMI2025100607,
    abstract = {Many studies have demonstrated that Virtual Exchange (VE) for teaching languages can have a positive effect on learners' intercultural awareness or achievements. However, during this century, the teaching process has shifted from teaching with technology to solving problems with it. In this regard, pedagogical experts in Science, Technology, Engineering, and Mathematics (STEM) have developed programming and robotics based on Computational Thinking skills (CTs), which have been regarded as the core of 21st-century skills. In the field of CALL, this skill has received very little attention. Accordingly, we have attempted to switch the process and outcome of language learning in VE. Thus, we developed the conceptual framework that integrated CTsCALL and Individual-technology-task-environment Fit (ITTEF). Having designed our VE tasks based on CTsCALL, we provided the opportunity for 92 Spanish language learners in our project to exchange language and culture with Cypriot and Irish students and solve VE tasks based on CTsCALL. The result of the symmetric phase of the study validated the five-dimensional structure of CTsCALL and the four-dimensional structures of ITTEF in VE and CALL. It also revealed that language learners, who focused on the key information rather than the details while solving language tasks, as well as recognizing the pattern of task solving and applying them to other tasks, found VE, and CTsCALL to be aligned with their current capabilities, learning environment, and problem-solving skills that mediated their intention to learn and exchange information in this context in the future. Furthermore, the asymmetrical part of the study revealed that sixteen solutions are available to shape language learners' continued intention to use VE by combining the components of CTsCALL and ITTEF. Thus, the study developed the CTsCALL questionnaire and its theory into CALL together with the Council of Europe's Common European Framework of Reference for Languages and recommended that CALL researchers and educators take a broader view of VE, as well as continuing to validate CTsCALL in other CALL disciplines to show that this skill belongs to CALL as well.},
    author = {Amir Reza Rahimi and Ana Sevilla-Pavón},
    doi = {https://doi.org/10.1016/j.chbr.2025.100607},
    issn = {2451-9588},
    journal = {Computers in Human Behavior Reports},
    keywords = {21st-century digital skills, 21st-century digital competence, English language learning, Technology acceptance models, English language teaching, Applied linguistic, Task-technology fit},
    pages = {100607},
    title = {Scaling up computational thinking skills in computer-assisted language learning (CTsCALL) and its fitness with language learners’ intentions to use virtual exchange: A bi-symmetric approach},
    url = {https://www.sciencedirect.com/science/article/pii/S2451958825000223},
    volume = {17},
    year = {2025}
}

@article{RICH2021104196,
    abstract = {Interest in coding education has exploded in the past five years, especially in elementary and early secondary education. Teachers who are largely new to coding are expected to guide entire student bodies through the fundamentals of coding and computational thinking. But little is known about which coding and computational thinking (CT) concepts teachers feel most comfortable with and which concepts they struggle with. This study describes 127 elementary coding teachers’ changes in their beliefs about teaching coding and CT as they participated in year-long continuous professional development. Novice elementary coding teachers demonstrated most growth in their self-efficacy for teaching sequences, algorithms and loops. They were less secure in their knowledge of conditionals, variables, and functions. For computational thinking, teachers were most confident in their ability to identify patterns, think algorithmically, understand logic, and evaluate outcomes, showing less growth with decomposition and abstraction.},
    author = {Peter J. Rich and Stacie L. Mason and Jared O'Leary},
    doi = {https://doi.org/10.1016/j.compedu.2021.104196},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Professional development, Computational thinking, Coding, Self-efficacy, Elementary education},
    pages = {104196},
    title = {Measuring the effect of continuous professional development on elementary teachers’ self-efficacy to teach coding and computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131521000737},
    volume = {168},
    year = {2021}
}

@article{ROBLEDOCASTRO2023100563,
    abstract = {Computational thinking refers to a series of cognitive processes involved in solving problems through computational systems. A growing body of studies has managed to demonstrate the correlation between computational thinking and different cognitive domains. In recent decades, multiple studies have taken place that seek to evaluate the effect of computational thinking on higher-order cognitive processes. The current study aims to contribute to this discussion by analyzing the effect of an intervention program in computational thinking on the executive functions of school-age children. In this experimental study, 30 children aged 10 and 11 were randomly assigned to an experimental group and an active control group. The instruments to collect the data were 15 tests of the neuropsychological battery of executive functions and frontal lobes BANFE-2, which were applied to both groups before and after the intervention. The experimental group participated in an 8-week computational thinking intervention during which its participants enrolled in plugged and unplugged activities and carried out block programming language twice a week. The results showed that the intervention had significant effects on executive functions associated with the anterior prefrontal cortex and the dorsolateral cortex, but not those related to the orbitofrontal area.},
    author = {Carolina Robledo-Castro and Luis Fernando Castillo-Ossa and Christian Hederich-Martínez},
    doi = {https://doi.org/10.1016/j.ijcci.2022.100563},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {Computational thinking, Executive functions, Cognitive development, Experimental study, Childhood},
    pages = {100563},
    title = {Effects of a computational thinking intervention program on executive functions in children aged 10 to 11},
    url = {https://www.sciencedirect.com/science/article/pii/S2212868922000812},
    volume = {35},
    year = {2023}
}

@article{ROBLEDOCASTRO2023105738,
    abstract = {The healthy development of cognitive functions, including executive functions, has been shown to depend mainly on the experiences and learning opportunities of people, especially during childhood. Over the past few years, researchers have been studying the impacts of diverse types of interventions on children’s cognitive development in which computational thinking programs are a recent field. This pilot study evaluated the effect of computational thinking training based on the “Programming for Children” program on the executive functions of children aged 10 and 11 years: working memory, inhibition, and planning (N = 30). The results showed that children in the experimental group improved on tests of visuospatial working memory, cognitive inhibition, and sequential planning compared with the control group. However, tests of verbal working memory, memory strategy, and visual spatial planning did not show any observed changes. Although this was an exploratory study, and its findings should be interpreted cautiously due to the small sample size, the findings support the relevance and feasibility of conducting similar larger studies with larger samples.},
    author = {Carolina Robledo-Castro and Christian Hederich-Martínez and Luis F. Castillo-Ossa},
    doi = {https://doi.org/10.1016/j.jecp.2023.105738},
    issn = {0022-0965},
    journal = {Journal of Experimental Child Psychology},
    keywords = {Cognitive stimulation, Cognitive training, Cognitive development, Executive functions, Computational thinking, Coding},
    pages = {105738},
    title = {Cognitive stimulation of executive functions through computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S0022096523001145},
    volume = {235},
    year = {2023}
}

@article{ROBLEDOCASTRO2025103145,
    abstract = {The research aims to evaluate the effect of a robotics-based computational thinking program on executive functions and visuospatial skills in preschool children. Additionally, the study will explore the relationship between these three variables and early experiences with toys. The study will be a cluster-randomized controlled trial with pre- and post-intervention measures. Participants will be preschool children aged 5 to 6 years from both public and private institutions. The intervention will involve a new educational robotics device called ROVERSA and will consist of eight sessions distributed over four weeks, with the experimental group placed on a waitlist. To assess executive functions and visuospatial skills, standardized and validated neuropsychological measures will be used, including the Flanker task, the NIH Toolbox Card Sorting Test, the Corsi Block Test, the NEPSY-II Mental Rotation Test, the Pyramid of Mexico from the ENI-2 battery, and the Computational Thinking Test (CTt). Data analysis will begin with a hypothesis tested through ANOVA-MR, and linear regressions will be implemented to assess the relationship between variables. It is expected that the results will contribute to the discussion on teaching computational thinking and educational robotics as early learning experiences and their impact on the cognitive development of children.},
    author = {Carolina Robledo-Castro and Camilo {Vieira Mejía} and Jennifer Chiu},
    doi = {https://doi.org/10.1016/j.mex.2024.103145},
    issn = {2215-0161},
    journal = {MethodsX},
    keywords = {Computational thinking, Executive functions, Early childhood, Visuospatial skills},
    pages = {103145},
    title = {Exploring computational thinking, executive functions, visuospatial skills and experiences with toys in early childhood: Protocol for a controlled trial},
    url = {https://www.sciencedirect.com/science/article/pii/S221501612400596X},
    volume = {14},
    year = {2025}
}

@article{ROSLI2024110463,
    abstract = {In light of the increasing importance digital economy, the significance of computational thinking has grown exponentially, becoming imperative in both workplace and academic settings such as universities. This article addresses the critical need to comprehend the factors influencing the acceptance of computational thinking. The dataset introduces an extensive questionnaire comprising five constructs and 25 items, rooted in the extended Technology Acceptance Model. Notably, the model incorporates facilitating conditions and subjective norm, providing a comprehensive framework for understanding acceptance. Data collection involved 132 undergraduate university students sampled through purposive sampling, specifically targeting courses with a focus on computational thinking. The resulting dataset serves as a valuable resource for future research, offering detailed insights into the factors determining the acceptance of technology in educational contexts beyond mere thinking skills. Given the scarcity of research on technology acceptance in developing nations, this dataset holds particular significance, serving as a foundation for potential cross-cultural comparisons. The dataset contributes to the field by presenting a robust acceptance model, explaining 74.2 per cent of the variance in behavioural intention, 60.2 per cent in perceived usefulness, and 56.1 per cent in perceived ease of use. This high explanatory power positions the dataset as a superior resource for replication, benchmarking, and broader applicability in diverse contexts, thereby enhancing the understanding of computational thinking acceptance across different populations and settings. This dataset stands among the pioneering efforts to assess the novel covariance-based structural equation model algorithm within SmartPLS 4, presenting a valuable resource for future research employing the same mechanism.},
    author = {Mohd Shafie Rosli and Muhammad Fairuz Nizam Awalludin and Cheong Tau Han and Nor Shela Saleh and Harrinni Md Noor},
    doi = {https://doi.org/10.1016/j.dib.2024.110463},
    issn = {2352-3409},
    journal = {Data in Brief},
    keywords = {Computational thinking, Technology acceptance model, Subjective norm, Facilitating condition, University students},
    pages = {110463},
    title = {Unlocking insights: A comprehensive dataset analysis on the acceptance of computational thinking skills among undergraduate university students through the lens of extended technology acceptance model, HTMT, covariance-based SEM, and SmartPLS},
    url = {https://www.sciencedirect.com/science/article/pii/S2352340924004323},
    volume = {54},
    year = {2024}
}

@article{SAAD2022101802,
    abstract = {Project-Based Learning (PBL) and Computational Thinking (CT), a teaching strategy and a problem-solving method, respectively, have been widely used in teaching and learning because of their educational advantages for students and teachers. However, studies of their integration into the teaching and learning process have been scarce, resulting in a lack of guidance for educators to implement such an approach that apply constructivism learning theory. This study aims to systematically review and identify appropriate frameworks, models, techniques and tools that could guide the successful implementation of PBL-CT. This study examined relevant articles published from 2017 to 2021 to highlight the gaps in the PBL-CT execution and map their backgrounds into a coherent taxonomy that could help guide the directions of future studies. As revealed, none of such articles explicitly explain any suitable PBL-CT frameworks or models. The study identified several common elements for the PBL-CT framework formulation, indicating scaffolding and inquiry are the most commonly applied techniques, with visual tools dominating the PBL-CT implementation. Most articles involved computing, followed by STEM, with a few originating from non-STEM fields. Several important implications could help educators develop an effective PBL-CT course design and provide some guidelines for future research. An effective PBL-CT integration enhances teaching and learning besides improving students' computational thinking skills. Thinking skills are critical 21st-century skills needed for students' success.},
    author = {Aslina Saad and Suhaila Zainudin},
    doi = {https://doi.org/10.1016/j.lmot.2022.101802},
    issn = {0023-9690},
    journal = {Learning and Motivation},
    keywords = {Computational Thinking, Project-Based Learning, PBL-CT, Teaching and learning strategies},
    pages = {101802},
    title = {A review of Project-Based Learning (PBL) and Computational Thinking (CT) in teaching and learning},
    url = {https://www.sciencedirect.com/science/article/pii/S0023969022000224},
    volume = {78},
    year = {2022}
}

@article{SAHIN2024101439,
    abstract = {This study examined the impact of a 10-month STEM professional development (PD) program on 25 teachers working with gifted students. The program aimed to enhance pedagogical knowledge and competencies. Findings indicated significant positive improvements in teachers' STEM self-efficacy, computational thinking, and entrepreneurship skills. The PD program also had a direct positive influence on the quality of lesson plans. The study suggests that effective PD design should incorporate scientific inquiry, engineering design processes, computational thinking, entrepreneurship skills, and the development of teachers' self-efficacy for successful implementation of PD outcomes in STEM education.},
    author = {Erhan Şahin and Uğur Sarı and Ömer Faruk Şen},
    doi = {https://doi.org/10.1016/j.tsc.2023.101439},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {STEM PD, Gifted education, STEM self-efficacy, Computational thinking, Entrepreneurship},
    pages = {101439},
    title = {STEM professional development program for gifted education teachers: STEM lesson plan design competence, self-efficacy, computational thinking and entrepreneurial skills},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187123002079},
    volume = {51},
    year = {2024}
}

@article{SAIG2024100703,
    abstract = {Computational Thinking (CT), the conceptual foundations required for solving complex problems effectively and efficiently, is an imperative skill for today's learners, across disciplines and across ages. As for its importance in the wide network of digital literacies, CT has been implemented in various educational contexts, however mostly via digital artifacts, specifically in programming-related activities. This approach does not fulfill the potential of such integration for promoting learning. In this paper, we argue that digital literacies should not be bound to the digital realm, and present a novel approach to fully integrate CT into learning and teaching by the development of CT-infused “unplugged” pedagogical tools that are fully embedded in the subject matter. We demonstrate the advantages to student learning of these tools in two case studies from K-12 mathematics education: 1) An assistive tool for function investigation in high-school calculus – in this case, we point out to how CT skills that were implemented in the tool promoted students' problem solving; 2) A teaching unit for pattern sequences in elementary school – in this case, we show how students in the CT research group outperformed students in the other groups, and how they implemented CT to solve pattern sequence problems effectively and efficiently. We highlight that besides enhancing learning, this approach can help address the important issue of equity in education, and suggest ways to promote it via dedicated professional development.},
    author = {Renato Saig and Arnon Hershkovitz},
    doi = {https://doi.org/10.1016/j.ijcci.2024.100703},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {Computational thinking, Unplugged, Pedagogical tools, Mathematics education},
    pages = {100703},
    title = {Expanding digital literacies beyond the digital: Infusing computational thinking into unplugged pedagogical tools - Two case studies from mathematics education},
    url = {https://www.sciencedirect.com/science/article/pii/S2212868924000722},
    volume = {42},
    year = {2024}
}

@article{SCHLAUCH2025100704,
    abstract = {This paper presents an investigation that compares and analyzes the interactions of three groups of pre-and-primary school children with three different storytelling systems. We identify emerging patterns through which they engaged in what we refer to as narrative computational thinking. The latter describes broadened aspects of narrative literacy practices that are linked to computational thinking. By applying a multicase study approach and through various vignettes, we illustrate how children applied computational thinking to understand and influence the narrative possibilities offered by the different tools. Our results illustrate circumstances under which digital storytelling activities provide a favorable basis for narrative computational thinking, and that when computational thinking functions as a scaffold for story creation, it encourages a blend of creativity and computational thinking, providing a compelling approach to introducing emerging digital literacies to young children in a narrative context.},
    author = {Michael Schlauch and Cristina Sylla and Maitê Gil},
    doi = {https://doi.org/10.1016/j.ijcci.2024.100704},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {Narrative computational thinking, Interactive digital storytelling, Participatory design, Emerging literacies},
    pages = {100704},
    title = {More than words: Conceptualizing narrative computational thinking based on a multicase study},
    url = {https://www.sciencedirect.com/science/article/pii/S2212868924000734},
    volume = {43},
    year = {2025}
}

@article{SEN2021100931,
    abstract = {In this study, it is aimed to identify the computational thinking skills used by gifted and talented students in integrated STEM activities based on the EDP. The case study design, a qualitative research method, is employed in the study. The participants consist of gifted and talented students attending the Science and Arts Center. Integrated STEM activities based on the EDP were conducted over the course of ten weeks and among these activities, robotic and 3D modeling-based robot construction activities using Lego sets are addressed in the present study. The STEM activity booklet, researchers' fieldnotes, and teaching process video recordings were used as data collection tools in the study. Data that was collected was analyzed through content analysis. It was seen that gifted and talented students participating in integrated STEM activities based on the EDP make active use of critical thinking skills while providing explanations, making associations, questioning information, giving justifications, solving problems, thinking creatively, making generalizations, and attempting to convince others; as for the instances of defining problems, creating solutions, and evaluating the effectiveness of the solution, the students were observed to actively use their problem-solving skills. The detailed account provided by the study on the way robotic and 3D robot modeling activities improve the computational thinking skills of gifted and talented students contributes to the required educational support and to the existing body of literature.},
    author = {Ceylan Sen and Zeynep Sonay Ay and Seyit Ahmet Kiray},
    doi = {https://doi.org/10.1016/j.tsc.2021.100931},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking skills, Engineering design process, Integrated STEM, Gifted and talented students},
    pages = {100931},
    title = {Computational thinking skills of gifted and talented students in integrated STEM activities based on the engineering design process: The case of robotics and 3D robot modeling},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187121001462},
    volume = {42},
    year = {2021}
}

@article{SILVIS2022100491,
    abstract = {Computational thinking (CT) is receiving growing attention in educational contexts, where robot coding toys are becoming a widely available means of teaching and learning early computing. As the field of child–computer interaction continues to define what it means for young children to think computationally, much is unknown about the affective dimensions of children’s interactions with computers, for example how children care for materials like coding robots and how they establish social responsibility in computational environments. This paper examines these questions in the context of an early childhood coding curriculum designed to support CT in Kindergarten. Children’s talk and interactions with robots provide insight into how they were learning to care for and maintain robots when they malfunctioned. Drawing together feminist perspectives on computing, constructionism, and care, we develop a notion of a technological ethic of care and locate this in children’s early coding experiences. Through critical discourse analysis, we present two cases where groups of children interacted with each other, their teachers, and a robot called Cubetto, establishing forms of responsibility for technology. We argue that an ethic of care must be part of computational discourses in an era of climate change, where caring for technologies and keeping them in working order is key to sustainable socio-ecological relations.},
    author = {Deborah Silvis and Jody Clarke-Midura and Jessica F. Shumway and Victor R. Lee and Selendra Mullen},
    doi = {https://doi.org/10.1016/j.ijcci.2022.100491},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {Educational robotics, Child–robot interaction, Ethic of care, Classroom learning, Relationships, Feminist theory},
    pages = {100491},
    title = {Children caring for robots: Expanding computational thinking frameworks to include a technological ethic of care},
    url = {https://www.sciencedirect.com/science/article/pii/S2212868922000241},
    volume = {33},
    year = {2022}
}

@article{SOHR202392,
    abstract = {In this work, we argue for expanding the scope of K-12 computational thinking (CT) integration contexts to include everyday scenarios involving moral reasoning. Epistemic overlap between computational thinking practices and moral reasoning suggest that these contexts are potentially rich sites to see “seeds of CT” in children's reasoning and can provide rich educational pathways for children into CT. Taking a case-study approach, we examine the reasoning of a second-grader, Ollie, on a task involving fair allocation of resources to victims of a natural disaster. Our analysis finds that Ollie's reasoning was rich with seeds of CT (e.g., problem formulation, abstraction, complex-systems thinking) and that empathy served as an important supporting role to the CT. This work has implications for curricular design, suggesting that fairness and resource allocation scenarios with built-in opportunities for empathy might provide rich sandboxes for CT integration.},
    author = {Erin Ronayne Sohr and Ayush Gupta and Andrew Elby and Jennifer Radoff},
    doi = {https://doi.org/10.1016/j.ecresq.2023.05.010},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Computational thinking, Empathy, Case-study, Qualitative analysis, Socio-emotional learning},
    pages = {92-101},
    title = {How a child entangles empathy and computational thinking in reasoning about fairness},
    url = {https://www.sciencedirect.com/science/article/pii/S0885200623000728},
    volume = {65},
    year = {2023}
}

@article{SONG2021106746,
    abstract = {Educational research on predicting learners’ computer programming performance has yielded practical implications that guide task designs in computer education. There have been attempts to investigate learners’ computer programming patterns using high-frequency and automated data collection. This approach can be considered as process-based analysis as opposed to outcome-based analysis (i.e., the use of test or exam scores). In this process-based approach to investigate learners’ computer programming process, we included two critical constructs in our research, self-regulated learning and computational thinking skills. We aimed to identify learners’ computer programming patterns in the context that novice students learn a computer programming language, Python, in an online coding environment. We examined the relationships between the learners’ coding patterns, self-regulated learning, and computational thinking skills. Initially, we adopted a traditional approach with the aggregate data of learners’ computer programming behaviors. We then utilized a computational analytics approach to learner performance, self-regulated learning, and computational thinking skills, with ever-changing computer programming patterns. In our initial approach, the indicators of aggregate computer programming data were not associated with learners' learning performance and computational thinking skills. In the computational analysis approach, many indicators revealed significant differences between the identified patterns regarding computational thinking skills and self-regulated learning. Recommendations about the use of programming log data analysis methods and future scaffolding for computer programming learners are addressed.},
    author = {Donggil Song and Hyeonmi Hong and Eun Young Oh},
    doi = {https://doi.org/10.1016/j.chb.2021.106746},
    issn = {0747-5632},
    journal = {Computers in Human Behavior},
    keywords = {Self-regulated learning, Computational thinking skills, Computer education, Computational analysis, Computer programming},
    pages = {106746},
    title = {Applying computational analysis of novice learners' computer programming patterns to reveal self-regulated learning, computational thinking, and learning performance},
    url = {https://www.sciencedirect.com/science/article/pii/S0747563221000686},
    volume = {120},
    year = {2021}
}

@article{SU2023100122,
    abstract = {Computational thinking education has become an increasingly popular topic among practitioners and researchers. However, rare is known how to effectively teach and learn computational thinking in early childhood education. To address this knowledge gap, this systematic review examined 26 studies on the teaching and learning of computational thinking in early childhood education from 2010 to 2022. The content knowledge, tools, pedagogical design, assessment methods, and learning outcomes were analyzed. Results indicated that, with age-appropriate instructional design, children could develop early concepts and skills of computational thinking, as well as other related skills such as communication, collaboration, and problem solving. Across the studies, we found that most studies used quantitative research methods, with direct assessment and observation being the most. Several challenges were identified: (1) achieving a deeper learning of computational thinking; (2) a lack of valid and reliable computational thinking assessments for children with a wider age range; (3) selecting appropriate learning tools; and (4) designing age-appropriate activities for young learners. Although with these challenges, computational thinking education could bring new learning opportunities and enhance children's computational thinking skills, as well as other non-cognitive skills such as critical thinking, body-material interaction, and hand-eye coordination. This systematic review informs future endeavors in theorizing a digital learning framework that can integrate computational thinking into early childhood education.},
    author = {Jiahong Su and Weipeng Yang},
    doi = {https://doi.org/10.1016/j.caeo.2023.100122},
    issn = {2666-5573},
    journal = {Computers and Education Open},
    keywords = {Teaching/learning strategies, Pedagogical issues, 21st century abilities, Early years education, Teacher professional development},
    pages = {100122},
    title = {A systematic review of integrating computational thinking in early childhood education},
    url = {https://www.sciencedirect.com/science/article/pii/S2666557323000010},
    volume = {4},
    year = {2023}
}

@article{SUHERMAN2024101591,
    abstract = {In the field of education, research has consistently emphasized mathematical creative thinking as a crucial component of 21st-century skills. Thus, this cross-sectional study examines the predictors of such thinking by specifically focusing on the roles of perceived creativity, creative self-efficacy, and computational thinking. The participants consisted of 896 secondary school students (52.9 % female; 47.1 % male) in Indonesia who were asked to complete a series of online questionnaires and tests. For analysis, structural equation modeling was employed, demonstrating satisfactory construct validity and instrument reliability. Based on the results, there was a positive association between computational thinking and mathematical creative thinking. In addition, perceived creativity had a positive impact on mathematical creative thinking, whereas creative self-efficacy showed a negative association. As for the empirical model, it revealed that computational thinking plays a mediating role, connecting perceived creativity and creative self-efficacy to mathematical creative thinking. The findings suggest that incorporating these skills and related variables into the mathematics curriculums in schools is essential for preparing students for success in the 21st century.},
    author = {Suherman Suherman and Tibor Vidákovich},
    doi = {https://doi.org/10.1016/j.tsc.2024.101591},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Creative self-efficacy, Mathematical creative thinking, Perceived creativity, Structural equation modeling},
    pages = {101591},
    title = {Role of creative self-efficacy and perceived creativity as predictors of mathematical creative thinking: Mediating role of computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187124001299},
    volume = {53},
    year = {2024}
}

@article{SUN2024101542,
    abstract = {Recently, the development of computational thinking (CT) skills has become widespread in the whole world. There is a consensus to develop students’ CT skills through unplugged and plugged-in programming. However, the choice of programming approaches taught in schools is arbitrary and few studies have compared the effectiveness differences between unplugged and plugged-in programming. This study aimed to explore the differences between unplugged and plugged-in programming in developing CT skills of students in Grades 1-2 students. It also explored the joint effects of students’ gender, programming experience, programming interest, and programming confidence with different programming approaches on CT skills. The quasi-experimental research approach was used to conduct 10 weeks of unplugged, plugged-in, and regular programming activities with 124 Grades 1-2 students. The results found that unplugged programming promoted CT skills more in the early primary grades than plugged-in programming. We found that boys and students with programming experience in unplugged group performed significantly better in CT skills than in plugged-in group. Moreover, the improvement of CT skills of students in unplugged group was positively correlated with the level of their programming interest and programming confidence. However, these were not observed in plugged-in group. The results of this study can provide precise guidance for teaching CT skills to early primary school students and provide references for CT education.},
    author = {Lihui Sun and Junjie Liu and Yunshan Liu},
    doi = {https://doi.org/10.1016/j.tsc.2024.101542},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Primary school students, Unplugged and plugged-in programming, Influential factors},
    pages = {101542},
    title = {Comparative experiment of the effects of unplugged and plugged-in programming on computational thinking in primary school students: A perspective of multiple influential factors},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187124000804},
    volume = {52},
    year = {2024}
}

@article{TSARAVA2022104425,
    abstract = {There is increasing effort to integrate Computational Thinking (CT) curricula across all education levels. Therefore, research on CT assessment has lately progressed towards developing and validating reliable CT assessment tools, which are crucial for evaluating students' potential learning progress and thus the effectiveness of suggested curricular programs. Several CT assessment tools were developed for elementary, high-school, and university students over the last years. Moreover, associations between CT scores and other cognitive abilities were unraveled. However, studies on the topic in primary school level are scarce. Like the general concept of intelligence, CT remains broadly defined as the ability to combine algorithmic operations to form complex solutions in order to solve problems effectively, utilizing concepts of computer science with or without the use of computers. In this study, we aimed at specifying a cognitive definition of CT, focusing on the under-investigated population of primary school children. Since validated assessment tools for this age group were not available, we adapted a validated CT test, which was initially designed for middle school students. In our study participated 192 third and fourth graders. The analyses revealed promising results on the reliability of the adapted CT assessment for primary school students. Moreover, findings indicated CT's positive associations with i. complex numerical abilities, ii. verbal reasoning abilities, and iii. non-verbal visuospatial abilities. Our results indicate similarities but also differences in associations of CT with other cognitive abilities in primary school children compared to other age groups. In summary: i. numerical abilities seem to associate with CT at the primary school level, whereas this seems not the case later on in education, ii. verbal abilities seem to associate with CT both along primary and secondary education levels, and iii. non-verbal reasoning abilities seem to associate with CT from primary education level to the university level and beyond. These differences imply that several basic cognitive abilities support CT abilities and CT development differentially across ages.},
    author = {Katerina Tsarava and Korbinian Moeller and Marcos Román-González and Jessika Golle and Luzia Leifheit and Martin V. Butz and Manuel Ninaus},
    doi = {https://doi.org/10.1016/j.compedu.2021.104425},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {21st century abilities, Elementary education},
    pages = {104425},
    title = {A cognitive definition of computational thinking in primary education},
    url = {https://www.sciencedirect.com/science/article/pii/S036013152100302X},
    volume = {179},
    year = {2022}
}

@article{TUCKERRAYMOND2021104284,
    abstract = {Content area K-12 teachers are increasingly asked to integrate computing and computational thinking into their classrooms, yet they often have little experience with computing. The purpose of this study was to understand how science teachers, new to computing and integrating computational thinking into their classrooms, supported students as computational problem solvers. In the project from which this research was drawn, 8th grade science teachers in three US school districts integrated computer game design into their study of climate systems and climate change. We conducted participant observation, collected teacher implementation logs and interviewed 15 teachers engaged in the three-year design research project, Building Systems from Scratch. Analysis through grounded theory yielded several results related to teachers’ orientations, strategies, and use of resources to create systems of distributed expertise. We identified five major themes: a) releasing responsibility to students, b) co-learning with students, c) encouraging students’ independent problem solving, d) building interdependence among students, and e) providing multiple other resources. Findings are discussed in relation to the literature on integrating computational thinking into content area classrooms.},
    author = {Eli Tucker-Raymond and Michael Cassidy and Gillian Puttick},
    doi = {https://doi.org/10.1016/j.compedu.2021.104284},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Distributed learning environments, Teaching/learning strategies, Elementary education, Pedagogical issues, Applications in subject areas},
    pages = {104284},
    title = {Science teachers can teach computational thinking through distributed expertise},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131521001615},
    volume = {173},
    year = {2021}
}

@article{UNG2022104379,
    abstract = {Malaysia has introduced computational thinking skills as part of a curriculum integration update to meet the global trends in 21st-century education, focusing on empowering digital literacy. Nevertheless, a preliminary investigation revealed an apparent lack of understanding of computational thinking skills in general among teachers. The study explores the feasibility of developing a localized E-learning system to train computational thinking skills among teachers. An E-learning system, termed as myCTGWBL, was developed on the basis of a newly proposed conceptual framework to present computational thinking teaching–learning repertoire to the teachers. The hypothesis is that myCTGWBL would develop teachers' computational thinking and its position in teaching–learning understanding. myCTGWBL relevance was tested through DeLone and McLean's information system and Urbach's collaboration quality construct. To determine the success factors, partial least squares structural equation modeling was used. A total of 369 teachers participated in a two-stage survey. Participants' understanding of computational thinking and perceptions were recorded at the pre- and post-intervention phases. Open-ended questions of the surveys were analyzed using a simple text analysis technique. The closed-ended questions surveys were analyzed using SPSS Statistics 22.0. A significant improvement in teachers' computational thinking teaching–learning repertoire in a relatively short period has been recorded. Teachers also demonstrated increased confidence in the future delivering computational thinking-based lessons. The E-learning conceptual framework has illustrated the predictive power between user intent, user satisfaction, and Computational thinking (CT) knowledge benefits. Results demonstrate that myCTGWBL could be used to guide future planning when establishing CT knowledge acquisition initiatives, particularly among teachers.},
    author = {Ling-Ling Ung and Jane Labadin and Fitri Suraya Mohamad},
    doi = {https://doi.org/10.1016/j.compedu.2021.104379},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Computational thinking, E-Learning, Information system, Teaching and learning, Teachers},
    pages = {104379},
    title = {Computational thinking for teachers: Development of a localised E-learning system},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131521002566},
    volume = {177},
    year = {2022}
}

@article{WANG2023101269,
    abstract = {Computational thinking (CT) is a necessary skill for students. It is as important as the other essential skills such as reading, writing, and arithmetic. However, how to improve students’ CT in robotics is still to be explored. Hence, this study examined the effects of computer supported project-based learning (CSPBL) on students’ CT and learning engagement through comparing students’ CT and engagement in two courses instructed by the same instructor (one instructed with a traditional method, the other instructed with CSPBL). Participants were seventy-nine students from a university in China. Questionnaires, interviews, and project analysis were used to measure students’ CT and learning engagement. The comparative results of self-reports and final projects indicated that the CSPBL enhanced students’ CT. The simulation project training based on the SenseStudy learning platform in CSPBL helped students debug the programming code, optimize the algorithm design, and improve their algorithmic thinking, cooperation, and problem solving during the program error correction. The CSPBL also improved students’ engagement in learning, especially for those with more than one year of programming experience. It was found that the CSPBL was effective in terms of improving students’ CT and engagement in robotics learning. This study provides teachers with practical suggestions to conduct effective robotics instruction.},
    author = {Yang Wang},
    doi = {https://doi.org/10.1016/j.tsc.2023.101269},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Learning engagement, Computer supported project-based learning, Robotics courses},
    pages = {101269},
    title = {The role of computer supported project-based learning in students’ computational thinking and engagement in robotics courses},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187123000391},
    volume = {48},
    year = {2023}
}

@article{WANG2024101528,
    abstract = {Computational thinking (CT) is crucial for students. Robot-supported learning has emerged as a popular approach for CT cultivation. To understand the effects of robot-supported CT cultivation, the current study conducted a meta-analysis to analyze studies from Web of Science, Google Scholar, and Science Direct databases (2012–2022) which screened using keywords ``computational thinking'' and ``robot''. After further screening, 26 peer-reviewed articles were selected. We synthesized the 33 effect sizes to assess the overall effectiveness of robot-supported learning on CT and its sub-dimensions: concepts, practices, and perspectives. Our findings revealed a medium effect of robot-supported learning on students' CT (g = 0.643), a large effect on CT concepts (g = 0.650), a medium effect on CT practices (g = 0.587), and a huge effect on CT perspectives (g = 1.419). We also explored the moderators (i.e., grade level, study duration, culture, learning strategy, and assessment tool) that might influence the effects of robot-supported CT cultivation. Moderator analyses indicated that short-term (less than four weeks) robot-supported learning had a larger effect (g = 0.901) on CT practice than long-term (more than eleven weeks) learning (g = 0.309). This meta-analysis indicates that educators could apply robot-supported learning to cultivate students' CT and concludes with related implications.},
    author = {Yang Wang and Bin Xie},
    doi = {https://doi.org/10.1016/j.tsc.2024.101528},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Meta-analysis, Robot-supported learning, Computational thinking, Concepts, Practices, Perspectives},
    pages = {101528},
    title = {Can robot-supported learning enhance computational thinking?—A meta-analysis},
    url = {https://www.sciencedirect.com/science/article/pii/S187118712400066X},
    volume = {52},
    year = {2024}
}

@article{WANG2024104619,
    abstract = {The integration of computational thinking (CT) to enhance creativity in design students has often been underexplored in design education. While design thinking has traditionally been the cornerstone of university design pedagogy and remains essential, the increasing role of digital tools and artificial intelligence in modern design practices presents new opportunities for innovation. By introducing CT alongside design thinking, students can expand their creative toolkit and engage with emerging technologies more effectively. Although many design students may have limited experience with programming, incorporating accessible, no-code tools can help them confidently embrace computational methods, unlocking new pathways for creative exploration and innovation. This study proposes an alternative approach to improve the motivation of design students by introducing machine learning tools into product design processes. We developed an experimental pedagogy in which 56 industrial design university students learned how to use Waikato Environment for Knowledge Analysis (Weka), a machine learning tool, for three hours of design work a week, for a total of eight weeks. Our covariate analysis of data collected in the pretest and posttest shows that the general learning motivations in the group using Weka are significantly higher than those in the group without Weka. However, no significant differences were found between the two groups in terms of learning strategies, collaboration, or critical thinking. Students using Weka spent more time focusing on model training and tended to improve their algorithmic thinking, and the introduction of Weka appeared to enhance their motivation to learn. On the other hand, these students might have been focusing on working individually at their computers, potentially neglecting communication and collaboration. The findings suggest that teaching machine learning applications without requiring coding has the potential to boost design students' motivation to engage with CT skills, though care must be taken to maintain collaborative practices.},
    author = {Hung-Hsiang Wang and Chun-Han Ariel Wang},
    doi = {https://doi.org/10.1016/j.actpsy.2024.104619},
    issn = {0001-6918},
    journal = {Acta Psychologica},
    keywords = {Computational thinking, Learning motivation, Teaching technology, Industrial design, Machine learning, Student self-assessment},
    pages = {104619},
    title = {Teaching design students machine learning to enhance motivation for learning computational thinking skills},
    url = {https://www.sciencedirect.com/science/article/pii/S0001691824004979},
    volume = {251},
    year = {2024}
}

@article{WANG2025101729,
    abstract = {Previous studies have explored the relationship between computational thinking (CT) and creativity. However, a consensus has yet to be reached since both CT and creativity varied in ideation and assessment. To uncover the cognitive mechanism underlying the interplay between CT and creativity, we conduct a scoping review of 26 empirical studies published in 2006–2024. Our findings suggested that the effects of working memory varied in the interplay between CT and creativity due to differences in age range, neural network activation regions, and measurements. Intellectual abilities, including algorithmic fluency, reasoning ability, and coding ability, showed cognitive transfer effect on CT skills but not necessarily on creativity, suggesting that cognitive abilities embracing more intelligent elements may contribute to the functional connectivity in CT neural networks but only partly overlapped with creativity involved networks. Although executive functions (working memory, cognitive flexibility, and inhibitory control) play a crucial role in both CT and creativity, their contributions to the CT-creativity interplay are still rarely studied. Future research should explore the CT-creativity relationship from the perspective of neuroscience.},
    author = {Jinhua Wang and Weipeng Yang and Michael K. Yeung},
    doi = {https://doi.org/10.1016/j.tsc.2024.101729},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Creativity, Cognitive abilities, Scoping review},
    pages = {101729},
    title = {Cognitive foundations in the interplay between computational thinking and creativity: A scoping review},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187124002700},
    volume = {56},
    year = {2025}
}

@article{WILKIE2024101121,
    abstract = {Children are highly inclined to attend to the properties of numbers, operations and equality when given helpful tools for doing so. Our aim was to investigate early algebraic thinking with the compensation property of equality for subtraction. We provided 22 (9–11-year-old) students with physical blocks for building vertical towers and conducted individual interviews with them as they completed a sequence of 15 tasks involving subtraction as difference using concrete, numeric, and symbolic representations. Relational thinking was evidenced across a range of subtraction calculation skill levels. Those students who could use both indirect addition and take-away strategies flexibly, depending on the size of the numbers involved, were more likely to evidence attention to generality with symbolic equations. The shift to symbolic equations elicited some students’ productive attempts to connect subtraction as difference and subtraction as take way but seemed to hinder others by provoking a return to take away calculations rather than relational thinking strategies.},
    author = {Karina J. Wilkie and Sarah Hopkins},
    doi = {https://doi.org/10.1016/j.jmathb.2023.101121},
    issn = {0732-3123},
    journal = {The Journal of Mathematical Behavior},
    keywords = {Generalized arithmetic, Subtraction, Comparison, Difference, Relational thinking, Primary mathematics},
    pages = {101121},
    title = {Primary students’ relational thinking and computation strategies with concrete-to-symbolic representations of subtraction as difference},
    url = {https://www.sciencedirect.com/science/article/pii/S0732312323000913},
    volume = {73},
    year = {2024}
}

@article{WU2024105012,
    abstract = {Efforts to incorporate computational thinking (CT) into academic courses have been gaining popularity. CT is a problem-solving skill that is crucial in the 21st century. CT may be used to support language education. Courses in English as a foreign language often need an effective writing component that includes writing organization and language use, as demonstrated by the poor writing samples often generated by students of these courses. To address the problems, CT, which is a higher-order mode of problem-solving and knowledge acquisition optimization, was used. The experimental group was instructed using the CT teaching model based on CT's essential components (decomposition, generalization, abstraction, algorithm, and evaluation), whereas the control group was taught using the conventional method. In total, 58 undergraduate students divided into two groups participated in this study. A combination of writing, CT skills, surveys, and interviews were used to collect data according to an experimental design. The collected quantitative data were analyzed through analysis of covariance and structural equation modeling, and the MAXQDA 2022software was used to analyze the collected qualitative data. The results of this study indicate that incorporating CT into an English writing course enhances the writing and higher-order thinking skills of students. The CT concepts helps students develop critical thinking skills by evaluating the text and identifying potential issues or improvements. Additionally, it allows students to use their skills to create unique writing solutions, which can boost English writing creativity.},
    author = {Ting-Ting Wu and Lusia Maryani Silitonga and Astrid Tiara Murti},
    doi = {https://doi.org/10.1016/j.compedu.2024.105012},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {21-century abilities, Adult learning, Improving classroom teaching, Teaching/learning strategies},
    pages = {105012},
    title = {Enhancing English writing and higher-order thinking skills through computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131524000265},
    volume = {213},
    year = {2024}
}

@article{XU2022101041,
    abstract = {Computational thinking (CT) is an important and essential skill for human beings to master in the 21st century. Although CT has received wide attention since this concept was proposed, the current theoretical models have not well defined the complex relations between CT and other cognitive abilities for young children. To provide insight into this gap, the current study proposed a model in which we hypothesized that CT was significantly related to arithmetic fluency that is viewed as an important domain of mathematics. Additionally, arithmetic fluency was predicted to mediate the relations of CT to other cognitive abilities, including reasoning and creativity. This study tested such direct and indirect relations in children aged 5–6 years. Consistent with previous studies on older age groups, the results showed that CT and arithmetic fluency were significantly related to each other and both were significantly related to reasoning ability and creative thinking as well. Moreover, this study, for the first time, indicated that arithmetic fluency totally mediated the relation between CT and reasoning ability, suggesting that these concepts share conceptual commonalities, such as the cognitive processes related to mathematics or/and abstraction; in contrast, arithmetic fluency did not mediate the relation between CT and creative thinking, suggesting that gaining CT skill may exert direct positive effect on the development of creativity. Therefore, despite the root in computer science, CT is associated with many cognitive and learning abilities in other domains, supporting the importance of including CT into early school education.},
    author = {Weiqi Xu and Fengji Geng and Lin Wang},
    doi = {https://doi.org/10.1016/j.tsc.2022.101041},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Arithmetic fluency, Reasoning ability, Creative thinking, Mediation effect},
    pages = {101041},
    title = {Relations of computational thinking to reasoning ability and creative thinking in young children: Mediating role of arithmetic fluency},
    url = {https://www.sciencedirect.com/science/article/pii/S187118712200044X},
    volume = {44},
    year = {2022}
}

@article{YANG2023101218,
    abstract = {Computational thinking (CT) has received worldwide attention due to its alignment with developing 21st century skills such as creativity, problem-solving, and digital competence. With the increasing provision of programming tools such as robotic toys and tablet apps in the sector of early childhood education (ECE), many ECE researchers and practitioners tend to link CT to programming. However, children are reluctant to sustain their interests in programming activities, and may be further demotivated by debugging failures. This multi-group quasi-experimental study aimed to evaluate the effects of a story-inspired approach in bridging the gap between programming and CT for preschool children. Building on previous literature suggesting storytelling as a powerful, culturally responsive pedagogy, 5-year-old children (N=108) were involved in nine weeks of CT learning via one of the three conditions: Story-Inspired Robot Programming (SIRP), Story-Inspired Tablet Programming (SITP), and unplugged CT education. Results revealed that children who participated in the SIRP and SITP conditions showed improved CT scores, relative to unplugged CT education, even after controlling for baseline CT scores. No gender or family socioeconomic effects were found to influence the benefits of story-inspired programming interventions. These findings suggest that storytelling as a culturally responsive approach, whether using robots or tablets as a programming tool, can provide young children with more inclusive and sustainable CT learning experiences.},
    author = {Weipeng Yang and Davy Tsz Kit Ng and Jiahong Su},
    doi = {https://doi.org/10.1016/j.tsc.2022.101218},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Early childhood education, Story-inspired programming, Culturally responsive teaching, Computational thinking, Equity},
    pages = {101218},
    title = {The impact of story-inspired programming on preschool children's computational thinking: A multi-group experiment},
    url = {https://www.sciencedirect.com/science/article/pii/S187118712200219X},
    volume = {47},
    year = {2023}
}

@article{YANG2023324,
    abstract = {Computing education has progressively entered into children's early years. Due to a proliferation of computing education programs and coding tools designed for young children, research on the relationships between computational thinking (CT) and other domains of learning and development is highly warranted. Yet, there is little empirical evidence that shows the relationship between CT and children's overall cognitive functioning. As such, this study explored the relationships between Chinese children's CT and their sequencing ability and self-regulation in early childhood. One hundred and one Chinese young children (Ngirl = 52 and Nboy = 49; Mage = 5.25, SD = 0.73) were recruited and evaluated with three reliable instruments. Hierarchical regression analyses indicated that: (1) CT positively predicted sequencing ability (β = 0.27, p < .05) even after controlling for relevant demographic covariates such as age, gender, and family socioeconomic status; (2) CT positively predicted self-regulation (β = 0.47, p < .001) after controlling for demographic covariates. Our findings suggest that CT may be a domain-general ability that is based on cognitive foundations that extend beyond the realm of computing.},
    author = {Weipeng Yang and Hongyu Gao and Yunxiao Jiang and Hui Li},
    doi = {https://doi.org/10.1016/j.ecresq.2023.04.006},
    issn = {0885-2006},
    journal = {Early Childhood Research Quarterly},
    keywords = {Computational thinking, Sequencing ability, Self-regulation, Cognitive functions, Early childhood education},
    pages = {324-330},
    title = {Beyond computing: Computational thinking is associated with sequencing ability and self-regulation among Chinese young children},
    url = {https://www.sciencedirect.com/science/article/pii/S0885200623000492},
    volume = {64},
    year = {2023}
}

@article{YANG2024104962,
    abstract = {Computational thinking is widely recognized as an essential skill for adapting to the current era, with programming learning being the most effective means to develop it. It is recommended that computational thinking and learning programming be introduced as early as elementary school. However, elementary school students often possess limited prior knowledge of programming, posing challenges in their learning process. The graphic organizers (GOs) may serve as a bridge between students’ existing knowledge and new learning, facilitating a deeper processing of the overall information and thereby enhancing the learning process. This can be particularly advantageous for early-stage learners when grappling with difficult subjects. Consequently, this study employed GOs to assist elementary school students in their computational thinking and programming learning, employing a quasi-experiment design to evaluate their effectiveness. The results showed that although all students demonstrated awareness of applying computational thinking to solve problems, those exposed to GO-based instruction exhibited higher levels of computational thinking, programming skills, and flow experiences.},
    author = {Tzu-Chi Yang and Zhi-Shen Lin},
    doi = {https://doi.org/10.1016/j.compedu.2023.104962},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Elementary education, 21st century abilities, Teaching/learning strategies, Computational thinking, Graphic organizer},
    pages = {104962},
    title = {Enhancing elementary school students' computational thinking and programming learning with graphic organizers},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131523002397},
    volume = {209},
    year = {2024}
}

@article{YANG2025101752,
    abstract = {Computational thinking (CT) is an essential skill students need if they are to adapt to the rise of digital society, and the evaluation of CT is crucial for enhancing students’ CT. However, the current evaluation of CT is based on a summative paradigm and ignores real CT performance during the assessment process. This study thus used a multimodal cognitive diagnostic model (H-MCDM) of students’ CT based on multimodal data in situational tasks, to achieve precise evaluation and explore the current mastery status of students’ CT and their cognitive and behavioral characteristics. The research results indicate that: 1) students’ CT was at a moderately high level and indicated a good grasp of the CT components of problem decomposition and algorithm design, but students had not yet mastered problem abstraction, 2) a total of six different CT latent patterns were discerned in the overall student results, 3) individual students who shared the same CT latent patterns could differ in their cognitive and behavioral characteristics, while those with different CT latent patterns could share similar characteristics. This study showed that it is possible to capture the degree of students’ mastery of CT and their cognitive and behavioral differences with the same or different CT latent patterns at a granular level, providing a basis for developing individualized strategies to enhance students’ CT.},
    author = {Sa Yang and Sha Zhu and Wei Qin},
    doi = {https://doi.org/10.1016/j.tsc.2025.101752},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Multimodal cognitive diagnostic assessment, Situational task, Computational thinking, Latent pattern, Cognitive and behavioral characteristics},
    pages = {101752},
    title = {Enhancing computational thinking assessment: A multimodal cognitive diagnostic approach},
    url = {https://www.sciencedirect.com/science/article/pii/S187118712500001X},
    volume = {56},
    year = {2025}
}

@article{YANG2025102041,
    abstract = {Background
and Context: Computer programming is increasingly being taught to young children worldwide. Quality programming curricula are needed to enable students to explore computer science concepts and develop a positive attitude towards programming. However, few studies have been conducted on the available curricula for young learners.
Objective
This study aims to provide an evidence-based, public, and free computer science curriculum for early childhood education by investigating the efficacy of the CAL-ScratchJr curriculum, among second graders.
Method
A cluster-randomized controlled trial involving 11 schools and 21 second-grade classrooms was conducted to examine the impact of the 24-lesson curriculum on students’ coding proficiency and computational thinking.
Findings
The results indicated that the CAL-ScratchJr curriculum intervention had a medium positive effect on second graders’ coding skills, but no significant impact on computational thinking.
Implications
Results caution against incorporating disconnected abstract computational thinking practices in education. The features of the curriculum were discussed.},
    author = {Zhanxia Yang and Jessica Blake-West and Dandan Yang and Marina Bers},
    doi = {https://doi.org/10.1016/j.learninstruc.2024.102041},
    issn = {0959-4752},
    journal = {Learning and Instruction},
    keywords = {Computer science, ScratchJr, Early elementary education, Computational thinking, Evidence-based curriculum},
    pages = {102041},
    title = {The impact of a block-based visual programming curriculum: Untangling coding skills and computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S0959475224001683},
    volume = {95},
    year = {2025}
}

@article{YANG2025105282,
    abstract = {Computational thinking has been promoted as an impactful 21st-century skillset that can be transferred to many other disciplines and problem scenarios. With the proliferation of age-appropriate coding platforms for young children, computational thinking has become increasingly popular in early childhood settings. However, there is a lack of research on introducing coding and computational thinking to teacher training in early childhood education. To empower early childhood teachers in the digital society, this study introduced 17 early childhood teachers to robot programming and computational thinking through the ‘CT4ECE’ professional development program, which includes three phases: Learn, Practice, and Reflect & Improve. Results of pre- and post-intervention surveys revealed that the CT4ECE program significantly enhanced teachers’ robotics and pedagogical knowledge, as well as their attitudes towards computational thinking, especially their interest in and their view of using computational thinking in classroom practice. Post-intervention interviews indicated that participation in CT4ECE helped educators gain a basic understanding of both coding robots and computational thinking suitable for young children due to a structured change process for teachers’ professional learning. This study establishes a strong foundation for enhancing and expanding the CT4ECE program, ultimately equipping teachers and children with the necessary skillsets to thrive in the digital future.},
    author = {Weipeng Yang},
    doi = {https://doi.org/10.1016/j.compedu.2025.105282},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {early childhood teachers, computational thinking, robotics, three-phase professional development, CT4ECE},
    pages = {105282},
    title = {A Three-Phase Professional Development Approach to Improving Robotics Pedagogical Knowledge and Computational Thinking Attitude of Early Childhood Teachers},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131525000508},
    year = {2025}
}

@article{YENI2024100696,
    abstract = {The integration of computational thinking (CT) into K-12 education offers substantial potential to improve digital literacy and deepen students’ understanding across various subject areas. By embedding computational procedures and solution-oriented approaches into traditional curricula, students can develop essential skills that are critical for thriving in an increasingly digital world. However, the effective integration of CT into subject-specific learning poses challenges for educators, largely due to a lack of training and experience in implementing interdisciplinary instructional strategies. This study explores the impact of integrating CT into K-12 education through diverse instructional approaches, including modelling, storytelling, and unplugged activities. The research examines how students' subject knowledge, CT concepts, and practices evolved under each CT integration practice, as well as their acceptance toward CT integrated lessons. The study was conducted in different subjects, including language arts, biology, and physics, and at different grade levels. The technology acceptance model was used as a theoretical framework to understand students' adoption towards the different integration practices. The study revealed that different CT integration practices yield varying impacts on students' attitudes, particularly in relation to their prior programming experiences. Namely, primary school students with prior programming experience display a higher behavioural intention due to a lack of early biases toward programming. Conversely, secondary school students, less familiar with interdisciplinary approaches, initially show less enthusiasm for future engagement. These insights underscore the need for tailored instructional strategies that consider students' prior experiences and the broader goal of preparing them to contribute to a technologically driven society.},
    author = {Sabiha Yeni and Jacqueline Nijenhuis-Voogt and Mara Saeli and Erik Barendsen and Felienne Hermans},
    doi = {https://doi.org/10.1016/j.ijcci.2024.100696},
    issn = {2212-8689},
    journal = {International Journal of Child-Computer Interaction},
    keywords = {Computational thinking, Integration, K-12, Instructional strategy},
    pages = {100696},
    title = {Computational thinking integrated in school subjects – A cross-case analysis of students’ experiences},
    url = {https://www.sciencedirect.com/science/article/pii/S2212868924000655},
    volume = {42},
    year = {2024}
}

@article{YILMAZ2023100147,
    abstract = {ChatGPT (generative pre-trained transformer) is one of the artificial intelligence (AI) technologies that have started to be used in programming education. However, the effect of using ChatGPT in programming education on learning processes and outcomes is not yet known. This study investigated the effect of programming education using the ChatGPT on students' computational thinking skills, programming self-efficacy, and motivation toward the lesson. The research was conducted on 45 undergraduate students who took a university-level programming course. The research was carried out according to the experimental design with the pretest-posttest control group. Students were randomly divided into experimental (n = 21) and control (n = 24) groups. While the experimental group students benefited from the ChatGPT during the weekly programming practices, the control group students did not use this tool. Research data were obtained through the computational thinking scale, computer programming self-efficacy scale, and learning motivation in computer programming courses scale. Research findings revealed that the experimental group students' computational thinking skills, programming self-efficacy, and motivation for the lesson were significantly higher than the control group students. In line with this result, it can be said that it may be useful to benefit from AI technologies such as ChatGPT in programming trainings. The research findings, it was emphasized how the most effective use of AI support in the lessons could be made, and various suggestions were made for researchers and educators in this regard.},
    author = {Ramazan Yilmaz and Fatma Gizem {Karaoglan Yilmaz}},
    doi = {https://doi.org/10.1016/j.caeai.2023.100147},
    issn = {2666-920X},
    journal = {Computers and Education: Artificial Intelligence},
    keywords = {Artificial intelligence, ChatGPT, Generative pretrained transformer, Programming education, Computational thinking},
    pages = {100147},
    title = {The effect of generative artificial intelligence (AI)-based tool use on students' computational thinking skills, programming self-efficacy and motivation},
    url = {https://www.sciencedirect.com/science/article/pii/S2666920X23000267},
    volume = {4},
    year = {2023}
}

@article{YOUJUN2022101143,
    abstract = {The current single teaching and assessing modes of English as a foreign language (EFL) grammar in China have caused the disconnect between grammar knowledge and competency with numerous errors in essay writing, somehow ignoring the analysis of learners thinking patterns. To solve the problem, computational thinking (CT), a higher-order thinking in solving problems and optimizing the way to acquire knowledge, was employed in the study. As needed, the experimental group was taught using the CT teaching model following CT principal elements (data analysis, pattern recognition, abstraction, decomposition, and parallelization), while the control group followed the traditional teaching mode. Quantitative and qualitative data were obtained based on the pre-test-post-test, classroom observation, and questionnaire survey. The results show that the grammar application in short essay writing of all the members of the experimental group significantly improved and that higher grammar learning agency and engagement were unfolded to show the changes of thinking patterns. However, not all the members from the control group showed similar results. CT serves as an important social mediation tool in EFL teaching. This study further enriches the teaching modes of grammar and is an effective attempt at introducing CT into learners’ thinking patterns.},
    author = {Tang Youjun and Ma Xiaomei},
    doi = {https://doi.org/10.1016/j.tsc.2022.101143},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Higher-order thinking, EFL grammar teaching and learning, Social mediation tool, Thinking patterns},
    pages = {101143},
    title = {Computational thinking: A mediation tool and higher-order thinking for linking EFL grammar knowledge with competency},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187122001456},
    volume = {46},
    year = {2022}
}

@article{YOUJUN2024101624,
    abstract = {Negative feedback can temporarily relieve negative Chinese transfer (NCT) in English as a foreign language (EFL) syntactic writing by focusing only on the surface writing constructs, neglecting that EFL writing is an embodiment of the process by which higher-order thinking operates. To solve the problem, the researchers conducted a pretest, interventionist group dynamic assessment (IGDA) in the form of negative feedback based on computational thinking (CT), higher-order thinking, and post-test quasi-experimental design, with a control group receiving the direct correction feedback instructing model to mitigate the NCT in EFL syntactic writing. We analyzed the syntactic writing types and frequencies of the NCT obtained through repeated-measure ANOVA and confirmed by qualitative data through video recording. The results indicated that IGDA in the form of negative feedback based on CT principal skills could (1) significantly decrease syntactic writing errors caused by the NCT, (2) improve learners’ EFL writing performance, and finally, (3) elevate the computer as an essential mediation tool. This innovative instructing mode of intervening with writing constructs and higher-order thinking and bringing about deeper thinking and creativity contributes to the EFL writing teaching methodology in a foreign language higher education.},
    author = {Tang Youjun and Ma Xiaomei},
    doi = {https://doi.org/10.1016/j.tsc.2024.101624},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Negative Chinese transfer, EFL syntactic writing, Computational thinking, Negative feedback, Interventionist group dynamic assessment},
    pages = {101624},
    title = {Relieving negative Chinese transfer in EFL syntactic writing through negative feedback based on computational thinking},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187124001627},
    volume = {53},
    year = {2024}
}

@article{YU2024101517,
    abstract = {There has been an increasing interest in the integration of technology into language education. Meanwhile, computational thinking (CT) skills are fostered which influence communicative language teaching and learning. Despite CT's established importance in science education, its significance in language teaching remains scarce. This study contributes to knowledge synthesis and methodological development by reviewing 16 journal articles, analyzing CT applications in language learning across educational contexts, intervention tools, CT skills, language acquisition, and assessment methods. The results indicate that (a) more CT-involved activities are needed for primary, secondary, and tertiary education, (b) educational robots and Scratch stand out as the most trending intervention tools, (c) CT skills such as decomposition, abstraction, generalization and so on have a positive effect on students’ foreign language acquisition, especially in grammar and writing, (d) assessment of CT development can be surveyed through a validated and reliable instrument such as computer programming self-efficacy scale or an online platform: Dr. Scratch; Conversely, there is a diversity of evaluation tools in foreign language learning. This study is the first to review experimental research on integrating computational thinking into foreign language learning and offers significant implications for future research.},
    author = {Xiaotong Yu and Roberto Soto-Varela and María Ángeles Gutiérrez-García},
    doi = {https://doi.org/10.1016/j.tsc.2024.101517},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Foreign language learning, Motivation, Second language anxiety},
    pages = {101517},
    title = {How to learn and teach a foreign language through computational thinking: Suggestions based on a systematic review},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187124000555},
    volume = {52},
    year = {2024}
}

@article{YUAN2025105174,
    abstract = {In-service elementary school teachers need training to teach computational thinking (CT). A common model for CT professional learning programs includes an initial workshop followed by ongoing support. However, little research has examined the efficacy of ongoing support, the most effective types, and its impact on classroom practices. The current study details a multifaceted CT professional learning program with innovative ongoing support to help elementary school teachers implement the Code.org curriculum. It also empirically investigated the impact of the support on teachers' self-efficacy in coding and teaching CT, the effectiveness of each component of the support, and to what extent it affected teachers' classroom practices. Our ongoing support included an additional workshop, grade-level professional learning community (PLC) sessions, instructional videos, and teacher leaders' support. Data included a pre-survey, four post-surveys, lesson observations, a focus group interview, tracking the number of video views, and surveys from PLC participants and teacher leaders. Results indicated that the ongoing support significantly increased teachers' self-efficacy in coding and teaching CT. Regarding the effectiveness of the various components of the ongoing support, the additional workshop significantly increased teachers' self-efficacy in coding and teaching CT. Teachers valued each component of the support, and this support improved teachers’ classroom practices.},
    author = {Jiangmei Yuan and Carla B. Brigandi and Karen E. Rambo-Hernandez and Catherine L. Manley},
    doi = {https://doi.org/10.1016/j.compedu.2024.105174},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Computational thinking, Professional learning, Ongoing support, Elementary school},
    pages = {105174},
    title = {Innovative ongoing support within a multifaceted computational thinking professional learning program improves teachers’ self-efficacy and classroom practices},
    url = {https://www.sciencedirect.com/science/article/pii/S036013152400188X},
    volume = {225},
    year = {2025}
}

@article{ZENG2023100520,
    abstract = {Computational thinking (CT) is gaining increasing attention from researchers and practitioners all over the world to empower children in the digital era. However, there is no consensus on which components of CT to teach beginning coders in early childhood education (ECE). To address this issue, we conducted a systematic review of 42 empirical studies focused on teaching and assessing CT in ECE. We analyzed the included studies with the three-dimensional CT framework proposed by Brennan and Resnick (2012) and demonstrated how this framework could be modified to fit the context of ECE. Based on this systematic review, we sorted out the CT components that were proven suitable for young children to learn by incorporating emerging components and removing components inappropriate for young children. We thus proposed a CT curriculum framework for ECE that covers CT concepts (i.e., control flow/structures, representation, and hardware/software), CT practices (i.e., algorithmic design, pattern recognition, abstraction, debugging, decomposition, iteration, and generalizing), and CT perspectives (i.e., expressing and creating, connecting, perseverance, and choices of conduct). This systematic review and its associated CT curriculum framework provide important theoretical contributions and practical implications for early childhood CT education.},
    author = {Yue Zeng and Weipeng Yang and Alfredo Bautista},
    doi = {https://doi.org/10.1016/j.edurev.2023.100520},
    issn = {1747-938X},
    journal = {Educational Research Review},
    keywords = {Computational thinking, Early childhood education, Three-dimensional framework, Systematic review},
    pages = {100520},
    title = {Computational thinking in early childhood education: Reviewing the literature and redeveloping the three-dimensional framework},
    url = {https://www.sciencedirect.com/science/article/pii/S1747938X23000131},
    volume = {39},
    year = {2023}
}

@article{ZHANG2023101314,
    abstract = {Computational thinking (CT) has gained increasing recognition as a 21st-century competency. Although initiatives have been taken to define the term for educational practices, limited empirical evidence is available to clarify its underlying components, especially at the primary education level. This study aimed to identify the associations between CT and specific cognitive skills in the primary school context. Based on the literature, three cognitive domains were studied (i.e., mathematical, visuospatial, and reasoning skills) and standard test batteries were applied to a sample of 633 primary students (aged 7–12 years). Linear regression analyses were performed with CT performance as the dependent variable to investigate its associations with the measured cognitive skills, and demographic features (i.e., age, gender) and coding learning experience (i.e., years of coding experience, extra-curricular coding experience) were included as control variables. The results indicated that the students’ CT performance was significantly predicted by their attainments in numeracy, visual perception, spatial visualisation, and inductive reasoning, and the results remained significant after controlling for demographics and coding experience. The study adds to the literature by enriching the understanding of CT as a psychological construct and has practical implications for educational stakeholders regarding the importance of interdisciplinary teaching and the integration of specific cognitive skills into CT learning activities.},
    author = {Shuhan ZHANG and Gary K.W. WONG},
    doi = {https://doi.org/10.1016/j.tsc.2023.101314},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Computational thinking, Primary education, Cognitive skills},
    pages = {101314},
    title = {Exploring the underlying cognitive process of computational thinking in primary education},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187123000846},
    volume = {48},
    year = {2023}
}

@article{ZHANG2024105039,
    abstract = {In the artificial intelligence age, cultivating young children's computational thinking (CT) has sparked tremendous attention. Programmable robotics is a developmental-appropriate and screen-free means that provides young children with great opportunities to learn programming and develop CT. However, it is reported that young children might have difficulties learning abstract CT concepts. As a helpful pedagogical facilitator, metaphors can help turn abstract concepts into more concrete and clear concepts that learners are familiar with. Therefore, this research proposed a metaphor-based robot programming (MRP) approach and explored its impact on young children's CT and behavioral patterns. A total of 118 children aged 5–6 were recruited in this experiment with two conditions: the experimental group adopted the metaphor-based robot programming (MRP) approach while the control group used the conventional robot programming (CRP) approach. Results revealed that children who adopted the MRP approach outperformed children who adopted the CRP approach on CT. In addition, behavioral analysis indicated that the proposed MRP approach could facilitate children's superior learning performance and more positive learning behaviors, so as to help them achieve learning objectives. Accordingly, this study can provide insightful guidance and inspiration for future research on effective programming teaching and CT development for young children.},
    author = {Xinli Zhang and Yuchen Chen and Lailin Hu and Yiwei Bao and Yun-Fang Tu and Gwo-Jen Hwang},
    doi = {https://doi.org/10.1016/j.compedu.2024.105039},
    issn = {0360-1315},
    journal = {Computers & Education},
    keywords = {Teaching/learning strategies, Improving classroom teaching, Pedagogical issues, Interactive learning environments, Metaphors, Computational thinking, Early childhood education},
    pages = {105039},
    title = {A metaphor-based robot programming approach to facilitating young children’s computational thinking and positive learning behaviors},
    url = {https://www.sciencedirect.com/science/article/pii/S0360131524000538},
    volume = {215},
    year = {2024}
}

@article{ZURNACI2024101576,
    abstract = {This study compares the effects of coding education with educational robot and unplugged coding activities on pre-school students' computational thinking and executive function skills. This study used a pre-test and post-test comparison group quasi-experimental design. The study was conducted in a public kindergarten with 48 pre-school students (24 educational robot- BeeBot® group and 24-unplugged coding group) aged 5-6. The TechCheck-K test was used to measure computational thinking skills, and Executive Functions Battery-Computerized Touch was used to measure executive function skills. The process started with pre-test applications and ended with post-tests after four weeks (16 different sessions) of the implementation in both groups. The study found a statistically significant difference between the computational thinking pre-test and post-test scores of pre-school students in both groups in favor of the post-test. It was determined that there was a statistically significant difference in favor of the educational robot group between the post-test scores of computational thinking skills. In addition, when the findings regarding executive functions were evaluated, there was a statistically significant difference between the pre-test and post-test scores of total executive function in favor of the post-test in both groups. However, it was observed that there was no statistically significant difference between the post-test scores of both groups in terms of total executive function skills scores. In addition, when the post-test scores of pre-school students in two groups were evaluated, it was determined that there was no significant difference in computational thinking and executive function skills according to gender. Consequently, it was determined that coding education with an educational robot was more effective for gaining computational thinking skills than unplugged coding activities for pre-school students. However, it was observed that there was no difference between the two groups in terms of the development of executive function skills in pre-school education.},
    author = {Burcu Zurnacı and Zeynep Turan},
    doi = {https://doi.org/10.1016/j.tsc.2024.101576},
    issn = {1871-1871},
    journal = {Thinking Skills and Creativity},
    keywords = {Unplugged coding, Robotic coding, Educational robot, Pre-school education, Computational thinking, Executive function},
    pages = {101576},
    title = {Educational robotics or unplugged coding activities in kindergartens?: Comparison of the effects on pre-school children's computational thinking and executive function skills},
    url = {https://www.sciencedirect.com/science/article/pii/S1871187124001147},
    volume = {53},
    year = {2024}
}
